(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    405546,       8265]
NotebookOptionsPosition[    396581,       7983]
NotebookOutlinePosition[    399032,       8048]
CellTagsIndexPosition[    398952,       8043]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 TogglerBox[1, {1->
  OverlayBox[{
   TagBox[GridBox[{
      {
       GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAKiEGSLED8//9/gvjRo0fsN27cELp69arY+fPnpZExPn137tzhBqrRBGJ/
ID4CxMfRMTZ9L168YL5w4YIaUD4AiC8C8Qcg/gvE/9AxFreC7PQD4gtA/BGq
7j8ujKz3+fPnLFC9b6H24dSHTf/FixfVofYSpRdZPzSsAqBuJkovsn5oOF8k
5F9s+h88eMBBjt0w/devXxcGso+S4m9k/ZcuXRKHpgeS3A7TD0wrkpToPw9J
ywOmn1L3Uxp+lMYfpemH0vRLjfwDjQey8y9a+fGOWDPwlF+gsPhEKDywlZ8g
d0D9EniexPITGd++fZv3PBnlN6764zxa3QHCAIDESDs=
         "], {{0, 26}, {16, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{16, 26},
        PlotRange->{{0, 16}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJzt2V1vVFUUBuBGTfTSSygthYYKNHyVinrrpbcYfwBEJN5gUkyMfw9KKaVw
KCkQKCW1RNIQKg1gEE3QtdN10pMRZCaBzNQ+kzxt5nzstfeZfbPOu/vkD8e/
e6+vr+/sR/Hn+ImfvpyYOPHz1x/Hl2/OnP3+9JlT33515sdTp09NfHHy/TjY
H6592Nf3QfyvqmpHBwbCYNr5GoMNAw2d1AEAADa3/obtLba1aJ7rb4xR9x1D
YVfYHYbDnjASPgn7wv4wGg6Eg+FQOByOhLEwnj4Nx8Jn6fM21dcfyzHq8cay
xuGseTDnMJpz2pdzHMk5D+caduWa6v6p+czafU71s6p1+/cGAADYqt52/9va
++6tXt331j3v0TTeoj5e966v6lv3Vv/uWfWr9LJm9tzMpN+UW3eaVV9s00yY
CzfC7bAQFhvuhjt57maYD9er9c+VcDlcCtMd1AQAADafqXQhTabz6VyL+vhk
Xl/uLX1D6UFmw9VwrVrvL0o/cqta7ztKD3Iv/BLuh1/DSngYHoXfwlp4Ep6F
38Pz8Ed4Ef5Mf71Gff5F3vM8x3iWY65ljUdZcyXncD/ndC/neDvnfCPXcC3X
NJtrnG48r3afU/2s6uc11QO/OwAAwFbzLvrfksWVjK30kSV3KxncUlgOD6qN
vnc1PK42+t7iaaq/r+U1q9VG3/ogx1rKse9krfmsrV+l15R9WDLmkjWXzLl8
yvuVsmdLJl3eu5R9XN7BNLPrhTxX3seUvT3TQc2Xbfr7LWq3JgAAwH95m33K
u9Dt5wMAAMDmp2dlK+vGnu/2+yQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYPN42aZu
1AQAAAAAAICtrNsZIXRTN/b8xTbNhLlwI9wOC2Gx4W64k+duhvlwvVr/XAmX
w6Uw3UFNAAAAAAAA6EVT6UKaTOfTuRb18cm8vtxbcrOSwc2Gq9V6FlcytlvV
eu5WMrilsBwehJXwMKyGx2EtPElPU/19La9ZzXtWcozlHHMxa9zKmnM5h9mc
03Rjfe2uq15bvb6pHvid2NzKPiwZc8maS+ZcPiWDLnu2ZNIlmy77uGTVzex6
Ic+VbLvs7ZkOau7owEAYTDtfY7BhoKGTOgAAAAAAANDr+hu2t9jWonmuvzFG
nbsNhd1hOOwJI2Fv2B9Gw4FwMBwKR8JYOJrGW9THx/LaQ3nvgRxrf449krWG
s/ZQtZH3NdfY7rrqtdW6/fvw/9LMnpuZ9Jty646y6n8AhCP7tg==
         "], {{0, 26}, {2000, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{2000, 26},
        PlotRange->{{0, 2000}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJy9lktLQkEUxyVdCBIELaxctYq+QduWbcKMPoCSRRsDC6JPp+Lj4vuq+EBc
iBtFfIYrpU7nPzQiN++9vmrgp/dx5j8z55w5c099z56HPYvF8mLnH4/37TIY
9L7fHvDNXeDl6THgv78KvPof/cELn5UfnjBHjI3J5/OudVBV9bhUKjmbzaad
iCxmcB9lAxKMmzmv1+v7JvpfG/DJjJkic8NrOut0OlYdfdoCjPXBqMx1q9Vy
7FhfgvX0MUa73bYZ6edyuTnrvPsZQ4Wv9PTRL5vNroTOGIiJu9FoOLT6UjuT
yVAqlaJkMin+0+m0YPEZbHTGQDwKyKtl+ugHjdFoRIVCgeLxOCUSCQGua7Ua
9Xo9YQNbozXI/aHVZ//RcDik2WxG5XKZwuGwANdo0JfrNIhDvFqtHi7zD+YW
i8VoMBgIvWKxKEDrdrtiHbAxiAF8pHAf5zJ9+Bca0WiUxuMxydbv98U64CvY
wNZgTyioI9r8QR/EEvrQUhRlrh8Kheb6sDHTZ1xG84ePMP/pdPpr/tvoL/of
Mcb9Jv7X+mcxP2X+QCMSiYh5VyoVMQbXMbP81I2vzM/JZCLyX+a+BPmPvbFN
fmr36pr713B/rVp7THy/tD6Y1cjF5zrahvVtB5jW5y21B/kVzpc1kecjfK53
Pu7kfNfO+x+/T/70++ob7NUEtQ==
         "], {{0, 26}, {24, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{24, 26},
        PlotRange->{{0, 24}, {0, 26}}]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {Automatic, 
         Scaled[0.6], Automatic}},
     GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
    "Grid"], 
   PaneBox[
    StyleBox[
     RowBox[{
     "Background", " ", "images", " ", "and", " ", "text", " ", "colors", " ",
       "have", " ", "been", " ", "adjusted", " ", "for", " ", "editing", " ", 
      RowBox[{"purposes", "."}]}],
     LineBreakWithin->False,
     FontFamily->"Helvetica",
     FontSize->12,
     FontColor->GrayLevel[0.4]],
    Alignment->Center,
    ImageSize->Scaled[0.5],
    ScrollPosition->{0., 0.}]},
   Alignment->{Center, Center}], 2->""}, "1"]], "SlideShowNavigationBar", \
"FirstSlide",
 CellMargins->{{0, 0}, {0, 0}},
 CellFrameLabelMargins->2,
 CellSize->{Inherited, 30},
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell["\<\
On the Stability and Motion of a Cube Balanced on a Cylinder
\
\>", "Title",
 CellChangeTimes->{
  3.559948400406288*^9, {3.7096088249372597`*^9, 3.709608844339018*^9}, {
   3.709833436681944*^9, 3.7098334401707973`*^9}, {3.709833498446479*^9, 
   3.7098334993777833`*^9}}],

Cell["Andre R. Guimaraes", "Subtitle",
 CellChangeTimes->{{3.7096107350440764`*^9, 3.709610746529478*^9}}],

Cell[TextData[{
 StyleBox["Sam Houston State University - Physics Department", "Subsubtitle"],
 "\n"
}], "Text",
 CellChangeTimes->{{3.709610749118103*^9, 3.709610773441532*^9}},
 TextAlignment->Center]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Introduction to The Problem", "Section",
 CellChangeTimes->{{3.70961636606215*^9, 3.7096163729617105`*^9}}],

Cell["\<\
A cube of side 2b and mass m is placed atop a fixed cylinder of radius R.
The cube is tilted by an angle \[Theta].
There is only static friction, and no kinetic friction (the cube does no \
slip).\
\>", "Text",
 CellChangeTimes->{{3.7096163770443983`*^9, 3.709616491370472*^9}}],

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
91zwoTxj40wPHTqk41UwnnTy5MnRTGIfK7oS3jrSJ598otdPn376aZk/f370
8azmjqJg877nGNOFuYtwrXLp0qX6GPsz0+XwlqVxHQplG/TpMyjz8PssvPDe
25gJ6NOnj45hR73LsK5NF8u+xw4cOKDlZ/TtQxsO2NybROCtS61bt077nLds
2TLanzCrOX+IjM3TBxh7+eSTT8qrtoCasN2GsmbzkwB+ok8PysXoQ2GP8XND
mXnr3y+88ILOM4y+GFn9nigr3vLv3LlzpV69ejpfSVa/p3Cz7yiMK0YbMcYY
79y5Ux/jdQi6FN72Y1xHR9sy5pe1dTdY1yL7DCxcuFD79o0dOzb6GL+X6HJZ
7mDOjDFjxuh6FQsWLNDHeK0znLz9bnr06CFVqlSRL774Ivp71qXoSnk/Q59/
/rm2D/ayxc6FY7bCxPteo08X+t2gj1dWvye6Et7PEj5juKaFDWPXM/+egsm+
ezAvE9qJR4wYwbIuxQzq7ZiLGdfU7XuOuRNcljfoO4F+N6NHj47+ju875TRv
+zLG6WEtrl27dkV/R8Fi7zXmX6pRo4auie19nChWrB3xvffe0+vpmBcemDvB
4P1uQRsx8sb63bBvOsWL5Q7Ga1WtWlVWrlyp95k7/uad8xZjNLHGN9b3Brbh
ULxZ7mANkHLlykWvpbPs7V+WN9OnT9fyzZo1a/Q+84ZcYbmDOfux3t/MmTP1
Pss7/mPfFWi3wfXw3bt3633Wp8g1lju4toHvxokTJ+p9lnf8w3Jl+PDhej3c
+p0zb8hVli+YBw7jb9AfHlgmd599ZyQkJEjjxo2jc/lxHAO5znIH3424njVu
3Di9zzFa7rJyzIwZM7SMamtLsYxKfmGfVfQXRP+dd955R+8zd9xjeYO2f5RN
rf2GeUN+Y+3He/bs0bZIfIcC61nusHoT+t9gfkjM1wbMG/Ir++xu3LhRP9OY
9wCYO/Fn89tgfanq1avLZ599Fn2cyM8sd5YvX67XQqzfIK+FxI+tZYZ2G/Tl
tLkgWb6hoLDP8kcffaTXRDBOIvPajhQbljeYEwltbVOmTNHH2ZeKgsQ7duft
t9+WZs2aRcej87s1dixX8BPZ711LkyhorFyDjHnttdd0vlN819rvKGd5cx9r
aWIuEu+4KqIgss89NqwR0L179wy/o5xj7fZYLxzzHtl9HncKOu9nHP3PrM8g
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
IOXHfnv+N2dlQpVIBuW6QV5ajSemInZ8xzLn0KFD0rJlS13nE1wb72kZiOtV
L774onOZSJQ9IuWcs1gvSWRt/0fktzeUlFEbjke+c1MkJfK1u6D1L+XqX18t
rT/Bc/2ZOQZtOC+99JK88MIL0fsusQxs2LChjBo1Ks57Q5RD0lLkrH6dbpKe
918vfyo9VLZGi/QrpMW1V8tV/1FX5uP09GndCqysM2bMGClXrpzedu3alWXO
Aw88IAsWLIjz3hDljLSUs+nXpNYNlMK/u15KDVguh84mRz7/y6TtTdfLL676
hTSbnV7Gd/Ayz0WzegqulxcuXFhvu7bmt2UO5lJF2xO4eG2N6PKlScrZ9HbL
z/uVlZuv/qVc9/v/lN/9+iq5Ktd/yDX39Zb1blU/Lpu1zy5atEgef/xxSUpK
0vuunNM2BgxrA+N6/nfffRfvXSLKfqhX4VRMXS8vFf2j3FCyr2yL3D00+h75
9VX3S8IP568lu3FaXhHLHPSzQx/fdevW6X1X2mkt+/bs2SP333+//PDDD3He
I6Lsl5Z8TtuEU74eKPf94QYpM/hzScS5uX2E3HltLrn/1W2RcxXngv9DxzJn
w4YN8vTTT+u4bXAlc2z/sD5w8eLF5cCBA3HeI6LsliZnz6YI/vfVKyXlD396
WIauSjzfaLNLXs9/neQqNECOSHo7g5+vV4Gd0998842OL0efZHAtc5CFTzzx
hPZbJAqStFRrqNkkLxf7i/z1yRGyT++f0XzZPqKg/DpXQem8IRgNOt4+vo0a
NZJZs2bpfVf66FjmzJs3T/sDHj16NM57RJR98PlOTUmWdWvXSu9nHpA/oO9x
7srS8e1FsvvYaTmHutS3Y+ROPP6XCjJoyOuydC/+pf+vle/bt0/Hlk+ZMkXv
u5Y506dPl3r16un6nURBYfUJfKeWq1xDmrRqI81qVZUKbcbImv3pv0uV7+TD
Du2kRf2npGylqvLWBjya5tvr5ZY5mCewXbt28sYbb+h9V/oF2nsycuRIadWq
lV6/IgoVt4Y/XjHLHJQfsL4e5tIB1zJn+PDh0rp1a2YOBRI+5xnmyjnrbStO
leSz//e7ZJ9nkGUO6lIY+9C9e3e970rmWB0PYzN69uzpXH9FIro0ljloN8G8
n7ZulGuZ8/zzz0vfvn2d2S/KWTanCrdgbxi33bRpU33PXSlPWMY8++yz8vrr
rzvTP5qIrtzAgQO1jw64ljmY32fs2LFx3hvKaXadEutao2/8pk2bZOPGjdwC
tq1fv17HFqANuVq1avqeuzK23DKncuXKMmHChDjvDeUkyxv0+2zevLmuu4b5
K0uUKMEtYBvGFJQvX17+67/+S6pXr67vu2uZg/6ANqcYBRuu4aDvJ8a5IH+4
BW/DuEnMFYg22jJlyuj77lrmoG6VkJAQ350homw1ePBgqV27tt52pT2H162I
gseuBfXv31/HF4BrmdO1a1fp06cPM4fI57zXnnv06CEdOnTQ265lzqBBg6Rz
585c84HI57x9ArGmAsoT4Ep5gmMfiILFMgdzknbp0kXrL+Ba5owfP17HvXM9
PSJ/s8zBtcm2bdvKsGHD9L4rmWN9Nj766CO9js/5c4j8zbuuHuaKsOvRrmUO
5ohHv8AjR47EeY+I6Ep45zhv3Lixrs8Lrs3Zhf7SjzzyCOdDJvI5y5ydO3dK
gwYNdL4ycCVzbP+2bNmi/aX3798f5z0ioith5QiMpatZs6Z8+eWXet+VOdgt
cw4fPiz33nuv7N27N857RERXwlt3wZimVatW6X1XMgewj8ief/7zn1oHBM5p
QeRPljko31SqVClajnApc6w9+7bbbouu+UdE/mSZM3fuXHnwwQe1/OBKW46x
/UEmTp06Nc57Q0RXwuookyZNkoceekhvuzKm3FiZq2PHjjJgwIBoThKRfw0Z
MkTq16+vt10Za2UsY8aMGaNzObm2f0R0cayMc/z4cS1DIHfAtbqV7ednn32m
6wdzzBWRP9m5jLlnGzZs6Fx/QONd9w/tyFzLk8if7FzevHmzVKhQQfvdgYvt
Jdamc+ONN0avlxORv1jm4Dp5oUKF9Ly2vjCusczBnNzz58+P894Q0eWw8szH
H38sefLk0duuXbMytq+Yz2LEiBFx3hsiuhIYS25rzLh6TcgyB/MFdurUKc57
Q0SXC+UarAWOOQLBlTksMrP63ieffCLlypVzss2JiH4e5sBCnxfMwweuXbMy
ljlYFwfXrpg5RP5i5zDGV1WsWFFWr16t9/1wLufOnVt27NgR790gosuAMZNo
P0b5xqVxnVlBTmJr0qSJ9km2x4jIP9599115/PHH9bar7ceZTZw4UerWrevs
dX0iyhrWisI1IIx5wLnrejnHoE8g5tIBZg6Rf2DedfSx27Bhg973Q1sO4Noa
5gzcunWr3mfuEPnDtm3b5B//+IdmjavXq7KC/cUaFW+++Wb0PhG5b8qUKToP
FvgpcwBzd1WpUkVv+6VOSBRmyJg2bdr4tqywe/duufXWW/W23/adKIxOnjwp
efPmja7d4rc2Eex/2bJlZenSpXqfuUPktvXr12vmgB/rJiin9erVS7p37673
/fgaiMJk+PDh0qJFC73t1zLChx9+KEWLFtXbro4TI6J01atXl/fee09v+61e
Zfu7a9cuueOOO3ScKss5RO5CmQDtrwcPHoz3rlyREydO6DXzUaNGOblGDhGl
lxGwlhXmIg2CmTNnSokSJfQ2M4fILVYnwfwzs2fP9l2dysvGe+7cuVNKlSql
48xx369tU0RBY+co6lMYR456iZ9ZXmLMWN++faVt27Z63y/jVImCzuZXx9ye
Xbp0CUSbq+UOrl8VL15c26nwuvxcfiMKCqtzFClSRFasWBHnvcke9powzhxr
kC5YsIBtyUQOsHlm1q5dq+PIg7Qmnc3B8dprr+n1f3B17QqisLD+clirE30B
g1CvMlbWWbRokbaN79u3Tx9jWzJR/OD8w3f/v//9b9m4caM+FpQ2D3sdGH/V
rl07HbOKx9gvmSg+rEyDuR8aNWokx48fj/MeZT97ja+//rpUrlxZb6NNJyi5
SuQndu0Y/eamTZsWyPPQMgdrINeqVUu+/vrrDI8TUWxY2/H27dvlscceky1b
tujjQcwde62dO3eW9u3b62OsXxHFlpVxnnnmGRk6dGggs8ZYmQbz6dSpU0fn
6gC2JRPFhvU7PnXqlNarPvvsM308yOegvbaWLVtG10JmXx2i2LB6Bc69bt26
RfusBLmsY/mycOFCqVevXrQuyXYdopxlbRvo+4f5Oz/99FN9POjnnpXtAG3J
w4YN09ss6xDlLDvHUMZ5/vnntV3Hez4GGcp3eJ2zZs3Sdiz0EYQg1ymJ4snK
OEeOHJGnnnpKxz9C0Ms4XpYvVatWlbFjx2Z4jIiyl5Vx+vfvL88995wkJSWF
7nzDMcBrnjdvno793Lt3rz4etuNAlNNwTqE8c/ToUa1XjB8/Xh8PY3uGlevK
lCmjawdCGOqWRLFk59no0aN1PGdiYmK0rhU2aNfBa3/77belWbNm2p4eljYt
oliwOR0OHDggTZo0ibZjhLGMY3A8MI8gxpujngXMHKLsYWWcCRMmaNsx5h4N
+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
ggKf5cOHD8trr70muXPnlpIlS2r/HnzfZu7jwfGBlyer44Zji+P+/vvvS4kS
JSR//vzy5ptvSmJiYobn8nhTkOE8QHszrrHfeuutOpccxiXbOtVezJ+fltXx
QbkFa3ssW7ZMy5V33nmnXvNGXz6OT6Cwwxo4KPugDfOJJ57QvvVog8Z3c2bI
o7C3M1i7WVZtu5hrFuPh0GcKcwKgDR9jvu36E1GY2bnjzY+VK1fq9/Ldd98t
TZo00fnmVq1alWEuXS/rVxLkDLLjlFX5BL/DscFxmzRpktStW1fy5csn7du3
17lBM/+NIB8nootlfdIyt+lMnjxZ617FihXT8RVYg+3dd9/V8wvf55lZ32c/
l4W8+ZK5T7DB/CJffPGFTJkyRduAsVYZjlGZMmVk1qxZGZ5rf8OPx4IoFiw3
vN/puL4+bdo0ncOnePHi2i7RqlUrPd/w3f7ll1/qnKpZwd9CltnfvFCdJJa8
dSPsFzaMXbpQOwvaZT7//HOdM6JPnz7SsmVLnT8WOYPbmL8afWyM/c14v04i
P7Gyj3dMqcG13nHjxumYw7Jly+q8CqiPYT4XrKOEuhjGgf3UOWfnuTePvJtl
wsWUmbwZYlvmv2fZh//mT+0X+uJt3bpVMwbtMJgvAq8NrxFtXfXr19fs2bNn
z4/+reUWyzREV8bGdllGZIZ2izFjxug8C1hHCeclbqNchH4oGIuB+VXnzJmj
a+kcO3bssvYBfRyz2i7nHEe5DPuN+SGQn23bttV9xTwRDRo00NeAeYrwOjBf
2saNG3/0N3A8mDNEOc/qJBcqM6CuNW/ePBkyZIi0adNG2zuwRradyygf1axZ
U9uIUFdBGwjGFmFeIKwziTl9cZ0H2YTNxm38FPR1wXNRD0Se4Jo0/h42/G20
Q2HcJDIEZRbsA/YF+4R9Q3s5xlMOHz5c56HGPHyZWbmP9Sai+LE6mGXQhSA3
UCdbsGCBtk0jazp06BDNJMwDZBuyoFq1arpeim1oP8Gag2inxU/vbbQv2fPs
33n/HjaUX1CWwXqpgwcPlqlTp2ouoY70U9exLWNYliFyk2WQXQezc/an7Nq1
SzZs2KD1l02bNkXrPOgjjQ1zz6MNBVmBvkP46b2Neps9F2Um1OHwN/D3sOFv
25xmF+LdV9t/ZgyRf3nbdq09Nx79ce2/722rZrYQhUdW15yyuu5kWZHVltVz
s/qbzBYiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIgqC/wXYU0WI

     "], {{0, 446}, {285, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
     Association[
      "Exif" -> Association[
        "Software" -> 
         "Created with the Wolfram Language for Students - Personal Use Only \
: www.wolfram.com"], "Comments" -> 
       Association[
        "Software" -> 
         "Created with the Wolfram Language for Students - Personal Use Only \
: www.wolfram.com", "Creation Time" -> DateObject[{2017, 5, 30}, 
           TimeObject[{20, 22, 54.}, TimeZone -> -5.], TimeZone -> -5.]]]],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{285, 446},
   PlotRange->{{0, 285}, {0, 446}}]], "Input"],
 "           ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnQWcVGX3x/f/vna8diA2JYKCpFICggLSSHdJd5cs3d1IS6Oi0kp3d4kI
SHfX5vnf3/PMmb077OLGzM69d8738xnY6Tv3ee55zjnPifdqNSv97X+CgoJa
PWH8U7pmu3wtW9bsUOZ5407Zpq0a1Gtat07hpq3r1qvb8tNa/zUenP9/QUHJ
jNsjxt8kCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCEKciYz09xEIguA0IiKIwsIefDw+8iY8PFz9v23bNurfvz+d
Pn3a9RkitAQhEOFLH6Jh7FiiqlUhH4iuXSMKCXnwtXyLDZYxf/zxB9WpU4f+
+usvdT8CAkwQhICD5cWpU0RZsxKhqiFub7xB1KoV0bp1ROfPE92/H/19EBm4
ecobljFLly6l6tWr05EjR1yvFxkjCIEIX/pr1mjZkjYt0ddfEyVPHiVvXn+d
qFkz/ZoTJ4ju3Yv+GRAruEHesIxZv349dezY0Xj9Cdf3iIwRhEAFPpjgYKL/
+z+iQYP0Yzt2EHXvTlS4MFGqVFHyJlkyogYNiBYuJDp69EF7KiwsUsmbu3fv
0ZUrV4z7MTh4BEEICFi1uHCBKF06oldeIVq16kG5cfgw0YABRKVLE6VOHSVv
3n6bqEkTop9/Jtq3jyg01PyuSEO+RLj1G0EQAg++9qGzQGZ8+SX0Dy17IBsg
M6LLDS1Lxo0jqlFD21Vm/aZ+faIffiDatSu6/wbfA7kFlUbkjSAEFrju+/fX
cqJTJ/2Ypx4DmcMywsyBA0QTJmjZ8sknLG8ilX5To8YFQ/fZQRs33or2HpY3
ot8IgrPh6xt71PC3vPoq0YYN+jGX2zbG97B+4ylvsH00Zw5Rixbh9NFHkDUr
jFtDSp78KFWvTjRwYITaozLDskvkjSA4l927tf6RM6e2b+Jqz5jlTfQto3Dl
v+nTZzl9+mk9Sp36qEu/iVD7U2XKEPXuHSXPGHyvyBtBcBa4nvv10zKmdWv9
mKedFBei6zdaCVq3bglVqVKZli37k1asIOrcOYIyZozy32BvHHtWHTpoP7Pn
cT0ouwRBsBvw7+K6f+EFUnIAxGYnxRXEweAzjh49TkuWLDG+46p6HLkEiPPb
tImoSxeiDz+MkjevvUaUP7+O+fv99+ifB/0GN5E3gmA//vyT6D//0XKG7SRv
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
dyd4C/bn1axJ9J//6JpnVrWT2B+DPIJ58+YZupf21gZKnL+v2bhR20lYZ3Cq
xU4SEgv7euHnS5tWzy/u/2dFElvbQYgdzAPYSVhnevTQj4mMERILz6Fff9Wx
vXnzWnuf0lzbwdsyxpd5j3bQs3CIb71F9NxzRLt2+a9Pn+As2Nbmeq1jxljX
TgIsSxCDV7duXdFjvAh6D2AOfPKJ9WIv/Y3ZRh84cCB999131L17d+ratauq
Xc8gvwXx53369KE2bdrQUiR9Ebn7mc6cOZPatWtHPXv2pC5dukTrc3rlyhVq
37499e7dW733NzhITe+FbwDv7dWrF3Xs2JFuI+nHBfqmdujQQT2H7//JVXiZ
3zt//nz1OD4br7uOpmkukJfTqVMndUz4/NkofGh676JFi9Tx4L14/tKlS+73
hhgKCc5FD0PxxbH/gKJTpvdCF2jVqo3xfB9j/WprzK9z5AppU/pCcHCwOo84
pkmTJkV77+rVq9X39u3bV/1/CsXFKWq9xnd269ZNnYvx48e7jwds2LDB0Mlb
u9/LvR55HDE++G787lGjRqnHOC9p69at6j34XVWqVKF9rkB31m/69++vnuvc
uTMNQ6KN6b27d+92fy/+3+9yavLzqHlVqVIl9b2DBg0iMwcPHjTOVSv1Xvy/
c+fOaO8dPny4+k7MuX79+qnHeO5hvJMnT67OQ/NmzWjLth34tXTLGOd7xmEj
zqdz507qN/dybebwuThx4oTxe13HbHzvunVr1TnGOOB/fCbOMc41xsqsL50+
fVqdK57vK1eujDaG6B2DscX7evbsapyTMCVjYCfdvHnB+J2xXyszZsxQcyou
18qCBQuivXfu3LnuawXn2nyt3LhxI8ZrJczPRhuPB9a0IUOGqHOGY8Q8Nx8b
ar9iPDAP8TtwjQH+7bh+8ZtxXjFm5vN29epVNYcwf/DehQsXRnsvzgXei7mA
OW4+b7du3VLjgOfw/b/88ku09/5qGCp4HJ+N1+E8M5AxmLc4Jnw+xsf8XsS7
4njwXjzPPlCAaxrnAmONY5/hKjYVJWOWG9/XnmrU6E+PPNKR8uc/r+J8Aa5Z
zB+cRxwT5qP5vcgXwjwaMGCA+n5PGYPvxPtxLia4io+wjNm0aZOaY3gvPsNT
xmB88F78blx/gK/l7du3q/diLcF7j7iKWLOMgWzAb8b1OhKNDU3v3bNnj/t7
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
CIIgCIIgCIIgCIJv+X8Deb7k
     "], {{0, 431}, {281, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
     Association[
      "Exif" -> Association[
        "Software" -> 
         "Created with the Wolfram Language for Students - Personal Use Only \
: www.wolfram.com"], "Comments" -> 
       Association[
        "Software" -> 
         "Created with the Wolfram Language for Students - Personal Use Only \
: www.wolfram.com", "Creation Time" -> DateObject[{2017, 5, 30}, 
           TimeObject[{21, 0, 16.}, TimeZone -> -5.], TimeZone -> -5.]]]],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{281, 431},
   PlotRange->{{0, 281}, {0, 431}}]], "Input"]
}], "Text",
 CellChangeTimes->{{3.709616509738852*^9, 3.7096165292307386`*^9}, {
  3.709617069636344*^9, 3.709617076795848*^9}}],

Cell[TextData[{
 "Note that the segment ",
 Cell[BoxData[
  OverscriptBox[
   RowBox[{"B", " ", 
    SubscriptBox["C", "m"]}], "_"]],
  CellChangeTimes->{3.7096165950660057`*^9}],
 " is the same length as path traveled by the cube on the cylinder (R\[Theta])"
}], "Item",
 CellChangeTimes->{{3.7096165727509394`*^9, 3.709616645829767*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Basic Equations", "Subsection",
 CellChangeTimes->{{3.709616654514223*^9, 3.709616658291273*^9}}],

Cell["\<\
By looking at the diagram, it is easy to derive the equations for the \
position of the cube\[CloseCurlyQuote]s center of mass.\
\>", "Text",
 CellChangeTimes->{{3.709616662433643*^9, 3.7096166939394827`*^9}}],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQmcjWX7x9X7Vm+97evb9m/ftFIh2kRJkn0JIUWWJEsqSqlQqewRRSKy
tNmlkJCyL5ElS8iafZmZs/z+z+++5zrnntNghjkzZ7m+n88x5nmeOctz7ud6
rv26ol6zig2Oz5cvX8v/eP9UfPLF4i1aPPlypTO9X6o817LRM8/Vf7r0c63q
P1O/RZF6//I2/ss7tsJx+fL92/s/FEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVR
FEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFCUTAoGA
eQSDwbx+K4qiKFFDRZyiKMrR4amJ8PvtTz4oT3NKpvp8PqSmpqoeqihKUkBZ
KvL0aGUpbXdC+TlhwgR8/vnn2Lx5cw6/U0VRlLzBlY0HDwKjRgH9+gFbt2Y8
zhOBng5pZWp25KnIUOqfnTt3RtOmTfH7779n2KcoihKvuPJw8WLgkUeACy8E
ypcHWrcGvvgCWLMm499Q9FGeUq4eSQy6MvT9999Hs2bNVIYqipIwiN+T9OkD
nHYawAmw8jjvPKBMGaBNG2DYMCtnI6EsTUsL66gZnz8sQ9944w3Uq1cPv/32
W4Z9iqIo8YqIMcq/p56ycvOee4DXXgOqVAH+97+wPD3hBOD++4E33wSGDwfm
zgX27s34fHweV0cVOen3+7y/GYaePXvizz//NNs0tqQoSrwjMnTlSis7KSvf
fdduY+hn5EigeXNr4197bUYd9Y47rL3/5ZcAVcudO//5/H5/MD0uFcSePXu9
Y3aa+JKiKEq8QzVQxNknnwCnnw783/8BY8bYfa6pvW8fMGMG8OKLwH33Addd
B5x0kpWlxx8P3Hgj0KwZMHaslaeRMSnxGbg5U4qiKPEMZRn9mKRxYysPq1YN
yz/JbaKcFZnH/+/ZA8yZA3TsCJQubeUu5elxx9mfl1wC1Kpl41ErVgC7dtnn
iXxt1xerKIoST7h6Jm32Bx6wMvStt+w2Nyf0UPoj/Z6035csAXr3tvL03HOB
E0+08vSUU4Crr7Z+Vcarli9P845P9eS2+EitTI7M6VcURYl1RFZRbo0YAZx/
vpV/tONJZjF2sf0lXuTmRVGf/esvYMECYPBgoHZtq5/myxcwsvn00324/vrx
KFp0MDp02Ixly2w+qoubz+++R0VRlFhDbOsDB4B69azeWL26lYMkK/KLx4i9
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
7Lbc8oUSN6Y0btw4DBo0KCZz7HObyNr9SHnHmSdMAePMPfZ4pS+GcX3pgXrF
FbbvFGdisScK5anm9CtKziC2Iu1G9slg7II24vTpdntuqoHxmmOf2xxurjN7
a/FeyJl7bdva/tnuzGj2mKZ+SjuDNVKUvy5u3oDKU0U5MuIHpW3ImAWvNc69
ZJ49yc1ryJWh7733Xlzm2Oc2Ei/KLF+KNVJLllh5yny1Bx+0Ob9uPKpcOVvf
z5wpzo2OfG55Xj39ipI5oodyDtvVV9trS+rjM+ujGU0SLcc+t3F7oGbWG4a3
I/pPX30VqFgxY8++006zdaitW9vvn/1SI5G+VRpjVBSL2IK8Jj77zObMUDcR
O561ibn7fjLm2H/44YcJlWOf27g6auQtiH25aMvT3q9UyfblF3lKfzhr+DlT
mnOjWSO1Z88/n1t1VCXZEZ8Xc2aqVbPXD3O3t2yx+3O7V2gy5djnNm5Of+Qp
pU+UPbbbtbO2Pet8KUdFpl53HdCypZW5zJnauvWfz689+pVkRK4l1m1ff729
XgYMsNs0npDYHKqOn3Vq7DH1yivWf8qaU6mRYkyKMX7OkRo61Nr7f/31zz7/
rj9B15CSqIiM5IN92JmfzT7BzCUkydSvPhnJLKffnR1N2Up5Oncu8O67QJky
Vn7+5z/hnKnzzwcqV7Z+IPpa2Vc6Mqdf80+VREV0B9plzNHmdcHrQWZ35rWP
S3Pscx83P9SVd5St9Iey/wx7nLIWivEo0U/5kzn+nCPFmtSFC22eh+T0R9aa
qixVEgGJufO6YM815mR/+GHe5gVqjn1s4Ob0iz3u6qe037luvvrK9kS55BJb
GyXy9NprgVKlbM8U2jXUZyOfX1HiGXcuEnMH6ee68EKrP5DczmkKvy/NsY81
RH4eql8J448LFgAjR9refJIfxwf79TMeRb2V+VTsPS3ztfXrVOIZkZ+0z1q1
suuduYESj3frqnMTzbGPbdx4EddIpM+c/lD2qRk+3MakChbM2AOV9W9ly9qe
KXKfVp1UiUfE7097jHFX2vFdu4bXdV7FkzTHPr4Q/TSznH7K2DlzbLyJ8pT9
vCUexd78GmdS4hnRM1mzwvgq4/Fix+dlPkpmOfbrmQwOzbGPB0Se8hH5dTFX
n35T9pYaONBuy81+NoqSU8iaZQ3Syy9bvYA6gvSeyMucJjfHft++fZpjH8fI
bBKuM8pU1uvT3ilaFFi82B6jeqgSb4jtRah3cj0znsoek2Lfq8ms5BQiI9m/
hv523q9p12t9qBKvuDKUefW041nXN3Om3aZ6gZJTSPyJcEYJZ0BxvTEfiuR2
LwZFyQnc2pT27a1ewDw+5u+58jUW0Bz7+Eb86rTjWefEeBJnk86bZ/fnVf6c
ohwL4lpkj94HHrB6AX2i7hz0vMSNKY0dOxafffaZ5tjHKSIjacez5zPv1y+8
EO7/pLdGJR4RnyftePpB2dP8u+/stliw4zXHPnGQ+zFT01hnTxkqdryGCZV4
RXSDN9+0a5r6gczWiQURpTn2iYH4jLjeeve2vfOvusr2LyFqxyvxhisj2dJY
Zn7QtiKS75zXaI59YiA66MaNts6Ta411oLxfE/0qlXjDlZG04887z/bdYd/d
yP15iesPHTlypKfD9NYc+zhE1hLz51i/wXiSrLW89rkrytHg+jqpe1IvYL9y
9t8RHTUWRFRkjv3u3bs1xz7OcHuUfP55eDYz45hE7Xgl3nDteNpSYluxjw5x
++4qyrEitzza8TJfpmbNsB2vt0Ql3nDzPtnnjrPHpGZZ6vFUhio5heR+MH7E
for//a/tO6I9RpR4ReKjhHNvqRdwTs7y5XZbrM68YVxJc+zjC3et0e/Otcb8
uVWr7DbVQZV4RO79rEVy7fhYiSO5aI59fCP3Y/ahrVfPrrUKFcL9bNQXqsQb
ru3EWY307XNWw7Bhdlus9R7THPv4RtYT539wvgzzQnv2DMtO/QqVeEP8oOzv
0KaNrU267z5bOyL7Y1WGao59/CHrjf7P44+3fevZ55vorG0lHpE1zZgoe4TS
tmKvEcaRYtG/rzn28YusJ87zfP75sB3P+3cs+o0U5Ui48fj5820PcbdmOXIO
eCygOfbxCb8aiRexj+Itt9i8+nfeCa9D/fqUeMPtPdahg13TN91kZzCSvJo7
dzg0xz4+cePx/frZezXlqKy1WLR5FOVIiOihHX///XZd0ydKW4skX81dEAF/
mvEThB7ehe/n9Z3Xby2OceuSuOZatAjb8XKfTr61piQCsm6pC7CHOH38zLEn
yacXBIyfIKk+ci7h+ow4J+mee+xae+218DpTGarEG+K/pz+fM49POsn2EHfj
8bEO9cSD3gc49lgS9U+f/cz7/8bGNX9gzdq1WLvuT/y1fScO+gOh45Ts4/pC
OTeec+cYj582Lbw/ue7XSiIga5rhGOlzV78+sG2b3R6rMjTHc+y9izcYTJeR
aYvxVeuyuPrMc3DhVZfjwosuwdWFSuPV77Zjpzk2DRo6zj5uzOjZZ+1aq1o1
HI9X+anEIyJD58wBzjwTOO00O0s+1nNMcjLHPhjwe9cvbxZBbJ/YBvULn4NL
7nkKzXuNxdfjvsWQ959B8XPz4cyGozDXCNEA0gJ6wWcHt58Na4clf+7tt+02
7cWgxCPu3Ln+/e2avvpqYM0auz8W4/FCzuXYB+CnDOV/t3yDF+48Afn+Vwav
TvszbLHvnosxjf8PFzUdhembuSGINL9e8NnBncHFfvWnn2572owfn9HGV5R4
QtYtTWDaVJShNWrY2WAklmuWcybH3rPf/QH4KA79K/Fdo1tw0pkFUPfrTUZ+
BtP24IAvgMC+zdi8aBTGLtmBbSnpf6ciNFtQfooMpa+Ia61WLeDvv+02PZ9K
PCJzuznTW3qPjRgR9k3Fgy1/bDn2Qfjon4MfvpU98NB/zsDF9b7GXJ4XXypS
Y/jzxxPuWtrs6fElSmS049UXqsQr1DO5dtkflGuas8DEjo/1dZ0jOfZBP4xJ
HvgLa3o/iDOOvx31RqzGQeqZ7KWH9Ah8MD1f1BO4fA1/gL97/0/zeecpyGg+
/N52H3XWGD5neYX4jPhgD5vzz7czZjjzQ2uTlHhF9IKtW4GnnrIytHx5YOdO
uz1W4/E5SdAvxQXzMKzOyfjPuZXxzq+7jdz0H7T7ggHKx0iF1Lngg4F/6Osq
DjIi8Un61xs3tmutUiVg3Tq7X+WnEm+49/6ffrL6J+Px9PWLDzTx1zV9ofZG
4Vs9Bh2LnorjHu2GSX/ZfQd8Vgt1/QKBA1uwbvlv2LDvIHZsXIOlc37HX8Yf
sgNr587F4j82Y6fE4RL/BGYZuR/Tjr/9ditDmYusOqgSr7j1IH362DXNtS09
xONtTR9djr2nP/rsB92zuC8ann4KjnvkI0zb5snNgA97Dvhg052CSNl5wLP5
05DyW2/UvvICVO7cAx1a1MD1x1+KRzp8jklzPkDF//4bZ9/8GN6dtx/7qYkG
/JpDirBPiA/a7ueea+fLTJxo98diPxtFORIiI/ftA5o2DdtWdCe6OSixjBtT
GjNmDAYOHJjNHHvK0HQ99I9v8eadJ+K4sr0wdavZggMpPEm7sWjSCLzRYCTW
7/QUzn0b8WWdOniidCm8Me1XTBjcGA9fcByurz4YI8cPQtead6PDjI0w7yLo
U98owrkfnI3A+vh//Qt44AFg5cqM+xUlnpB1O2OGreukXtCli91G+RnL8Xgh
R3Lsg+m64oGVmN72Ohx/anG0mrQ5pD+mevplnSKX48p632HDfj7xFkysfwvq
NO2Gmd6ve0d3x1uVGuCzhanYv/NPjHu1E6Zv3AFjzvv96hdFOMeYMz/uvDNs
x4sNH282j6IQyWkSO5597tg3lMR6PF7ImRx7xtfZXyQVB1eMQ6d7T8HZF12B
G+8qgQfuux03XHAFrirZGkPWHGRlEg7+OQRPFXkE7b9Z7f3FGnxSuxmatJnN
d4Gl0wbgqbYzsHu/6MdxcBJzAbFp6Hf/3//sfIRJk+w21UGVeMPtPcbY0XPP
WRlasaKnih2I/ZxQlxzrY+/polImn7p0CPq+1RLNm7XGC883xfPtPsXXCw7Y
nf512DWxEW6r8xW+pR26qycaNnoej/bY7J233/Hje2Vwwv81xMDF+0GxEVA9
NHQvph3ftq2Vn0WLAsuW2e0qQ5V4w5WR7HNXqBDw73/bHuIkXux44vpDv/zy
S0+n7nMMfextHCnzvwqaXPugbwdSFg3DRzNWYSXt+m2TMHryFHy5lsdswepR
H6BRg474Yvl+GNHgCeZ40OejichI5jDdcYe9X7PHt9hB8bLWFEVw+4j06GH7
1d98s/WLyv54ue6j0cc+yNqklBQzq94+vN/9wUxka/AQ/1cEN/eDMz/oc2dP
m8mT7TbNaVLiEVm3FDV16li9gPn18WbH5w1BW9cUSK+VD9pezbalqNVjfT6/
xuLTkbXEmFLnznatFSxoeyySWO7FoCiZ4crIFSuAYsXsuub6JszTU73gCATd
XiM2/15+5/9t3adCJB7/xx92vgz71b/4os2nI3q/VuIN17biTO+zzwYuvRQY
Ny48JyxeZWjO9bFXcgrxeU6dCpx8MnDWWcAPP9ht8eQzUhTB7dHYoIHVQR9/
PNyvPt7Ez7Hn2CvRRGo1mAvKtcY85A0b7D6145V4w7Xj6Y9ifgnXdbzl1buI
DGXs51j72GcFa7fnjvKUm68VDeRezR5gjz0GHHcc0KgRsGdPxv3K0cP14fcu
3MhHVo7LyjGR6y/Zj0lL85t4B/cPH+7HeecFTf8xqVlmPrjsj5X3fKRjZPuB
AwcOKUNz9hym2b53ufDZ6ZvIrdfKiWPc74OPlBR7zPffA+ecY3vdffUVQmtM
fh7peWLhGEVxoQ1Vr57VQStXBv78M6/fUc7QxVOoWae0nIN6EB09NDNy85rj
zCefmXWfBl8c9DMg779v11rhwnZWgnLsyJrbu3evqSn5+eefMXv2bMycORNz
5swxdhkRffOvv/7CTz/9ZPbJsQfTndVyzObNm7N8DPfxmF9//dXoL+4xW7du
xfTp0zMcs58FFtk8Ztu2baFjZs2ahV9++cXkL7rHbN++PcMxfEQe8/fff5tj
+BpyDM9bdo/ZsWMHpk2b4Z2fXzFhwixcffXP3rreg27dkD6Hjc+zEzNmzAg9
Dz8b8y2JyKOdO3ea74nH8DPxmF3pQ0Pktfg3kcfsTG9IKs+zxzPoeAz388H/
8z1GHsO/zewYeS05hvvefPNNNGnSJFSnJHmiPKc8hp+J74mfkefefZ6sHMPP
OXr0aLOGKKcXLFhgPiv38/vn++Z5l/fL5+H3wvXiPg+P5X6+Fr97vtYWFpI7
75lrtZv35UyZMtW8zjTvNf/asD5jD6i0A95r/ILpP8/CHO95+Fr8O/e1eA3w
fcg14R7j+kF43cyaFT6G15z7PHKMPA/PwcaNGzMcQ7157ty56d89r42fvPe+
EXXrUob6jf89GLTHTJ9ur3W+1oZ0B6k8D3X9efPmheQBj5G6iUMdw/fzZ7oy
IJ+Lx8yfP9+cXzlmXXqzUtePHnnM2rWmYCJm9VGb+2Hf/8qVK9GhQwfUrl3b
2GD8+dxzz4XWbmp6YsR3333n6UuVzfXBY5o2bRpal3LM957BIMfUqVMHjRs3
DsUW5JjJkyebY7iPxzRq1Ci0VuSYH3/8EVWqVDHH1PW+/IYNG4a+YzmG32nV
qlXN3z/55JN45plnQt+xyH9+t+4xDbwFJN+fHMPrqFq1aqFjnn76aaxJbyAv
sp3rVY5hHeNTTz2FP5go4hzDNVm9enXzXrmfx61Mb4gjx8ybNx81az5ujqlU
6SmcdFJdnHHGck+emndkjlmwYCFq1KhhPg+fh+do6dKlZp/cj5YsWeI9T03z
efh+eQy3uZ+LfyPH1K9f33xnixYtyvA8lEFPPPFE6Bj+f+HChRmOWbFihflb
vg6P4XPOTy/ol9datWqVeQ/cz/fNY3gtuMesXr3afJd8Hh5Tq1YtI1fcY3jd
8Dvg5+Y54nmgvHDPIX0E+fPnxxVXXIG77roL9913H8ZzmJoDr2N+Fr4GPxu/
O64X97W4nriP3xO/Vx7DdUfkHsrXzucpb1WqVMaLL76IiuXKYuoC795wcAN+
+uhd9Pz8O/T7eT1aNH0WDep567RRY+95qprrwH0tyma+hlwTVatUxLixo811
SHnPa5GykJ+7evUaaMhjvHUrn0vWPHUCXptyrfIa4Sxq9xjey2kH1Kz5hPda
3vtqUMW7Vsfg+uvZlzbVzJc5cGAHWrV63ju/T3j7mpjn+fbbbzM8D++3LVq0
MN8lr3Ue8zWHzDrH8H7WqlWr0DG8rjkLxj2G97fWrVub71KeZ/jw4RmO4T2Y
5/fxxx8PPc8XX3xh9vHcxLIcJZRxPDe9evVC//79zc9PP/3UfC4i92ReW7TT
BgwYYI7hT9GP5JjFixeHjvnwww/N84l+JMfwWucx3MdjPvnkk5B+JMcsW7YM
Xbt2NcdwNs/HH39s1oZ7DK8lHsO/jzwmLT3YyOtfjmH9Yb9+/cw6dI+hnKOu
Icd89NFHoXuDHEN5GXmM6CxyDGUEj+H74H4eJ/cPOWbVqrXeZ+6Onj0/xj33
fORdn73x6KN/pfcKtcdQxvfo0SP0PDxHcv+Qz04Z0bNnT/N5+vbta46R+4e8
Fv/GPYbfmdw/5Hl47+J2OYbHy/0/8hjujzxGXovngu+B+/lc3bt3D91jIo/h
Z+Jn42dcld4kVY7hd8Pv0j1G7kPu8/CafOSRR3D77bfj1ltvNXLp888/x6RJ
k8xn5Dr45ptvMHToUJMj8MEHH5i1Kf5NQl2a75XfE79XfndyrxJ7hjL+tNNO
83TrNzDsi6F4+/0+2LxyDOb0q4MHLvsfLs1/H/5X7RO80aMfPu3fB3369kPX
bl3Na7nvmdcAX0OuiW69+2PtuvRaWCB0vidOHI8RwwZgUP9P8EGXrliwcEGG
74LXJK9NuVZ5Hcn9TI6hTOZn7tGjl/ea/TFoUBdPfs0zdnyRIj7Te/ngwX3e
NTowdB3zGpF7njwPz8GgQYPM9y3HyD3PPWbw4MGhY/h+qNe7x/Dex++G36Uc
I/dFOYb36yFDhph1I8dQ/zHnJ0blp4v4qcVvLj8j3zvvB+4xfGTm8458nkjc
55HjsvI8R3o/h/LBZ+e1jnSM+3pHes+ZHeP322O2bvWjYEGft6593trk+Zfn
yNrz5NXnOtQxxH2ew30XWXmtIx1D2cTrjrKJdl+7du1QqFAhFChQAM2bNzey
kzo290f6Y/m7PA71nkUHnzZtGi644AJzPwgE/EgLBrDwwzJ4rFIldPltO7bP
+QTvP1YW3ZZuxP50H2laZueHn4ufx5/+uVJ2YNP61Viy7HcsX7rIk1+zMW/+
PKz6409s2MK+VJ6d6PNl6kuOvFYPdUxamj1m3z6fZx8EQnNiZa3Z2OaRnyeW
jlGSm6DTn5G5zuwhztmd6eZjaG3HO7RfczvHnrY3bWHa6++88w4efvhhXH31
1cbGpF5D3yz1afFPu74s+b+bw0T9iv+fOvVHnH76aVixfIXZ7v+tO6q0aoc6
w+zvviU/4KvG5dBz+UYY699/uP5QTGozhakIzOmCRvefhVNOPRvnnnUmzj73
fFxw4Xm44NyzcNrFNfH2xLUwmrA/eNT99+X0s89d/vzAKafY+TKhdxP76l3c
IGso8pGV47JyTGZ6RDIeY+tBgti5M4AXXqBeEEDRogFPxwmG9sfae87qMbKd
djL9arQzxcctx+bk+3F1lsh1SN2TNjl9m7RV6RO99tprcf/996NTp07GZqVN
LHZ25PPxd9FDp06dglNPPRVLlngyM7gXkxqVQbP2n2BCWsCzUbdi3pA+aJ6/
Jb5evh1pnOqckgpfZu/ZnCO/nTeadgD+nX9iaZ+HUeiSM3H1EwPw3bSfMGPG
T5g8phMev+hEnHD1M/hw0U7TB8Cf6sjlLJwfwpmmKSncF0CHDgEcd1zQ1BOn
p5ul59wf+Xmy8lq5eYyS3Iieyfp45pewz51ngiZEzbLIMcrQzp07Rz3H3kX0
x8z8B3w/tOknTpxo/KyMfxQvXhxFihQx9j/lbErEECHRVemPK136YXw18ktP
7nmyes8kvHXXlbjo1NNxZcHbcOtN1+Cic2/B9Q/0w+K/rTwO/GPmaOSb9Y5J
tT7A3cPq4O5bb0KpgXudA/ZgbddSOC9fMTwxaLn1kB9Iy3bdv5xyun6rV7c5
TU2ahOuVVDwp8YjIUNpWtOFZI58eKja1IvG8rl0ZevR97I8dkaWpJncz9R8y
lTGsESNGGDnPmDNj39RPGZtnrFhiiXM9XfX88y/ApZdcjK1bbAwyZUknlKr+
NO5t0AEfvNcFvdpWRa1yt+G2Tgvwp0kZoM/zcJ/Vyvo0M1vvdwyqeSmuvKYs
Xvl5F3bv2YZde/Z7pr4Pfw+6G/87+348M3yj1V8PHqqX6qHOQViGMgTEuk72
W+7b126jXI3ntaYkJ4H0vg5Mz2GPZcl1Tk8RDPXViVdcGXpMfexzGNdOj5Sn
zGNg7J55fcynYV4Rc2uYf/TYY48ZX+qE8ePSj/Zj+8gncE/r3uiWPqfFN3Mc
+ldrjG7LU7E/zX7Bh+21R33ZOxfGS7B/LJoVuhxXV+iNNaEDDmLDx1VR+Jx8
uLxBX0z9O2Bs+ezOMeG9Wu7X3leBE0+0c2J/+SX9fWttpxKHiIxkKo9nRpp5
ii+/bOcykHiPJ7m50uxjz9yko+9jHx0idVQX2vPM6Xz11Vdx7733oly5ciYf
6t23O6Fbj95YPP9XpI2qg4Y9x2AE0/n2j0THcoVxT+kxoNc36PPs7SM1K2WP
U8pz778HZrVDjatPw/EX3YcqTZvhuSbPoWnL5mj5QiM0f6EnRi3ba2NJwezP
MJH7NX+KHd+4sa2Pd3VURYkn5JJl6nUi9h5z40aMaTNmc6x97KMN5T7jSpH+
UEIdun37N/DoI6Xx8KPl0bRJE3RpWBS3lamLel0+w9DOT6Btp7YYlt5nKy0Q
yBCTyoxgUOKwAaz88CHcecnJOCd/SZR64AFPbhfG7YVuQqH6X2D8hoOg9e73
BY4qJi8vzzlJnN3J+7XE4+PdZ6QkJ3Lvp64pPcQLFAjXLMe7DpoISD5AZF4i
dcs/WfPQsyfKV6mG++/MjwtP/jfyXVAcNd/7Ditm/4QtW7f847n4PJTPrkwN
BuxMp6BvHSY2ug7/u7062v5qb67UNlNXj8QLFx6H4296HYNXWLme5gtkSw8N
BMJrjX3AOF/mhhvC82U0nqTEG67txNIezuykDG3YMDHi8YmExPddeSq6NH/u
23/A1D+PGzcOzzSoj0J33IHCRQqj6XPPYdTo0aY2iTmqmeX0B/0+Y8dTIvq3
f4OWN/8X1zzYDuO8NeDbvx17U7y/SVmH7xqcg1PzPYSXxtm8sECqP1u6qNg0
XFtVqti1xj536eV7CWHzKMkF16vomd5lZmLxF18MsOxYcu4TbU0nSh97N1c1
kpT9e7B9y0Z09/TTf3nGMuuj7vQMZ+aiMr7PGmPW+Yb67Rg7P2DmNGN5Zzxy
TX7c1uwbrPZ+DRzYZ3KYguvH4a27/oMT8zfHgEV0lNOez/o8E/d+zfLYa66x
MnTwYLst3uOWSnLiytB337VrmvNs0tseJYwO6saU2FOJNd2ROfbxiquXhvpb
pn/er776CpdccgkmTJhgasBZI1XRMzauv/56lCpVytTHr1y5Cj7Prjchp7Q9
WNajMK68qjjqDPwTfk8W79qXgr0b5mB47bNwcr5zcV+XRVhthGoay5SyjOiY
VJ0HDLCzO887L2zHqwxV4hGRnxQnVauGbSsivqtEwM1tyo0+9nkJe2jwM7Ef
B/P12ftNYCyNvbE4D4V9OHgeihS6HY8/UQ+bt/2FHWObo+Sl+ZDv+JNw1kVX
Iv/1N+DGW/LjmosvwUUXlUG7kTOwen967Smy5wuVmR5s8cO1xn71NWuq312J
b+TeP2qU1QlYI++paIZElaF5mWOfG7A2n7ppmzZtcPnll5ttlKuM77s6N/9P
m75x44a48JL/w8pVy3Fw+XgMHjgAA71Hv57v4e133vXO1zt4+90++GzsRps7
CuZAZX8mqaw1tuZinzverz0xb9BYkhKPcM1K2ozY8cwNTW8/lzDyk8Rqjn00
kN6ivFewpxNlZ2Q8X+QpHwMHfobq1athc1aaxzOOdaQ800wQXygfnPNx+un2
fq159Uq8IrEirmnaVrVrWxlav77dn2jxUdcfSh9hLObYHysiE6lzsicea5s6
duzozC1KMTX40uuZsHc3e0EPGPCp7XESYM8+q7OmpBw0MSf78H7PZgzeRcQ3
4+9PPmnXGu15md2pdrwSb7gx0kmTgKuvtj7+/v3tNn8czu48HJnl2GfWOzae
kTonwl787P1MeP8QGcr+66NGjQqdD8bWihUrFpqP4fbXy0nkVLOF9FVX2fr4
fv3COfUJchtTkghXz2RvpuOPB0qUsDknRNd0fOH2GGUeKGtC6bPg/AX6LyJr
nUTW8pgHH3zQ/D+afYVFho4ZY+uSLryQc2eQ/rpReUlFiSpyqTA9UPLqW7YM
556oDI0vKPsk17NkyZLmEVlzL31HpV8Ue0TR3mePKHmOaOqgHKfTooVda8WL
c2aj3a4yVIk3XDueY2NuvtnqBh99ZLcleu8x6mSS/5Mo8LOIrvnCCy/grLPO
MnlLnBHC/qSc4WTnb6SFaps4P4m9S2RWYLRkqIhyjhK87jpb39m1q811SqTc
DyV5EF2TUAU56SSArrP0MVwJqRdE5thz/kai5NgL8jk4N4+98N966y1cfPHF
OOecc0ydEmfnMWbPeXg8lnPzHn300ZC+Gi3/sLgRON6T9+qLLgLSx7cm5FpT
Eh/p+cD1W7myta2eey6sfyaISMlAMuXYC5wLyv6jnH3CuZWc08wZTswZ5Tng
3BH2JpXPH43zIH539rVjL0WutZIlKeftfpWhSrzhykjaVuwhTt1A8uoTdU0n
U4499Un6PSP1a+re1E3p/+Tc+os8hbBu3bpmnxvTz0nk1DIVV/rSMoZ54IC8
1xx/SUWJKrJmqXN+8IH1Td10UzjXOVHrRZIpx16Q/qP8zJGfsWHDhrjyyitN
Hb300I/GeZB7MvPq2ZeWZVNMT03UfjZK4iNrmnn1ZcqE7XjGTBN5TYt8oK7F
HPu+fftiQ3qCd6L4Qw8HP6PE0ugvrVSpEt58802zT+L5Of+aVg/l/fqVV+xa
K12aM/W0X70Sv4gM5cyPK66w6/rzz+026QmRiCRDjv3hcPNHqXs++eSTpu+I
6KrRQNYa1f0HHrB2/IsvhmOaKkOVeMOdYzNwIHDaacD55wOzZtn9UVJHlBhA
+ozyvtG8eXM0btzYxJxkX07DdSY5TUOGAKecAlx5JfDdd/J+EtfmURIX0Qt2
7w73uatXLzy7M1HjSUo4b2m39+Vz1vIrNK4RvZxQPqWot4whca2VKmXXnn3d
HH9JRYk6IiOXL7c6Afs3fvGF3ZZMekEi5tgfDjdeNHXqVDOz/uuvvw7F4nNa
hrq+zo0bgQoVrAxt2jTsc08iN4qSQMjaHjrU2vHsFzp7tt2X6Gs6GXLsD4Xo
oPzZvn17Y8uvXr06tC0aMlTW05df2nX2v/8BI0aE9yfJ7UtJIGRNs0b56aet
XlCpku1fTxJ9TSdjjr0gMpTx93vuuQddunQJzQ6JBq4Mlfr4cuXCefXJZPMo
iYP4phYvBi67zObqsT5eLqNEX9PJlGMfiXy+ZcuWmVol9r4jmc2tz5nXsz8p
Mx9+2MrQdPerWYeJvtaUxMPVCzivk2v6kkvCNcuJnNMkJGOOPZHPRv8v5ycx
t57zP0g0cprcHiLffGPX2Zlnhv3uOndOiUfc3mP060uus8z0TiYZmmw59mLH
s2c/53j27t07lOcUrT53rh3PuCV1UelLm+h+dyUxEZNtwQI705v1nd27h3WC
ZFjXyZhjz88qPs/58+fjxhtvxFg2TwKi5guVWmGOdCpb1t6v27TJmJusKPGG
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
1jz98APQrh1QqBBw/vm23zPlKXMG6SerWxcYPZq2ptVP5Tlc209+Rvv6S7Qc
e/kcmzdvNr2W33//ffP7gRSeyO1Y9c0beOjMuuj+4xwsX7Hce8zB4Fp3ouA1
VfDGz3tB6930esriiXfvrayL5/fMmg2NJSnK4ZFrx5V7rsyjb4w5qNRHOna0
8yBYYyr2/nnnATfeyJiH9bHyWFe/zaw2KqfkaaLm2IsOyscXX3zh3avqYtq0
H80+X1qqt92HtO1LMLHtA7jikrNxzgUX4Nyzr8EjTXphwvKt2G30T1+W85nc
2k72Vy5WzNZsMGcjcr+iKIfHtfcjxRDrnTh6YvZs4KOPbN6g1JtK/f4ddwCP
P25rpJYty/j3kflSxypPEzXHXmZ38nPRD9rOMwb27LGO6GDAb4s8WYe0ewF+
+m4sxowZg9HfTsXizelBde+Y7Hx6uYeS3r1tXJH3xWnTwvvj+JakKHmGXFvU
KzPrF8naFcYfWHPK3ie090WennKK9amyzvqDD2z/n8xyro4lFpWoOfaSW7B7
924UKFAAnzDRCOGZnkZ+ZhprD8Cf6oMvm+fStQ+knw3z6zlmRGJJKkMV5dhx
Y1GR19T69Xb+OC935sWwxlTkKe1Cxid4fXbpYo+LjEdJ7VV24r+JmmMvPeun
T59ufKE//mjteOl/FzrO7zMxJ3kcTR97105nXyb6vvmdebckg86dU5To4Ob0
R6Zkct4OY/fUPxmf4HXJfG2RqZSvnolq4r+cY7JuXca/F5tf6vgPRSLm2IsO
utO7ybz88sto27YttqYXkUVzdidPV9++tvbikktsbjDRfvWKEn1EnkpOvwsv
+7lzgV69AJbZMN/U9aGyRop53NxP/1v6qN8MuLmtGUVj4uXYy/tftWqVmTv3
OZvJIOwjzfnXC9+neF/jd/LEE8C2bRpLUpS8QvyokWoTt7NGivona0vvvtv2
QRV5es45Nk7Vpw88OxZYvTrch424sjqW6/iPFsmrJ7Tfb7vtNu++YgM7aVFS
COUcUtW99177PaSnUWlevaLkEW6MQnQZkXuC9EFlX8o6deDJC+DcczPGpFg3
xZpT9qJizlSEOzAkUxNFloqtvm/fPpMPyl53q3kjQXTmx7vfD/PSGBNkXcX4
8eFzqzJUUWID93qNtMmZM0U3Jn1w9J/edJPNk5K+0vz/PffYfEX2Babs3bcv
/LxWN03xtu33fgbiNhdH5s4tX77c9FpmbqjI1WjY8XLv4bmUPnfMr+DMQ9kf
j+dRURKZQ+X0C6x3YoyfvddeesnG80891V7fJ5xg9SRuY7+UiRMDpj41Lc2H
MWO+xYABn3j66l/pzx+Mu5wcyV36yfvw11xzjekZSqLl45WnZVkCe8vyHHft
qjqoosQTh6uxZ3yfpixdgrTpS5Swc87F3r/ggoCx9599NhXVqr2L+vWfxdq1
6Y3a2Os9Il8qlmWq1CVxxnOvXr1QpUoVbGNgB9GLx8v5YI8E1u/yXsW8M6I5
TYoSf0j+qdQyuXAb8xcnTbI5U+zPd845gXR5morTT38PV1zRzJM9v5uc//Xr
MzpJpS9RrMaiJJa0cOFC02Pks88+C8nOaOS6yvmlHd+8uc09Yx/EP/6w2zWn
SVHiH5Gpmalh1E9/+CFgakorV07FySe/4cnSp7zHbyZ3qmTJAJo2tbWLzK2K
FEOxNvdE5OVXX32FW265Jep2vOSg0Y4vWNDq9TyX3B7pX1EUJf5xddSwzLMX
+p9/+vHuu9+gUaOPUbPmBtOjL1++oJEL7OFWuDDQurXt4z9zpvURuPB5abvm
lY4qdjwf3bp1M7VJ7NdEopHTJP5Owt5cjNlxdifjdURnJilKYhOukQqm25yc
H3zAu/b3Yts2v/Gfco4pY8yM8UsPVD48FQ/PP29nVjJnijH+SChDcjNnSnTQ
PzxD+nnvzbF/Cv2iJBp2vDwl43ectcX8B+Y9MHeXxHmZgqIo2URsz8hrnzor
c/XZh5+9MNlTir3Z3Rop5vSMHGnnSzO/yhVZMqMt2n5UqYMfMWIEHnroIcyb
Ny+kl0YDOU/0L/Oc0Bf6+uth/TwWfBuKouQsrr3rPvz+gHnY32H+7/MFPNs8
6P20vdwDAeqrQSxfDvToAVSqZPVTt+aUfVA5N5r2/uLFtm4nsm41shdqTiF5
oR06dMDdd98dmgESrb4pIkMZg2ctAz87c8ncfYqixDbSm0jkhftw90k/Yvf3
yO0iT30+6zu0zymylXIo/KB83bcvgDVrAhgyJOjJzQD+7//8nn7q92Sp37Nr
A55+GkDJkkF06RLE0qXAjh22DsA+d8Ye/ccakxI5uX79ejz33HOmVyiJVn28
iGXeH+jv4P3j9tttHRjReLyixB6RuqMr97Jqs1qdMyxn+RyMt7DXCGsj2cd+
wIAB+PPPP41/0T3W5/MbeZoZ9AmyD+p33wENGgRx/fVBTz8NmpjUSScFcNll
QU83DKJt26CnqwVNT83ImtWjjWPLuSB8/7Vq1cL3HP6HcC/7nEZkJH2fxYtb
X3GrVvYe4caaFEXJXTKTk2EZZvtcsg4nMlcnbJPb43jMunXrPHt6scnvWbZs
macLLsU333yDjz76yDx69+5t5n6wppwz12vWrImCBQviuuuuw8MPP4w333zT
yFMe17dvX/OT+Zbz5y/wnm85Fi1a4j3/Es+2X4aDB9kf3mceqakBbNkSNLH7
N96w8SfJPz3xxFRcfLEPJUr40KaN39RI7dljfQXyiOwpfaScfleGtmnTBo8+
+qj3nHvM79Gy46XnwMSJtl/9BReE4/Fa26koeYPIQOkFfLjrn8fSbp0zZw4G
Dx5sfIAtW7bEAw88YPIi2e+tVKlSRp7wUaZMGfOgjsa5GHw0aNDAyM5GjRrh
rbfewuuvv27+pkiRImb+JeXRk08+aY6T49mf+bHHHjN16PLcpUuXQbFi9+GG
G25F4cJ34dln63lyuQ2GDeuHceOmYcSIJRg9ep/3u+3Px96a4j+9+mrgoYeA
Zs18+PLLVGzezHsDP7cVQtJn5XC2vuiZjMHz87DHiBANGSp6Jh+sU+Dn4GzB
9DQqzWlSlFxAdCfRGQ9Vh8i+wT///LMni8aZnEfKyeqeICpfvrz5SZlIudGk
SRPjB5R+wx07djQ65pAhQ8yD/TP5mDJliqdHzjePBQsWGBlMPZXxGNry9CPW
qVPH9LHfsmWLeW0eJ8f/8ssvniwchkGDBoWemzK8a9euRua2adMWTZs29+Rt
U0/eUuY+4b2vGt7vFVG2bHnPnm/oydm3vZ8jPLnzPc4+e22GntKeaMaLL8J7
jQB+/53BKBrNVq7a2UgZY/ty3yE//PCDORfMr5d90eoVSlif4N1CTO7sM8+E
4/FqxytKzmNjNdYWp7zKrG6G9ifnVtDOpqwU/Y9ygfogaxf5qFy5stneuXNn
fPzxx0Yustfw3xzEfAzwPY0ePTrDXM+jgfcE9iyZNWuWJ18/R/fufTy52gJV
q1ZGw4a10Lp1He9R13ymggXr49//buDJ0Cbeo5P3GOs9/sQVVwAVKgCvvgqw
ffLixTx/lKl88H4TSM/pD3p2tQ38t2rV0ujJ7F3v+opzEsnTIuyPxbx69m4d
NSq8X+14RckZRM88VJ0h5RR7C9HH2KlTJ0+utDZys2LFisZWrlGjhidDXsXA
gQONbFuxYsUR+2ZwP2U0H5RlkY/IOJEbw+dP2sOU5Twus1i/+Boye26+Zlbq
gdas2YBJk6Z4tvuXnnzthJdequ/J1nKoUoU+gTo49dTmnhx93Xv08R7jvd/Z
wy6A114Dvv4anj7M+w2fieeVr8f36vN0wgqeztvCvEZKlJp9uPEi9m+h/sy8
esbjpe+LylBFOTpcf2Zmso6x7pkzZ2LkyJHo2bOnZ7O+aORksWLFzIN+ScpL
xn9SI5MqHdzXcOPrsTI/LjIW5vp4D6cXbt26Gd99Nxavv94OlSo9jAcfvMOz
9x/DCSc09WRVZ+/xuaezfo9ChX5H27YHvPuKnePOnIA5cxZ5Omhl79z2NzJs
377UqNTxyymmms78WMrQJk3stiPNrVIUJXNEdkbKMM4lol9x8uTJRjZSZpYt
W9bMprj//vs9/eslMwOOsSHqf9Sd5Dn4nKE5k+myMrNcpmjW4Rwrh3qvrnwN
z9MM33MCAf5+0JODuzB16k+ejf4eSpSoggIFbsMFF9zrya1G3qMbjjtuFG64
YZ53Xv9CrVrtUb/+i5g9m42PeT6onwbSny9n9EPpWcWf335rY/HsWf/FF3Z/
rPRdUZR4wK2BcXNrmGdJfZN1hpzVfo9n6F111VUoXbq0iXszt4j91em7pNyM
lH9uHnxeyEjWS/J95dZMuvBnlJz/f/Z8Tk1N8e5Huz17eQO++upHVKvWDddd
VxsXX5wfJ510qydPX8S//nU1zjvvZVSpsgdffgmsXRvEjh0B04+fNr/9vo4t
p5/Hi3nQoYPVQTk7iXmxRO14RTkybm67IH7ElStXokePHihZsiSuv/56NGzY
EGPHjjXylPt27NiR4e8yqzGKVk744RD5T333W0/B+uSTT0Ixpdx8L+HzIfn8
/pBcZT99ewywffs+7z613rsXLUbnzjO8c93Sk6VneTLtUu/xkidLf8E11+xA
uXKpZi4fa1P377e1qtRR7etkXz+VY+mLrV3bylD2CRB5rPF4RckcN3/djZnw
d+qTzEOnnsm8SspNyiDGitauXZvp80XqsHmNyFD6YNnr6Nlnn8Xvv/+eYV9e
YeVduLYq8nxRnrVp08Gz459Cu3b9UKxYR8/Gv9+Tb0W9R3vP1l6Mm2/2oWzZ
IDp2pP80zXsesfOtTHXzpQ6V0+/KSNbHe7dIUyPPWfJEe4UqSuZILaQrS5hH
ybxI5hgxp/3pp582eUbMv6T/M/LvJW4dS3LTxZWh9D80a9YsZmRoJFLDv3//
QWPjHzy4D5UqPYZevbqbXvKLFm3FhAnfon//XrjrruY4/vhHPVla0nu8gTPO
WIeiRW1PFOZMTZzow4EDGZVH3iIzi0VJ31XCmX7S527ZsvD+GPtaFSVPEdnn
wvwi6miVKlUyOZutWrUytjvz1F0kFzRa/S5yGleGvvHGG+azyb0g1mSoIOd1
9eo1uPXWAhjO4dChelHL3LnrMHToMLz/fluUKME4VHXvUcN79MIJJ+w2NajV
qrFfnc/7bn3YuTPja/Cji47KB1+Sdf7ly1s7nrM/KGtln6IoCOU+Crt27TJ1
4pSddevWNTU8L7zwgom1R/pEGVen7IwHuekicpKfQfyhG9gEFLnrD80q8p54
rpknVtVTLFlDRax+mppur4eZP/8PfPBBZ7zySl08/HBtTz99xtj6nHlCeXjZ
ZZSnfs/eT8WXXwaRPo4+hOihrImnHc9eoWLHS+28oiQrrt4ocIYEc9+Zj1Su
XDkjP1lvGfl3krcei7Imq8h750/p35RbcfmjQWQ+vyPe0+hH2ZteaCl9pex3
yvtaqvnpsmjRUrz2WmtUqVIW115L/bQrTjppvvFvUp6yv3SpUj7veQNmdh/d
GuIGf+cd22OEfe5++QXpr5k7n1tRYg2JEbnyj/nt9HWy7px5SYwRuT7OeLPT
Ew23Pp66580332xyH8ih5L6NS/lNDqorT3ft2omPPvoAFSrc6+mmT+Lyy3vj
7LOnIX/+QKgvyskn+3DXXT5Phw2a2Sis5+d2zkGh/qm1nUoy4l6HAmfwjBkz
xtSh87qkvc64utj1rtyM5bz2RMeNybE+gT365nLgKI40P97t2e8P5fQHg35P
796DgQMHeLrnvahY8VE0adLP+/9s3HbbPtx6K3D66ZSbAdNXmrEk9hjhnFOi
efVKMuHmYxJec6tXrzZ57+yDdMcdd6B79+6m7+YBabju/F0yyM3czrHPLiIn
2c+K/QXYZ4r/J9mJf4XXgv1OaY/s3r0dU6ZMQJkypTz5eQs6dnwPo0cvRfv2
u0wu/VVXBT07P+DtC5j5UkRlqJIsuLVE/MnrjrlItNdLlChhfJ/sAUdfoBwj
eZyJLjsjc+zZC2rjxo1mW6x9duklQju+UKFCmESHJY6+z13GmSh8fr+5r/76
60947rmnUbDgTZ5N8rL3+0JvfRxE166cFRXEpk2Sr5+Tn05RYg+RnWKT8ydr
19nj4/HHH8fQoUOxcOHCDHZgMshNl1jOsY9E9GPmmdHnQpuBHKmf1ZEI+3fC
3/sff6zD+PETPF33RTzyyN146aVmWLVqTXo+UzC9t5X6dZTERXrPCdOmTTM9
5Rhj52yLX3/9NcOxtOdi1YaNJpE59uzlHIsyVGQVa8PYt599rmTmR059b26u
hbB27XoMGTLSk6GveOvnIXTr9l7I1yNzphQlkZCeR+E87NVo3ry50TvpP3Nz
4iXOnsy6RLzk2It9MHXqVHMvZN/6aPValtdzZSlld+/efb3z0wC1a9cxMS0h
We+/SmIhslPWMnWUXr164YknnjA905mzJFBeHKmfZbIQLzn28j7pi+HMKPbH
ItGWXXx+rhc5F7//vszEs5jbz/6Fi9jENJ0jzcFSlFgl0m6fMGGCyfFkXebb
b78d8odmpRdwshEPOfaibzJvgD3/Kb+2b99u9uXWe43sOcOaC96fn3nmGeMb
2iTD5XHs/llFyS0kdi5wdhpr2NnrmL1A2Kszs+OU+ELugZzRRJuCORUip/Ki
V6DIUuYJcB4fczuom/LeLbkdkb4ARYk1XJtp27ZtGD9+vPF5Un5yTpvYX2Jf
qe4ZvxxML0qnn4G9stj7n+TV9+rOLuCD/VZZl8H3xns4azYEte2VWEPWr6xh
1mc2bdoUhQsXNnme7nxLlZ3Zg7IqFm15qRPj/GXOt5dteS2f3PXFc0c9uUKF
CuY+PnHiRHMuDzUrRlHygshc+VGjRqFUqVJo37698e2LjZUs+fE5gZtjz5qt
WMuxl/fHvHr6Hj/88EPze6x8v5FrjTXC9DWwL3fHjh1N7y85TuWokldI/orI
SP588803Tb00Z+zKOiW6TrNHLOfYu3W2jNtUq1bN2B2x8N4ice/v/P/s2bPN
rOvq1auHcsUO1Y9fUaKNrD1CfYR+T8YW2MdT0By9oyOWc+zd3E/K9ooVK2aw
NWKNyNzkFStWmHs97fv+/ftn0PkVJTeQHHihT58+qFmzJl577bXQda6+pmMj
lnPsRRYxZlO7dm28yiEeOPr6+NzCtZnoJx00aJC557ds2TJDTpbe85Vo4uaG
bNmyBa+88oqx5eivk+2R8zqU7BOZY099KRb8oa5Ox1hhvXr1TMxG9sWyDBXc
uNfPP/9sbHv2jY60nxQlp3F1T6492pe1atUyc4aJ5t7lHK4siqW4vKvLsccB
40nir4kXGUrcfFL67ZlbQFvq008/DeWSJnu9sZJzuNcNazUHDx6MGjVqGF8Y
c0CJrrfkQGJJXAeMHdLPQNjfNB5xY0nsF0YfKX1SS5cuNds0bq/kBO6snLfe
egsPPvigmTtGuUrZqfIzOXD1TNZU0v5lDQWJV9tX8kSl9oN5+PSRMm7v9sFR
OaocDW5eCOuOOZODNdGs1XTruVV+RpdYseVlLbCWskmTJmjRokUofy3e14C7
jnmu33//fZQpUwbfffddKD6q+U9KdnDXFPvU8d7M+BFlqchWXVPRIzLHvl+/
fnkeU5L3RLl57733mn6hsj0R1oHY7TznvG8NGzbM5G3R5pI4aaJ8ViW6uLlL
zKWjzca+PLt37zbbVHZGn1jLsXfvqex7QL8h8wVcWyVRcPX977//3vj+WYfl
zkLU9a8cCreX0syZM43tTruGs8Kln7gSfWItx17um7Tj2QuJcWz6x0kiyhPx
8xPeM5j/xO+B1wHJa7+KEpu491fqGNQ/ef+VmGu8xg3ikVjLsRd5Ql9hgQIF
8NFHH2XYnoi4dSKML/E+xnuH9M+RvlWKQkR+cs188cUXxv/JXDkS2UtZiT5u
jj17uOR1jr28H84KvP32202shchMz0TFzevjPez55583M2ykB67qFQqRdUCd
h3Wb1HnGjBljtrm5yEruEUs59iI/+R66detmYvKMM5JkuLe61wD9F61atULj
xo1NrIDo9ZHciL3CeuHu3bubuiP6f2RfIvq6lOwhsnvNmjVm7hzteKmXTLR4
0qEIz2mGmc3CniWsc5W5TXqtJCeyJpirQp8ba/fE5xYLvXSV2EDWyYwZM3D9
9deb2Z0kGXRQFzdfhT+ZL8H6UJGjmveUPLj5nTt27MCLL75o4o4yK0Hz5mOL
vJxJJ69Jf0Lv3r3NvLeVK1dm2JdsuLm7PXv2NP3G2fuRqD6aHMgaYM0z580w
3iizcLRnXWwQKzn24utjH3jarpxLJPk9ySwr5DqRHnrMxefsRdmXzOcm0REf
Fh+Un4wzrlu3LrRPv/vYIFZy7CXuzlzh/PnzY+7cueb3ZNVBXdxrhb0fOfNb
dHSpv1cSC1n3zPdk3jznFMsMB/3OY4tYybEXnYq61t13342tW7ea7cnmCz0U
Mp+WP6mjMya7ZMkSs0/vM4mFfJ/8vjnLln4t6fuZiPV68U4s5NjL69BOYa93
znKj7erGqJXweaIcZQ+Bhg0bmhwGonV9iYHbS+Grr74y9UeSv6Tx99gkMsd+
wIABue4PFR2Ur88eI7/88kuG7UoYN+/p5ZdfNj2t/vzzT7NNdfb4xq1/Z69H
2hqjR4/+xz4ltsjrHHvXNqGNWrhwYTP7hahM+Ceubs7eZszD55wpt0e5En+4
dWrM7aP9PnDgQPO7xt+VwyHygLlvbdu2NbFH5nG4+5SMuPcd1nE1a9bM9Dtj
/rVeb/GHe19cvHixqX9nfJfo7ELlSDAezzXEfvWVK1fGpEmTQjJAZcGhcfUW
9hZo1KiRid/KNr3u4gexHWS2QZcuXUIxRPVlxRd5kWMvPYneeecdFCtWzORy
aO1F1nD1F+aE0X/GPj7iO9N7UGzj2hOc/8286Pbt25trQuduxg9ujv3XX3+d
qzn2IisptxkbYQ0bkZnIypFx+5RMnDjR5I6OHTs2tE/laOwi9z/6rh5//HHj
15ZZr/q9xQ95lWPv3oPZ3442DOukiMbjs4dr87Efb9myZTFr1izzu/bCj03k
O+NaZxyAOih1UaL9ueKLvMqxd3M1mJdarly5UM9hveazj3s+mZfNvlfSN1B9
o7GF2Ae85mgz8J4n+Xya5xt/5FWOvdyHqSfxHswH0TqMo0f8Z/wuWatA/8iG
DRsy7FPyHpGT1FV4r6MPm9vU9xKf5EWOvRsLYb0ieyGyJ7fs03V09IgfhHYh
8xzY70nm2ut5zXvkXsY8NPbXfumll0K9dfT7iU8ic+wZF4+27efOHGReI3VQ
7YeYM8g9iD8nT55s5OiECRPMPvWz5S2iZ3JuMWMPjP9pbYRyNLg9hsuXL2/m
BhFdRzmDG2Pq3LkzateuHfLPqG80b3DX/Oeff46HH3441IdJY6hKdnD1TMY8
OD+eMz+4TedX5hwSY+J1yzqmZ555JlT/pTZj7iN2F2NHvKexjlNsBv0+Egfm
2NM3E01dReQnr23motavXz/UK9Tamp6MDXDmuq1x86fPX+fDT/0qau8s8RB9
lD1JGCtkryepb1K9J/cQWblz506T98L8QekBqnZB/BOZY9+3b9+oxpRkzTCX
mP4g5sYZWyaT1zM6a4bfKRNy/C0lNOIDZf8fzmRiPyCidYS5gysnX3/9dVNL
JrM89DtIDHI7x16ek7N/WdvZq1evjK/lyUl/WipSvPeT5ktDWmqKqannw28O
8XRTXXZZRq5hnl/OqeIsEc13yj3kHDPfpWrVqiGbS3vRJw65mWMv910+2F+2
Ro0a+PHHH80+X8oBq3Pu+A1jXyyGu4oUxyPlH0LxIrfhllsLIv+tRVChTX9M
M2kgnlwIBNWuzyIiQ5lPw3pC1oSJ71l9cdFB1jmvK8aOqlWrZmofiOZHJBa5
mWMv92T6XatXr463337b/N+8lqdz0lAP7NuC375+Ba0evAj58p2Days+iw5d
38fL5W/Cpf89C3e2HI/fzaFpnsoaVNs+i8h1u2rVKmPTU/+n71t9ctFBzinP
O3uBcqYx+ztqL+XEw82xp88smjn2snY4K+mGG24w9RlEYpbBgD9dJh7Axo+L
44xbWuLThel/vH8y+pY5Hf85tRRemrkPqdRCaferGpUl3Nwa9he85557ImJ5
Sk4h9yX+5LnmTGuxt/RcJx65mWMv8UnmfhcvXhw///yz2SYzPYN+G5cPbJyO
oU+chEsa98LEdX74DvLa343pne7CGf+6DNVG7vGkbCBdhqoimlXEl0Kbvk2b
NqbfNXUjorpRziHnkj7/0qVLGxte8szUB6ocLaLvUgdt3bo1XnvttVCPEV/6
mvOnK5U7lnyJN4rdg05jV8JmNKZi64x3UeGGk3FCoSb4cq33N0j9R9xeOTKi
i3K2MmN67PMkM9CUY0f0T+oi3bp1MzPlVqxYYfZpPxHlWJB789KlS821O2LE
CPO7yTHmvTnogz1kF/4Y9RLuPq08mnUehp+W/IaFY99E/bvOwL+urI3WY+2s
pTS/p6+qAM02co3TD804PeNLnD8h+5RjQ2x12lh33nknfvjhB/O75jElB9HK
sY/sFXr77beHen35fHbNBf2pMK+6bxV+eu02nHH6f3DGeefi3NPOwH/zHY9r
aryFMeu8tQj2zoDGko4BuZ6Z812mTBlTDypze/Q6P3rkvG7fvt3EkGhvaRwp
8cmNHHuxE3nNMvbPnmzSb1bWlj/VZ+xy3+qReKXQiTi9ei+MXfQrvnr6Kpxy
2aNo9gOteh8OpvhU/zxG3Fg89STW2/LeRtTePHrknDJvjzG75cuXm9/VT5LY
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
vDdzdifXGPuWE5WhihBMn2tAeB+uXbu2idGTWF4nsvY5W0/mJ4n8VBmqZJXD
5diLr2j58uVGfrLXiGzTNaYIrgzlfCXmGMdD7obozrSt+J4///xz87vGk5Ts
cLgce5l3S53immuuwbJlyzL8jaIIsiZop7Cn/TvvvGN+j+V5biJD2W+ZOsKU
KVPM7ypDlewQmWPP/omSPy+9mthj5J577sGuXbtCxyqKi9s3lLYM52WTWM1v
4nuVvKa+ffuiQoUKWLVqlfk9Ft+vErscKsdetnNueIsWLYxeIf7RWPZxKXmD
mydE3+IDDzxg/i/34VhE3i/niLGfo6xv1UGVY8XNj+OMnJIlS5qZOUTtHCUz
uCak5oJ15/fee28oTyhW14vooeyTwt7ihPqB6ghKTiBr/+2330axYsV0xqFy
WFzbmPlxnMNFG4bEohx185vpv+XcRaJ5TcrRIn3sd+/eHboWZE4sbR3RMXR9
KYdCbGHGaNije/Lkyeb3WKzHkPfD9/zMM88YOUo0r0nJLm5MaeTIkUaHEP2B
MSbGKznr0O2DpyiZIbHG0aNHG71u4sSJMdm/w/VV0b5iv6ZWrVqZ31WGKtnF
zW1i3KhJkyZYsGCB2cacY/raI+NMipIZIkPZA4n9myhLY3Futvt+/v77byND
X3jhBfO7ylAlu7gy1J3NyOuB9g3tHCJz6hTlUIgM5Zwtzn0dMGBAaFssySVX
hrJPE/tGSz6rylAlu7gylH0XnnzySTMjdvbs2ahTp46Jy5NYzpVWYgOJNzKH
g7rdxx9/HPMylDYXZShnMRKVoUp2cf2hY8aMMfWclKe04xkXkNkyKj+VIyEy
dOnSpabvAu0aiU/GklxyZSh74lKGMs+eqAxVsosrG+n35IPXAmdzSawy8jhF
yQyRoezhwboM9kKSfI5YyolzZSh9t6ypYq8Uon5/5Whx+0bQvmFMgLNiZZ+u
K+VIyPpZv349WrZsGRcylLknlKFff/21+V1lqHK0uOvqrbfeMv6sNWvWhPbp
ulKOhKwf9lXg3ELOPJC+NbEqQ6l/UoYyD4uoDFWOFq4d5tdzLizr3lq3bm22
iz9LUY6EyCX6g9q1a2dikqzbILEqQ9lPh3FU+kWJylAlu8haYu4S7ZmOHTua
2k72UuRa4vWgKFlB1hLtd8pQ9mKOxVntrgxlLIkylHkoRGWokl1kzVCGvv/+
+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
L40bN5Y5c+boMfVtOcOuQ9CEVa9eXZYvX865S4QEHNtvQheM/qCYeQzog+Yc
s5fYx0EfWLt2bfVLAeu7wgE19uHC3WdCB4o4KPIi9J1yj503CQkJUr9+fRk3
bpzex2tSsHFzSpMmTZIhQ4ZQYx8C7HPfuXOn1tkMHz5cj1mPlHvcGaDvv/++
1nlt2bJFH2N+KbhQYx8+3H0nPu8uXbrI/v37mUvOA8wXhbalVatWqrPds2dP
qHtXBx1q7MOFaRpxW7FihdSoUUM++OADfYxxu7PHfX83b96sM1QsT8f6pWAS
q7FHXIwa++BivhB8ozp16mj+A1omVy9Ozg7Xjr766qvawzoxMVEfo58fPGI1
9u+99x419gHF9pPWG/Tuu++O9gblPjNvMVu5b98+ufPOOzXPgPvwPvO8Ci7U
2Acbs5PIc9x0000ya9YsvY/ndd5jfijs5syZM1V7++GHH+pjzNsFF2rsg4vZ
T8w57ty5s+Y78L37GMlb3DxS9+7dtRfFDz/8oMfc0xPiH6yeE+czNEyY67tr
1y59jHuO/MW0TujDij6j0EAg/ozPgu99sDCNPTQu9EuCg+sLzZ07Vxo0aCCL
Fi3SY2q/8x83V7d27VrNL7311lt6zHr6YECNfbBx5yNh/96vX7+o7eR+suAw
3RjmU6GGCTVhgP6K/6HGPrjg88M5is+2U6dOGo/7+eefozaU18iCw/JLx44d
k169eqkdxf6e1zL/Q419MHH38K+88ormhaljKlzcmcqPPfaYdOvWTWcwuY8R
/0GNffBwazYXL14s99xzj8ZpAM/VwsWuXx9//LHqRmfPnh3dL3Bf4E/ceCj0
a9TY+x/bq6MHF2aloVYG10hof/mZFi5mLxEfxbmGHnlbt27Vx3h98z/U2Psf
++zwFXtF6GmwdwTcw3sD+xwOHjyoWt22bdtG/Rb2LPA3zDP4G+v7CX8GvStR
D79u3Tp9jD6Ot7DPA3uFRo0aSd++faM9SfhZEVLwuOfemjVrtB+T1RbS//Qm
9rkgh3vXXXfJ6NGjo7W33Av6D2rs/Yubg//yyy/lwQcfVJ0vdDTUcXsX97NB
/8EWLVpoDwPAHJN/iNXYDx48mBp7n2H2E/N7oD184okn5Mcff8zwGPEm7v4B
vbRQx7R06VI9pj/qD6ix9zf2GaEGGzVI1tfCagx5HfQ+5o9i3zBo0CDVF27a
tEkfYz2u96HG3r/YuQedNvRLsJ+Yhwa4F/QX7rXwtddek5YtW0pSUpLeRzvq
bTLT2JtejTbUu5jOEKAXPXSgbm0EPzv/YbomzBjo0aOHtGvXjjEZHxCrsUdM
1Hoc8trnTayXHRg2bJjWIa1evVqP2d/X39jnCtvZtWtXtaPoceA+RrwLNfbe
x63jRJ0LtIULFizQY848CwbuzKsHHnhAZ4MePnyYs0F9ADX23gb203wRaGDq
1q2r9fCAPkpwwDlo+4mdO3dK06ZNNV9o9pN2lJCcA9/T9gfx8fHqf6KnMqD/
GTxczRPsaPPmzTXXhPwh7mctk/egxt674HwxvwR+Z/Xq1aMz4alfCi7u3v2b
b77ROazQPpn9ZMzNG7g5JcTXqLH3Fu4sCdRw3nvvvfo5WVyU51Gwcf1R6C7c
Plz2+fM8LVyosfcublwM/ifiYtBNuL2ZSPBxdRiwo9jX9+7dO7o2uK8vXKix
9yau/zFnzhypVauW2k/zPfjZhA9bDzg/0Qf/mWeeidpW2tHCgxp77+Hm32E3
sX+fPn16hsdJ+HD3JZgx2KZNG3nqqaeic65Zz1Q4UGPvLdwY57vvvisNGzbM
kD+i/SR2fUW+Hv1lnnzyyWgOgzW+hQs+G1zneJ4WDu77/uabb2r886OPPtJj
5o+Ii+Xr0cP56aef1hic1friMe7tCwdq7AsHV8OCuj7Ub0I/v2TJEr2P+k8S
i5tnwkwR1NcjH2w1v4B2lIQBN3eEeeM2x3jDhg16H/YFtJ8kK2J1Ndi7LFq0
KKrD596+4MD7jHN437591NgXELbGAXpMoJ4P9dGJiYnRx7n+yekwfxRrBTVM
EyZMUO3TjBkzomuH/mj+Qo194eDGNr/++mvp3r279ozELA/AHuYku7h1GPgK
LRxykeiJaD2feD3OP6ixL1hsvcN3gJ3cvHmz+p5dunSJzsdl7QnJDXbdhb1c
uXKlauKgVbQepMxL5g/U2Bccrr+A75E7uu2229RfsBnwsK1830lucdcOzmPk
7NFf1vojurkokjdQY18wwAewtYu+Lp06dZImTZpo3Ao9W+059D/J2eLOOMCc
QvR7Qp094u2Y2QSYa8o73HgotIjU2Oc97nrFe4y9e9u2bWXFihUZnkNIXuL6
m7hWY2Y2NPnuPpPrLm+hxj5vcdcofE34A5ghjr7k0D8A7t1JfuJqP5CvfPTR
R9WWxsXFZdiD0l/KG6ixzzvcvDqu+8i7169fXyZPnpzhOYTkN24MFDYVueMG
DRpoPB7zRux+XsuJF3A18/gee/fWrVvLQw89pH10gesbEFIQWD7TNB+ogatX
r57u7W2WPWCP/NzjauyZt8s5Vq9p13L00hkxYoTUrFlTY/mm02PfEFJY2PXd
rt/Ie6Dv0+23366xeVujgGs0+8Rq7DFrgBr7nOHqObFGEXdCzgizG9B7HvUj
ptvje0oKG3e9Ym2OGzdOqlSpIh06dJCvvvoqGh9ln/zsQY197jG7aHl3aJbG
jh0rlStX1uu7XYsA7SfxEpbvxJpEvnPp0qXy7LPPyg033KB2ALPVAOOkZyZW
Y9+uXTva0GwQG/fEGsS+HZrPKVOmRGuOGF8iXsa9tiO/hL0oejsj54T52wb1
OllDjX3OcXvR7dixQ3135NwHDhwoGzdujD6PeSPiB3CeW398gPMf85owfxv2
1M05UYv3a2I19tDeUGOfOW5v28OHD6vfDtuJONK0adOiz8N6pP0kfiNWL4L5
CbCh0JNilihqnoBppWgffg019pmDdeWuLexxEPNAjzGsLdhT4MaYCPErrq8A
ezBkyBDNj2LmCHrrubXJNqOZRKDG/hfsWuvqvNauXat7HPQVQ979iy++iD6X
tpMECVv/5k9hdlPnzp2lRo0aqtVDv3x3vTP3RAzLFbnrA9p4xDjuv/9+3bvP
mzcv+hj9dhJUzKdye5N+/PHHeg4gf/r222+rX2G6UntuWDUoYdbYm92MvZZu
375dY0LoB3jttdfKyJEjf7VewrhWSLiwuhA7P2Aj4EdAm3/ddddp70bMw7OY
FgjTnjYzjb3VJIbhPYitG8L1A708YTuh7yhZsqS8+OKL2mve9jbUHpMw4q55
fMX+Hnlo5AXKlCkjXbt21bn3bk2e+aRBPlfCqLG3z9Sdp4n/H/q48ePHy403
3ig333yzjBo1ShISEqJ6YxDU94SQ7JBZ7B92Ez4HZjGg3gn9IbDHN71U0Pf3
YdLY22cY63vu3btXc4+VKlXSnt+wo6jRtPwjYMyckIzE2kXUlUyfPl17lNWp
U0f7PsNPNXD+4JwKWh4/LBp70xG7nx9iFth/VKtWTR577DGNkX/66acZfo62
k5CsyUy/gngp4oI4tzCrGXOd0GfPjZeaLioIepYga+zNbsbmyND3C/sNxDvh
d2Omu1tfZJ8vbSch2cedd2NASw0dIHqPQ6/fq1cvWbhwYYbnuPOd/W5zgqCx
t5mZsfsFaDmxX0e/RNRdoJ/ngAEDotcLYFp6v3+OhBQmdg6659H69evVhlav
Xl3PP/Q3wRz2devWZfhZ1z/1ox3ya/4sK38Tteyoq0BeHbmy2rVraw3wu+++
myHWmZnNJYTkHrMlNgPcwEw81EWj/zN6RLVs2VJ9mTlz5kRrVtzfQQ1M/uBq
eWOvVZilvWzZMs2po66iVq1acsstt0jfvn2jmi3D7z43IV7H1enHagixB8R5
ivOzYsWKGl9DL9Ply5dHZ4W7v8dqqc1H9ZpdNY09ctRe0ti79tLqeGPfu4MH
D+qeYPbs2ZoTRI6oQoUK0rNnT+05Yz2Q3d/nV5+bED/i2lE7nwFsDTSFmzdv
1r5n2OtDk40+PtBLwTeFTXL3jVn9zsLCzSlNnDjRExr7M703uA92Ez2OYTuR
E0Lf4/Lly8szzzwjixYtUp3FkSNHos8321vY7zchYSer8xC+DmwP/FD0pYB/
Wrp0aZ0lPnz4cNXMYJ8JX8+0p26NYew57urA85PC1Ni7/2PsNcrtlYRj1D7g
epSUlCRTp05VPS/iKXiP8ZpxzcLrPnDgwK/+hhf9fkLCjp2bmeUjoI+CRnvG
jBnSv39/1VzifC9VqpRquJEfho4f9S+xdsqt287Mnua1XS0ojX1m/0Os3XT/
L4tHJyYmqn+MmnXsz/EeNm7cWPfsiJ0sWLBA7Wrs3wqKVoKQsODmkFzgP6Ee
Pz4+XuOn8FHhNyEvhXp95Inh/82fPz/DXL3Y3414AG6mZ82rfFV+aexdG2mv
GX/jTHUK8NfR26NVq1b6/iA+Ah0StBBDhw7VnB6uP64myf4e9fCEBAPTOGWW
m8H+dMOGDTJp0iS1WdiTIh+Fvmrocwrbivvj4uJ0Xqn1jj4dZl9NV+XGBzKL
E8T6t/aaYccxC8jV2Mf+XGz8wW74u/j7ZifPZMvgg8MWYg8O29isWTPNoaOu
4dFHH5WOHTtqnQPiIMizw7ePxWrH2FObkGDi5pRjdVIu2K9Czw8N/8MPP6wa
VHzFDX4h6hBhV2BbsX/Fc1FXg3zW2fhdpqu0G/xg1GOZPT5bzSTmXCIuADsJ
nSZ6vuN6gf8FujD4l3ZD3Bi5uNGjR2ueCDqyWGL1t7SbhIQP8+NgU7Py16CN
gh8Ke4K4H+pN0Ufojjvu0FggavlhV9GbH3noHj16qH0aM2aM5qShE4CvC13P
J598osem77F9dU70S/Z8y/Mg/og9N34//g5+/8qVK9VOIq//3HPPqQ+J14fa
BPiYeN3ws2+66Sbt4dqpUycZMWKE9ihwZ165mG3nHp0QkhnuXhl2Ajb1dLPM
4CfCdiGPgv0v4gDo3VeuXDntOYSeqLBXsFuIJ9pXxF/79OmjOSP08UeeC5rz
N954Q+0e+hShdgf5btg03Icb4pLQDeFn7OcQu4X9gw2HT2l/B74zbPz111+v
eR/UomM/jr8JPxS+JXQJWeHuy92eg/Q1CSHZJbY3W2z/6NjnurYX+3r08YMN
hC+I3D++wtailgq2FXYN88/hE8K3hVbg4osvlksvvVRKlCghRYsWlfPOO0+K
FSum98MWIj6Ln8EN+S/cEHPA77W/A20s7DD8UcRS4fNmtd92/5+stAeEEHI2
ZJbLyezm5nQM8+fcPBNii9BNIj7pfkW+Cjp19KPGV8QC4Gcihol4AnTqyOXg
ufZzuEG7brkju7n+c2y+ybWTtJuEEC+QlY09G9566y2Nv+7atStXP5+VrSeE
EK8TG1t1fUC37se9IfYIHxVfkY9HfyPEOZHzd+OzsTf397p/hz4lISRsmM2D
HYUNhebINPa0h4QQcnrcniOZaewJIYRkD6s1ou0khJCcw3gmIYQQQggpaOB/
oq+x1/rYE0KIl4ntY4+ao8LuY08IIX4hto89ZkEXVB97QgjxOwXVx54QQoKI
a0Off/557b+EvvvuY4QQQjLH7RWFvnpLly6NznVjPJQQQgghhBQE1puE/ich
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEJIwfH/xJnm
DA==
    "], {{0, 515}, {337, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "Software" -> 
        "Created with the Wolfram Language for Students - Personal Use Only : \
www.wolfram.com"], "Comments" -> 
      Association[
       "Software" -> 
        "Created with the Wolfram Language for Students - Personal Use Only : \
www.wolfram.com", "Creation Time" -> DateObject[{2017, 5, 30}, 
          TimeObject[{21, 0, 16.}, TimeZone -> -5.], TimeZone -> -5.]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{337, 515},
  PlotRange->{{0, 337}, {0, 515}}]], "Input"]], "Text",
 CellChangeTimes->{
  3.7096167182877407`*^9, {3.709616971509907*^9, 3.7096169715104074`*^9}, {
   3.709617091786621*^9, 3.709617091786621*^9}}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["x", "Cm"], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"R", "+", "b"}], ")"}], 
     RowBox[{"Sin", "(", "\[Theta]", ")"}]}], "-", 
    RowBox[{"R", " ", "\[Theta]", " ", 
     RowBox[{"Cos", "(", "\[Theta]", ")"}]}]}]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Item",
 CellChangeTimes->{{3.7096167595477037`*^9, 3.709616813766635*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["y", "Cm"], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"R", "+", "b"}], ")"}], 
     RowBox[{"Cos", "(", "\[Theta]", ")"}]}], "+", 
    RowBox[{"R", " ", "\[Theta]", " ", 
     RowBox[{"Sin", "(", "\[Theta]", ")"}]}]}]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Item",
 CellChangeTimes->{{3.7096167595477037`*^9, 3.709616829634362*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["On the Stability of the Cube", "Section",
 CellChangeTimes->{{3.70961715549404*^9, 3.7096171587000647`*^9}, {
  3.709617597941477*^9, 3.709617610257004*^9}}],

Cell["\<\
Note that for a small interval of \[Theta], the height of the center of mass \
of the cube rises slightly.\
\>", "Text",
 CellChangeTimes->{{3.709617168602461*^9, 3.7096172040626416`*^9}, 
   3.7096174134116592`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AutoCollapse", "[", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"$FrontEnd", "=!=", "$Failed"}], ",", 
       RowBox[{
        RowBox[{"SelectionMove", "[", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", "All", ",", 
          "GeneratedCell"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
        "FrontEndTokenExecute", "[", "\"\<SelectionCloseUnselectedCells\>\"", 
         "]"}]}]}], "]"}], ")"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"posCM", "[", 
     RowBox[{"\[Theta]_", ",", "r_", ",", "b_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"r", "+", "b"}], ")"}], 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{"r", " ", "\[Theta]", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"r", "+", "b"}], ")"}], 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"r", " ", "\[Theta]", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}]}], ";"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Function", " ", "to", " ", "draw", " ", "square", " ", "section", " ", 
    "of", " ", "cube"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drawSquare", "[", 
    RowBox[{"\[Theta]_", ",", "r_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"EdgeForm", "[", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Blue"}], "}"}], "]"}], ",", 
     RowBox[{"FaceForm", "[", "]"}], ",", 
     RowBox[{"Rotate", "[", 
      RowBox[{
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"posCM", "[", 
           RowBox[{"\[Theta]", ",", "r", ",", "b"}], "]"}], "-", 
          RowBox[{"{", 
           RowBox[{"b", ",", "b"}], "}"}]}], ",", 
         RowBox[{
          RowBox[{"posCM", "[", 
           RowBox[{"\[Theta]", ",", "r", ",", "b"}], "]"}], "+", 
          RowBox[{"{", 
           RowBox[{"b", ",", "b"}], "}"}]}]}], "]"}], ",", 
       RowBox[{"-", "\[Theta]"}]}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Initial", " ", "Values", " ", "for", " ", "\[Theta]"}], ",", " ",
     "r", ",", " ", 
    RowBox[{"and", " ", "b"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"b", "=", "1"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Function", " ", "to", " ", "numerically", " ", "find", " ", "critical", 
    " ", "angle"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tcrit", "[", 
    RowBox[{"r_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"t", "/.", 
    RowBox[{"FindRoot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Tan", "[", "t", "]"}], "-", 
        RowBox[{
         FractionBox["r", "b"], " ", "t"}]}], "\[Equal]", "0"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "1.5"}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Diagram", " ", "of", " ", "problem"}], ",", " ", 
    RowBox[{"manipulating", " ", "\[Theta]"}], ",", " ", "r", ",", " ", 
    RowBox[{"and", " ", "b"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Graphics", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"drawSquare", "[", 
            RowBox[{"\[Theta]", ",", "r", ",", "b"}], "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{"Section", " ", "of", " ", "Cube"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"Circle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "r"}], "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{"Secton", " ", "of", " ", "cylinder"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"r", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{"Line", " ", "of", " ", 
             RowBox[{"Cylinder", "'"}], "s", " ", "Radius"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"r", "+", "b"}], ")"}], 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"r", "+", "b"}], ")"}], 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], 
            "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{
            "Line", " ", "form", " ", "center", " ", "of", " ", "cylinder", 
             " ", "to", " ", "center", " ", "of", " ", "mass", " ", "of", " ",
              "cube"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"posCM", "[", 
               RowBox[{"\[Theta]", ",", "r", ",", "b"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"r", "+", "b"}], ")"}], 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"r", "+", "b"}], ")"}], 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], 
            "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
             "Line", " ", "from", " ", "center", " ", "of", " ", "cube", " ", 
              "to", " ", "extension", " ", "of", " ", "radius"}], ",", " ", 
             RowBox[{
             "passing", " ", "through", " ", "the", " ", "tangent", " ", 
              "point", " ", "between", " ", "cylinder", " ", "and", " ", 
              "cube"}]}], "*)"}], "\[IndentingNewLine]", "Dashed", ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InfiniteLine", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Vertical", " ", "y"}], "-", "axis"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"InfiniteLine", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"posCM", "[", 
               RowBox[{"\[Theta]", ",", "r", ",", "b"}], "]"}], ",", 
              RowBox[{
               RowBox[{"posCM", "[", 
                RowBox[{"\[Theta]", ",", "r", ",", "b"}], "]"}], "+", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0"}], "}"}]}]}], "}"}], "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{
            "horizontal", " ", "line", " ", "going", " ", "through", " ", 
             RowBox[{"cube", "'"}], "s", " ", "center", " ", "of", " ", 
             "mass"}], "*)"}], "\[IndentingNewLine]", "Red", ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InfiniteLine", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"tcrit", "[", 
                  RowBox[{"r", ",", "b"}], "]"}], "]"}], ",", 
                RowBox[{"Cos", "[", 
                 RowBox[{"tcrit", "[", 
                  RowBox[{"r", ",", "b"}], "]"}], "]"}]}], "}"}]}], "}"}], 
            "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{
            "Line", " ", "indicating", " ", "positive", " ", "critical", " ", 
             "angle"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"InfiniteLine", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"tcrit", "[", 
                   RowBox[{"r", ",", "b"}], "]"}], "]"}]}], ",", 
                RowBox[{"Cos", "[", 
                 RowBox[{"tcrit", "[", 
                  RowBox[{"r", ",", "b"}], "]"}], "]"}]}], "}"}]}], "}"}], 
            "]"}]}], 
          RowBox[{"(*", 
           RowBox[{
           "Line", " ", "indicating", " ", "negative", " ", "critical", " ", 
            "angle"}], "*)"}], "\[IndentingNewLine]", "}"}], "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1.1"}], 
              RowBox[{"(", 
               RowBox[{"r", "+", 
                RowBox[{"2", "b"}]}], ")"}]}], ",", 
             RowBox[{"1.1", 
              RowBox[{"(", 
               RowBox[{"r", "+", 
                RowBox[{"2", "b"}]}], ")"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1.1"}], "r"}], ",", 
             RowBox[{"1.1", 
              RowBox[{"(", 
               RowBox[{"r", "+", 
                RowBox[{"2", "b"}]}], ")"}]}]}], "}"}]}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], 
      "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"posCM", "[", 
            RowBox[{"\[Theta]", ",", "r", ",", "b"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", 
            RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "6"}], "}"}]}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\[Theta]\>\"", ",", 
             "\"\<Height of \!\(\*SubscriptBox[\(C\), \(m\)]\)\>\""}], 
            "}"}]}], ",", 
          RowBox[{"Ticks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{
               RowBox[{"-", "\[Pi]"}], ",", "\[Pi]", ",", 
               FractionBox["\[Pi]", "4"]}], "]"}], ",", 
             RowBox[{"Range", "[", 
              RowBox[{"1", ",", "6", ",", "1"}], "]"}]}], "}"}]}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{"Dashed", ",", "\[IndentingNewLine]", 
           RowBox[{"InfiniteLine", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\[Theta]", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[Theta]", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
           "\[IndentingNewLine]", "Red", ",", "\[IndentingNewLine]", 
           RowBox[{"InfiniteLine", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"tcrit", "[", 
                 RowBox[{"r", ",", "b"}], "]"}], ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"tcrit", "[", 
                 RowBox[{"r", ",", "b"}], "]"}], ",", "1"}], "}"}]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"InfiniteLine", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"tcrit", "[", 
                  RowBox[{"r", ",", "b"}], "]"}]}], ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"tcrit", "[", 
                  RowBox[{"r", ",", "b"}], "]"}]}], ",", "1"}], "}"}]}], 
             "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "//", "Row"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", ",", "2", ",", "\"\<R\>\""}], "}"}], ",", "0", ",", "10"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", "1"}], "}"}], ",", "0", ",", "10"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"AutoCollapse", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.709617228251217*^9, 3.7096172441437416`*^9}, {
   3.7096174899366684`*^9, 3.7096174915073247`*^9}, 3.709617527715443*^9, {
   3.7096520096904583`*^9, 3.709652095247659*^9}, {3.70965216107729*^9, 
   3.7096521620309563`*^9}, {3.7096722660108213`*^9, 
   3.7096722914286385`*^9}, {3.709672323704427*^9, 3.709672324127544*^9}, {
   3.709672364239831*^9, 3.7096723646569757`*^9}, {3.709672860573922*^9, 
   3.7096728635809145`*^9}, {3.7096730149194965`*^9, 3.709673017971609*^9}, {
   3.7096732485463657`*^9, 3.7096732489775133`*^9}, {3.7098328592640257`*^9, 
   3.7098329014008846`*^9}, {3.709833450872922*^9, 3.7098334746183815`*^9}, {
   3.709833510910347*^9, 3.7098335359856777`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`b$$ = 1, $CellContext`r$$ = 
    2, $CellContext`\[Theta]$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Theta]$$], 0}, -Pi, Pi}, {{
       Hold[$CellContext`r$$], 2, "R"}, 0, 10}, {{
       Hold[$CellContext`b$$], 1}, 0, 10}}, Typeset`size$$ = {
    1152., {212., 220.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Theta]$21584$$ = 
    0, $CellContext`r$21585$$ = 0, $CellContext`b$21586$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`b$$ = 1, $CellContext`r$$ = 
        2, $CellContext`\[Theta]$$ = 0}, "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$21584$$, 0], 
        Hold[$CellContext`r$$, $CellContext`r$21585$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$21586$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Row[{
         Show[
          Graphics[{
            $CellContext`drawSquare[$CellContext`\[Theta]$$, \
$CellContext`r$$, $CellContext`b$$], 
            Circle[{0, 0}, $CellContext`r$$], 
            Line[{{0, 0}, {$CellContext`r$$, 0}}], 
            
            Line[{{0, 
              0}, {($CellContext`r$$ + $CellContext`b$$) 
               Sin[$CellContext`\[Theta]$$], ($CellContext`r$$ + \
$CellContext`b$$) Cos[$CellContext`\[Theta]$$]}}], 
            Line[{
              $CellContext`posCM[$CellContext`\[Theta]$$, $CellContext`r$$, \
$CellContext`b$$], {($CellContext`r$$ + $CellContext`b$$) 
               Sin[$CellContext`\[Theta]$$], ($CellContext`r$$ + \
$CellContext`b$$) Cos[$CellContext`\[Theta]$$]}}], Dashed, 
            InfiniteLine[{{0, 0}, {0, 1}}], 
            InfiniteLine[{
              $CellContext`posCM[$CellContext`\[Theta]$$, $CellContext`r$$, \
$CellContext`b$$], $CellContext`posCM[$CellContext`\[Theta]$$, \
$CellContext`r$$, $CellContext`b$$] + {1, 0}}], Red, 
            InfiniteLine[{{0, 0}, {
               Sin[
                $CellContext`tcrit[$CellContext`r$$, $CellContext`b$$]], 
               Cos[
                $CellContext`tcrit[$CellContext`r$$, $CellContext`b$$]]}}], 
            InfiniteLine[{{0, 0}, {-Sin[
                 $CellContext`tcrit[$CellContext`r$$, $CellContext`b$$]], 
               Cos[
                $CellContext`tcrit[$CellContext`r$$, $CellContext`b$$]]}}]}], 
          PlotRange -> {{(-1.1) ($CellContext`r$$ + 2 $CellContext`b$$), 
             1.1 ($CellContext`r$$ + 
              2 $CellContext`b$$)}, {(-1.1) $CellContext`r$$, 
             1.1 ($CellContext`r$$ + 2 $CellContext`b$$)}}, ImageSize -> 
          Large], 
         Show[
          Plot[
           Part[
            $CellContext`posCM[$CellContext`\[Theta]$$, $CellContext`r$$, \
$CellContext`b$$], 2], {$CellContext`\[Theta]$$, -Pi, Pi}, 
           PlotRange -> {0, 6}, 
           AxesLabel -> {
            "\[Theta]", "Height of \!\(\*SubscriptBox[\(C\), \(m\)]\)"}, 
           Ticks -> {
             Range[-Pi, Pi, Pi/4], 
             Range[1, 6, 1]}], 
          Graphics[{Dashed, 
            
            InfiniteLine[{{$CellContext`\[Theta]$$, 
               0}, {$CellContext`\[Theta]$$, 1}}], Red, 
            InfiniteLine[{{
               $CellContext`tcrit[$CellContext`r$$, $CellContext`b$$], 0}, {
               $CellContext`tcrit[$CellContext`r$$, $CellContext`b$$], 1}}], 
            
            InfiniteLine[{{-$CellContext`tcrit[$CellContext`r$$, \
$CellContext`b$$], 
               0}, {-$CellContext`tcrit[$CellContext`r$$, $CellContext`b$$], 
               1}}]}], ImageSize -> Large]}], 
      "Specifications" :> {{{$CellContext`\[Theta]$$, 0}, -Pi, 
         Pi}, {{$CellContext`r$$, 2, "R"}, 0, 10}, {{$CellContext`b$$, 1}, 0, 
         10}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1207., {293., 302.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.709617586311268*^9, {3.709652078433934*^9, 3.7096520974485006`*^9}, {
   3.7096521376411915`*^9, 3.709652163417859*^9}, 3.7096554431655855`*^9, 
   3.709662173625801*^9, 3.7096622608343773`*^9, 3.709662335733156*^9, 
   3.7096644318841276`*^9, 3.7096696819906483`*^9, 3.709672151741972*^9, 
   3.70967222368219*^9, {3.7096723659193125`*^9, 3.7096723696702576`*^9}, {
   3.709672796122613*^9, 3.7096728032806363`*^9}, 3.7096728643700237`*^9, 
   3.7096729782765446`*^9, 3.7096730377425933`*^9, 3.7096732581349077`*^9, 
   3.7096735099722357`*^9, 3.7096741486811905`*^9, 3.7097101529465413`*^9, 
   3.7098328723854446`*^9, 3.7098329041881294`*^9, 3.709833415408934*^9, 
   3.709833485172934*^9, {3.7098335229189157`*^9, 3.709833543583684*^9}}]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Finding Critical Angles", "Subsection",
 CellChangeTimes->{{3.709618123066183*^9, 3.709618143971198*^9}}],

Cell[TextData[{
 "In order to find the critical angles for which the cube would topple out of \
the cylinder, we can simply find the first derivative of the potential energy \
(mg",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "Cm"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") with respect to \[Theta] and equal it to zero."
}], "Text",
 CellChangeTimes->{{3.709618149712698*^9, 3.709618225639436*^9}, {
  3.709618287857027*^9, 3.7096183241865373`*^9}, {3.709618854130354*^9, 
  3.709618877333432*^9}}],

Cell[TextData[{
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{"mg", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       SubscriptBox["y", "Cm"]}], 
      RowBox[{"\[PartialD]", "\[Theta]"}]]}], "=", 
    RowBox[{
     RowBox[{"mg", "(", 
      RowBox[{
       RowBox[{"b", " ", 
        RowBox[{"Sin", "(", "\[Theta]", ")"}]}], "-", 
       RowBox[{"R", " ", "\[Theta]", " ", 
        RowBox[{"Cos", "(", "\[Theta]", ")"}]}]}], ")"}], "=", "0"}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{"b", " ", 
     RowBox[{"Sin", "(", "\[Theta]", ")"}]}], "=", 
    RowBox[{"R", " ", "\[Theta]", " ", 
     RowBox[{"Cos", "(", "\[Theta]", ")"}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{"Tan", "(", "\[Theta]", ")"}], "=", 
    RowBox[{
     FractionBox["R", "b"], "\[Theta]"}]}], TraditionalForm]}]],
 "\n\nBesides \[Theta] = 0, the roots of the equation cannot be found \
analytically.\nWe can, however, find approximate solutions by expanding Tan(\
\[Theta]) into a Taylor Series (Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", 
     FractionBox["\[Pi]", "2"]}], "\[LessEqual]", "\[Theta]", "\[LessEqual]", 
    FractionBox["\[Pi]", "2"]}], TraditionalForm]]],
 ").\n\nBy Expanding to a third degree polynomial, we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Tan", "(", "\[Theta]", ")"}], "\[TildeTilde]", 
    RowBox[{"\[Theta]", "+", 
     FractionBox[
      SuperscriptBox["\[Theta]", "3"], "3"]}]}], TraditionalForm]]],
 ", so:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Theta]", "+", 
     FractionBox[
      SuperscriptBox["\[Theta]", "3"], "3"]}], "=", 
    RowBox[{
     FractionBox["R", "b"], "\[Theta]"}]}], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"\[Theta]", "(", 
      RowBox[{"1", "-", 
       FractionBox["R", "b"]}], ")"}], "+", 
     FractionBox[
      SuperscriptBox["\[Theta]", "3"], "3"]}], "=", "0"}], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Theta]", "Crit"], "=", 
    RowBox[{"\[PlusMinus]", 
     SqrtBox[
      RowBox[{"3", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["R", "b"], "-", "1"}], ")"}]}]]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.709618241327406*^9, 3.7096182416857924`*^9}, {
  3.709618273689643*^9, 3.709618302178996*^9}, {3.709618333453086*^9, 
  3.709618379599475*^9}, {3.709618431140951*^9, 3.7096187990600605`*^9}, {
  3.709618885942428*^9, 3.7096189501257715`*^9}, {3.709655813674836*^9, 
  3.7096558187144756`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Finding Critical Angles", "Subsection",
 CellChangeTimes->{{3.7096514156505857`*^9, 3.7096514284196296`*^9}}],

Cell[TextData[{
 "As a dummy example, we can assume ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "=", "2"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "=", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". In this case, by comparing the approximate result found with the result \
found numerically, we find that the approximate result has a %Error of 48%.\n\
The error will decrease with higher approximations and/or for smaller values \
of ",
 Cell[BoxData[
  FormBox[
   FractionBox["R", "b"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.709651442234988*^9, 3.709651547732411*^9}, {
  3.709651611416507*^9, 3.7096516184558463`*^9}, {3.7096517471498566`*^9, 
  3.70965179258352*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Exact", " ", "value", " ", "of", " ", "critical", " ", "angle", " ", 
    "for", " ", "a", " ", "given", " ", "r", " ", "and", " ", "b"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"exactValue", "=", 
     RowBox[{"t", "/.", 
      RowBox[{"FindRoot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Tan", "[", "t", "]"}], "-", 
          RowBox[{
           FractionBox["r", "b"], " ", "t"}]}], "\[Equal]", "0"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "List", " ", "of", " ", "approximate", " ", "values", " ", "for", " ", 
     "the", " ", "calculation", " ", "fo", " ", "the", " ", "critical", " ", 
     "angle", " ", "depending", " ", "on", " ", "the", " ", "degree", " ", 
     "of", " ", "expansion", " ", "of", " ", 
     RowBox[{"Tan", "[", "t", "]"}], " ", "function"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"approxValue", "=", 
     RowBox[{"t", "/.", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Normal", "[", 
             RowBox[{"Series", "[", 
              RowBox[{
               RowBox[{"Tan", "[", "t", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0", ",", "n"}], "}"}]}], "]"}], "]"}], "-", 
            RowBox[{
             FractionBox["r", "b"], "t"}]}], "\[Equal]", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "20"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "20"}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"%", "Error", " ", "of", " ", "each", " ", "approximation"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"percentErrors", "=", 
     RowBox[{
      FractionBox[
       RowBox[{"Abs", "[", 
        RowBox[{"approxValue", "-", "exactValue"}], "]"}], "exactValue"], "*",
       "100"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Plor", " ", "of", " ", "%", "Error", " ", "of", " ", "calculation", " ", 
     "of", " ", "critical", " ", "angle", " ", "depending", " ", "on", " ", 
     "the", " ", "degree", " ", "of", " ", "approximation"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"percentErrors", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Polynomial Degree\>\"", ",", "\"\<%Error\>\""}], "}"}]}], 
     ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"AutoCollapse", "[", "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.7096517968150206`*^9, {3.709672871790761*^9, 3.7096728759949107`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.65, 0., 0.], PointSize[0.019444444444444445`], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7CF0pANUwAGVz+HwnYUvWcLXA8oXQOOLOMi1
HC04s0obypdA48s45J1dY+A9SQzKV0DjKzk0+pxYt16UFcpXQeOrOXw4sLpb
X+Qr1J0aaHwthwWKCoc7njyF8nXQ+HoOnx7sK4h3ug7lG6DxDR26NgmbCfKd
hPKN0PjGDlveuFwLsdgN5ZvA+QBMBE0r
       "]],
      FontFamily->"Baskerville"]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Polynomial Degree\"", TraditionalForm], 
    FormBox["\"%Error\"", TraditionalForm]},
  AxesOrigin->{0., 0},
  BaseStyle->{FontFamily -> "Baskerville"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  LabelStyle->{FontFamily -> "Baskerville"},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 20.}, {0, 100.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.709651798269397*^9, 3.709662174072031*^9, 
  3.7096622660475826`*^9, 3.7096623408051777`*^9, 3.7096644358089285`*^9, 
  3.7096696822924623`*^9, 3.709672152490964*^9, 3.7096722240621967`*^9, 
  3.709672369842718*^9, 3.7096728788865957`*^9, 3.7096729793624306`*^9, 
  3.7096730394370985`*^9, 3.7096735110100355`*^9, 3.7096741502847705`*^9, 
  3.709710154332006*^9, 3.7098334166624403`*^9, 3.709833485626033*^9, 
  3.709833544559677*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell["\<\
The approximations will always yield 2 non-trivial real solutions which are \
symmetrical along the y axis.\
\>", "Item",
 CellChangeTimes->{{3.709651846606002*^9, 3.709651886002331*^9}, {
  3.709655513160183*^9, 3.709655513160183*^9}}],

Cell[TextData[{
 "Except when ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "\[GreaterEqual]", "R"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", where the only solution for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", 
     FractionBox["\[Pi]", "2"]}], "\[LessEqual]", "\[Theta]", "\[LessEqual]", 
    FractionBox["\[Pi]", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Theta]", "=", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Meaning there\[CloseCurlyQuote]s no stable regions."
}], "Item",
 CellChangeTimes->{{3.709651846606002*^9, 3.709651886002331*^9}, {
  3.70965551378481*^9, 3.7096556346140003`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 "Different values for ",
 Cell[BoxData[
  FormBox[
   FractionBox["R", "b"], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subsection",
 CellChangeTimes->{{3.7096556907000723`*^9, 3.7096557104800587`*^9}}],

Cell[TextData[{
 "As ",
 Cell[BoxData[
  FormBox[
   FractionBox["R", "b"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " increases, the value for the critical ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "Crit"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " decreases, such that, when ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["R", "b"], "=", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", the only solution is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Theta]", "Crit"], "=", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". If ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["R", "b"], ">", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", there are only complex, non-physical solutions."
}], "Text",
 CellChangeTimes->{{3.7096557245066824`*^9, 3.7096557886075335`*^9}, {
  3.7096558371609707`*^9, 3.709655946493778*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"posCM", "[", 
       RowBox[{"\[Theta]", ",", "2", ",", "1"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"posCM", "[", 
       RowBox[{"\[Theta]", ",", 
        FractionBox["3", "2"], ",", "1"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"posCM", "[", 
       RowBox[{"\[Theta]", ",", 
        FractionBox["4", "3"], ",", "1"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"posCM", "[", 
       RowBox[{"\[Theta]", ",", 
        FractionBox["5", "4"], ",", "1"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"posCM", "[", 
       RowBox[{"\[Theta]", ",", "1", ",", "1"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"posCM", "[", 
       RowBox[{"\[Theta]", ",", ".5", ",", "1"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3.5"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<U(\[Theta])\>\""}], "}"}]}], ",", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], ",", "\[Pi]", ",", 
        FractionBox["\[Pi]", "4"]}], "]"}], ",", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "6", ",", "1"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"LineLegend", "[", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*FractionBox[\(R\), \(b\)]\)=\!\(\*FractionBox[\(2\), \
\(1\)]\)\>\"", ",", 
       "\"\<\!\(\*FractionBox[\(R\), \(b\)]\)=\!\(\*FractionBox[\(3\), \(2\)]\
\)\>\"", ",", 
       "\"\<\!\(\*FractionBox[\(R\), \(b\)]\)=\!\(\*FractionBox[\(4\), \(3\)]\
\)\>\"", ",", 
       "\"\<\!\(\*FractionBox[\(R\), \(b\)]\)=\!\(\*FractionBox[\(5\), \(4\)]\
\)\>\"", ",", 
       "\"\<\!\(\*FractionBox[\(R\), \(b\)]\)=\!\(\*FractionBox[\(1\), \(1\)]\
\)\>\"", ",", 
       "\"\<\!\(\*FractionBox[\(R\), \(b\)]\)=\!\(\*FractionBox[\(1\), \(2\)]\
\)\>\""}], "}"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"AutoCollapse", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.709655950898235*^9, 3.7096559603450813`*^9}, {
  3.7096563964119177`*^9, 3.7096564316459055`*^9}, {3.7096728820550175`*^9, 
  3.709672882350813*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.65, 0., 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
+R9/3KaE
          "]]}, Annotation[#, "Charting`Private`Tag$21766#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.0504678, 0.526626, 0.627561], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
6IPP/VyfOw4F+dWDRBYtdfOneK7+/+N/4LIU0Q==
          "]]}, Annotation[#, "Charting`Private`Tag$21766#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.752461, 0.362306, 0.125339], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$21766#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.435888, 0.259065, 0.71028], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
P+Z/Y9hhDg==
          "]]}, Annotation[#, "Charting`Private`Tag$21766#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.461492, 0.563303, 0.0104797], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
H1vx+Uw=
          "]]}, Annotation[#, "Charting`Private`Tag$21766#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.659814, 0.212037, 0.300311], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
bwkc9kG1OvGrNP///vw/Dhteiw==
          "]]}, Annotation[#, "Charting`Private`Tag$21766#6"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {{{
         NCache[-Pi, -3.141592653589793], 
         FormBox[
          RowBox[{"-", "\[Pi]"}], TraditionalForm]}, {
         NCache[Rational[-3, 4] Pi, -2.356194490192345], 
         FormBox[
          RowBox[{"-", 
            FractionBox[
             RowBox[{"3", " ", "\[Pi]"}], "4"]}], TraditionalForm]}, {
         NCache[Rational[-1, 2] Pi, -1.5707963267948966`], 
         FormBox[
          RowBox[{"-", 
            FractionBox["\[Pi]", "2"]}], TraditionalForm]}, {
         NCache[Rational[-1, 4] Pi, -0.7853981633974483], 
         FormBox[
          RowBox[{"-", 
            FractionBox["\[Pi]", "4"]}], TraditionalForm]}, {0, 
         FormBox["0", TraditionalForm]}, {
         NCache[Rational[1, 4] Pi, 0.7853981633974483], 
         FormBox[
          FractionBox["\[Pi]", "4"], TraditionalForm]}, {
         NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
         FormBox[
          FractionBox["\[Pi]", "2"], TraditionalForm]}, {
         NCache[Rational[3, 4] Pi, 2.356194490192345], 
         FormBox[
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "4"], TraditionalForm]}, {
         NCache[Pi, 3.141592653589793], 
         FormBox["\[Pi]", TraditionalForm]}}, {{1, 
         FormBox["1", TraditionalForm]}, {2, 
         FormBox["2", TraditionalForm]}, {3, 
         FormBox["3", TraditionalForm]}, {4, 
         FormBox["4", TraditionalForm]}, {5, 
         FormBox["5", TraditionalForm]}, {6, 
         FormBox["6", TraditionalForm]}}}, AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Theta]\"", TraditionalForm], 
       FormBox["\"U(\[Theta])\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontFamily -> "Baskerville"}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     LabelStyle -> {FontFamily -> "Baskerville"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3.1415925253615216`, 3.1415925253615216`}, {0, 3.5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, Ticks -> {{{
         NCache[-Pi, -3.141592653589793], 
         FormBox[
          RowBox[{"-", "\[Pi]"}], TraditionalForm]}, {
         NCache[Rational[-3, 4] Pi, -2.356194490192345], 
         FormBox[
          RowBox[{"-", 
            FractionBox[
             RowBox[{"3", " ", "\[Pi]"}], "4"]}], TraditionalForm]}, {
         NCache[Rational[-1, 2] Pi, -1.5707963267948966`], 
         FormBox[
          RowBox[{"-", 
            FractionBox["\[Pi]", "2"]}], TraditionalForm]}, {
         NCache[Rational[-1, 4] Pi, -0.7853981633974483], 
         FormBox[
          RowBox[{"-", 
            FractionBox["\[Pi]", "4"]}], TraditionalForm]}, {0, 
         FormBox["0", TraditionalForm]}, {
         NCache[Rational[1, 4] Pi, 0.7853981633974483], 
         FormBox[
          FractionBox["\[Pi]", "4"], TraditionalForm]}, {
         NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
         FormBox[
          FractionBox["\[Pi]", "2"], TraditionalForm]}, {
         NCache[Rational[3, 4] Pi, 2.356194490192345], 
         FormBox[
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "4"], TraditionalForm]}, {
         NCache[Pi, 3.141592653589793], 
         FormBox["\[Pi]", TraditionalForm]}}, {{1, 
         FormBox["1", TraditionalForm]}, {2, 
         FormBox["2", TraditionalForm]}, {3, 
         FormBox["3", TraditionalForm]}, {4, 
         FormBox["4", TraditionalForm]}, {5, 
         FormBox["5", TraditionalForm]}, {6, 
         FormBox["6", TraditionalForm]}}}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*FractionBox[\\(R\\), \
\\(b\\)]\\)=\\!\\(\\*FractionBox[\\(2\\), \\(1\\)]\\)\"", 
       "\"\\!\\(\\*FractionBox[\\(R\\), \\(b\\)]\\)=\\!\\(\\*FractionBox[\\(3\
\\), \\(2\\)]\\)\"", 
       "\"\\!\\(\\*FractionBox[\\(R\\), \\(b\\)]\\)=\\!\\(\\*FractionBox[\\(4\
\\), \\(3\\)]\\)\"", 
       "\"\\!\\(\\*FractionBox[\\(R\\), \\(b\\)]\\)=\\!\\(\\*FractionBox[\\(5\
\\), \\(4\\)]\\)\"", 
       "\"\\!\\(\\*FractionBox[\\(R\\), \\(b\\)]\\)=\\!\\(\\*FractionBox[\\(1\
\\), \\(1\\)]\\)\"", 
       "\"\\!\\(\\*FractionBox[\\(R\\), \\(b\\)]\\)=\\!\\(\\*FractionBox[\\(1\
\\), \\(2\\)]\\)\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Baskerville", 
                    Opacity[1.], 
                    RGBColor[0.65, 0., 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Baskerville", 
                    Opacity[1.], 
                    RGBColor[0.65, 0., 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Baskerville", 
                    Opacity[1.], 
                    RGBColor[0.0504678, 0.526626, 0.627561], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Baskerville", 
                    Opacity[1.], 
                    RGBColor[0.0504678, 0.526626, 0.627561], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Baskerville", 
                    Opacity[1.], 
                    RGBColor[0.752461, 0.362306, 0.125339], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Baskerville", 
                    Opacity[1.], 
                    RGBColor[0.752461, 0.362306, 0.125339], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Baskerville", 
                    Opacity[1.], 
                    RGBColor[0.435888, 0.259065, 0.71028], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Baskerville", 
                    Opacity[1.], 
                    RGBColor[0.435888, 0.259065, 0.71028], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Baskerville", 
                    Opacity[1.], 
                    RGBColor[0.461492, 0.563303, 0.0104797], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Baskerville", 
                    Opacity[1.], 
                    RGBColor[0.461492, 0.563303, 0.0104797], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Baskerville", 
                    Opacity[1.], 
                    RGBColor[0.659814, 0.212037, 0.300311], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Baskerville", 
                    Opacity[1.], 
                    RGBColor[0.659814, 0.212037, 0.300311], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Baskerville", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Baskerville\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.65, 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.43333333333333335`, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.65, 0., 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.65, 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.65, 0., 0.], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Baskerville\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0504678, 0.526626, 0.627561], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.0336452, 0.35108400000000006`, 0.418374], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.0504678, 0.526626, 0.627561]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0504678, 0.526626, 0.627561]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.0504678, 0.526626, 0.627561], Editable -> 
                    False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Baskerville\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.752461, 0.362306, 0.125339], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5016406666666667, 0.24153733333333335`, 
                    0.08355933333333335], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.752461, 0.362306, 0.125339]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.752461, 0.362306, 0.125339]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.752461, 0.362306, 0.125339], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Baskerville\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.435888, 0.259065, 0.71028], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.290592, 0.17271, 0.47352000000000005`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.435888, 0.259065, 0.71028]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.435888, 0.259065, 0.71028]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.435888, 0.259065, 0.71028], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Baskerville\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.461492, 0.563303, 0.0104797], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.30766133333333334`, 0.37553533333333333`, 
                    0.0069864666666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.461492, 0.563303, 0.0104797]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.461492, 0.563303, 0.0104797]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.461492, 0.563303, 0.0104797], Editable -> 
                    False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Baskerville\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.659814, 0.212037, 0.300311], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.43987600000000004`, 0.141358, 0.20020733333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.659814, 0.212037, 0.300311]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.659814, 0.212037, 0.300311]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.659814, 0.212037, 0.300311], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Baskerville\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7096559524934797`*^9, 3.709655961099288*^9}, {
   3.709656422730294*^9, 3.709656432563836*^9}, 3.709662174277224*^9, 
   3.709662269913323*^9, 3.7096623439483624`*^9, 3.7096644389923306`*^9, 
   3.709669682510998*^9, 3.7096721535958977`*^9, 3.709672224570547*^9, 
   3.7096723701124353`*^9, 3.709672883160958*^9, 3.709672980367098*^9, 
   3.7096730407165003`*^9, 3.709673511627636*^9, 3.709674150779357*^9, 
   3.709710155479779*^9, 3.7098334172756*^9, 3.709833486083347*^9, 
   3.70983354512392*^9}]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 "Different values for ",
 Cell[BoxData[
  FormBox[
   FractionBox["R", "b"], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subsection",
 CellChangeTimes->{{3.7096564575951023`*^9, 3.7096567133604345`*^9}, {
   3.7096567473545527`*^9, 3.709656805451875*^9}, {3.7096568472778034`*^9, 
   3.7096568477634897`*^9}, {3.709656889013403*^9, 3.7096569167571397`*^9}, 
   3.7096569559632983`*^9, {3.709656995289494*^9, 3.7096570146073914`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"posCM", "[", 
            RowBox[{"\[Theta]", ",", "r", ",", "b"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", 
            RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "6"}], "}"}]}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<U(\[Theta])\>\""}], 
            "}"}]}]}], "]"}], "\[IndentingNewLine]", ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
        RowBox[{"Ticks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], ",", "\[Pi]", ",", 
             FractionBox["\[Pi]", "4"]}], "]"}], ",", 
           RowBox[{"Range", "[", 
            RowBox[{"1", ",", "6", ",", "1"}], "]"}]}], "}"}]}]}], "]"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Tan", "[", "\[Theta]", "]"}], "-", 
           RowBox[{
            FractionBox["r", "b"], "\[Theta]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", 
            RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "5"}], ",", "5"}], "}"}]}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\[Theta]\>\"", ",", 
             "\"\<Tan(\[Theta])-\!\(\*FractionBox[\(R\), \
\(b\)]\)\[Theta]\>\""}], "}"}]}]}], "]"}], "\[IndentingNewLine]", ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
        RowBox[{"Ticks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], ",", "\[Pi]", ",", 
             FractionBox["\[Pi]", "4"]}], "]"}], ",", 
           RowBox[{"Range", "[", 
            RowBox[{"1", ",", "6", ",", "1"}], "]"}]}], "}"}]}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "//", "Row"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", ",", "2", ",", "\"\<R\>\""}], "}"}], ",", "0", ",", "3"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", "1"}], "}"}], ",", "0", ",", "3"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"AutoCollapse", "[", "]"}]}], "Input",
 CellChangeTimes->{
  3.7096569612218256`*^9, {3.709672885501178*^9, 3.709672885810006*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`b$$ = 1, $CellContext`r$$ = 2, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`r$$], 2, "R"}, 0, 3}, {{
       Hold[$CellContext`b$$], 1}, 0, 3}}, Typeset`size$$ = {
    1152., {192., 200.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`r$21885$$ = 
    0, $CellContext`b$21886$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`b$$ = 1, $CellContext`r$$ = 2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`r$$, $CellContext`r$21885$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$21886$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Row[{
         Show[
          Plot[
           Part[
            $CellContext`posCM[$CellContext`\[Theta], $CellContext`r$$, \
$CellContext`b$$], 2], {$CellContext`\[Theta], -Pi, Pi}, PlotRange -> {0, 6}, 
           AxesLabel -> {"\[Theta]", "U(\[Theta])"}], ImageSize -> Large, 
          Ticks -> {
            Range[-Pi, Pi, Pi/4], 
            Range[1, 6, 1]}], 
         Show[
          Plot[
          Tan[$CellContext`\[Theta]] - ($CellContext`r$$/$CellContext`b$$) \
$CellContext`\[Theta], {$CellContext`\[Theta], -Pi, Pi}, PlotRange -> {-5, 5},
            AxesLabel -> {
            "\[Theta]", 
             "Tan(\[Theta])-\!\(\*FractionBox[\(R\), \(b\)]\)\[Theta]"}], 
          ImageSize -> Large, Ticks -> {
            Range[-Pi, Pi, Pi/4], 
            Range[1, 6, 1]}]}], 
      "Specifications" :> {{{$CellContext`r$$, 2, "R"}, 0, 
         3}, {{$CellContext`b$$, 1}, 0, 3}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1207., {260., 269.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7096569624992447`*^9, 3.7096621743765287`*^9, 
  3.709662273186161*^9, 3.7096623474696255`*^9, 3.709664440959263*^9, 
  3.7096696826499753`*^9, 3.7096721540019765`*^9, 3.7096722246497574`*^9, 
  3.7096723703600984`*^9, 3.7096728862702446`*^9, 3.709672980797241*^9, 
  3.709673041844499*^9, 3.7096735126914644`*^9, 3.7096741513625264`*^9, 
  3.709710155849042*^9, 3.7098334182713776`*^9, 3.709833486925294*^9, 
  3.709833546053426*^9}]
}, {2}]],

Cell[TextData[{
 "Note that there are no real solutions for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["R", "b"], ">", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", meaning the cube\[CloseCurlyQuote]s side must always be smaller then the \
cylinder\[CloseCurlyQuote]s diameter in order for any stability to happen."
}], "Item",
 CellChangeTimes->{{3.709657026769512*^9, 3.709657076191442*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Special Situation", "Subsection",
 CellChangeTimes->{{3.709657241629212*^9, 3.709657271728018*^9}}],

Cell[TextData[{
 "As a final thought we can examine the cases where \[Theta] cannot exceed an \
arc length greater then b (if it did the cube would start balancing on its \
edge). We can then impose that the situations where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"R", " ", 
     SubscriptBox["\[Theta]", "Crit"]}], "\[GreaterEqual]", "b"}], 
   TraditionalForm]]],
 ", is stable at all angles.\nFrom this, we conclude:\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["R", "b"], 
     SubscriptBox["\[Theta]", "Crit"]}], "\[GreaterEqual]", "1"}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{"Tan", "(", 
     SubscriptBox["\[Theta]", "Crit"], ")"}], "\[GreaterEqual]", "1"}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    SubscriptBox["\[Theta]", "Crit"], "\[GreaterEqual]", 
    RowBox[{
     FractionBox["\[Pi]", "4"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"For", " ", "0"}], "\[LessEqual]", 
       SubscriptBox["\[Theta]", "Crit"], "\[LessEqual]", 
       FractionBox["\[Pi]", "2"]}], " ", ")"}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{"b", "\[LessEqual]", 
    RowBox[{
     FractionBox["\[Pi]", "4"], "R"}]}], TraditionalForm]}]],
 "\n\nIn conclusion, is the side of the cube is 78% or less of the diameter \
of the cylinder, the system will be stable at all possible angles where the \
cube doesn\[CloseCurlyQuote]t balance on its edge.\n"
}], "Text",
 CellChangeTimes->{{3.7096572781891975`*^9, 3.7096575028014765`*^9}, {
  3.7096575509976997`*^9, 3.7096575515778723`*^9}, {3.709657596860959*^9, 
  3.709657851612954*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["On the Motion of the Cube", "Section",
 CellChangeTimes->{{3.7096579102299347`*^9, 3.7096579326300097`*^9}}],

Cell[CellGroupData[{

Cell["Assumptions", "Subsection",
 CellChangeTimes->{{3.7096579408071604`*^9, 3.709658033670994*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Given an initial angle ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Theta]", "0"], "<", 
    SubscriptBox["\[Theta]", "Crit"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and no initial velocity, the cube will rock back and forth, meaning the \
result will be of an oscillatory nature."
}], "Item",
 CellChangeTimes->{{3.7096580421851377`*^9, 3.7096580729640837`*^9}, {
  3.7096581038766804`*^9, 3.7096581498765516`*^9}, {3.7096582926957254`*^9, 
  3.7096582959796443`*^9}}],

Cell["There is no friction affecting the motion of the cube.", "Item",
 CellChangeTimes->{{3.7096580421851377`*^9, 3.7096580729640837`*^9}, {
   3.7096581038766804`*^9, 3.709658159046682*^9}, 3.7096583354048076`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lagrangian Approach", "Subsection",
 CellChangeTimes->{{3.7096583560604315`*^9, 3.709658370930135*^9}}],

Cell[TextData[{
 "In order to solve the equation, we\[CloseCurlyQuote]ll need to use \
Lagrangian mechanics, meaning that the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalL]", "=", 
    RowBox[{"T", "-", "U"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", where T is the kinetic and U is the potential energy of the system, must \
satisfy the following condition."
}], "Text",
 CellChangeTimes->{{3.7096583746713023`*^9, 3.709658477291092*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["\[PartialD]", 
     RowBox[{"\[PartialD]", "t"}]], 
    RowBox[{"(", 
     FractionBox[
      RowBox[{"\[PartialD]", "\[ScriptCapitalL]"}], 
      RowBox[{"\[PartialD]", 
       OverscriptBox["\[Theta]", "."]}]], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "=",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", "\[ScriptCapitalL]"}], 
    RowBox[{"\[PartialD]", "\[Theta]"}]], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.709658495450863*^9, 3.7096585265401287`*^9}, {
  3.709658588414344*^9, 3.7096586422961464`*^9}},
 TextAlignment->Center]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Lagrangian Approach\[AliasDelimiter]", "Subsection",
 CellChangeTimes->{{3.7096587065337634`*^9, 3.709658709254061*^9}, 
   3.709833686313974*^9}],

Cell[CellGroupData[{

Cell["Kinetic Energy", "Subsubsection",
 CellChangeTimes->{{3.709658723433679*^9, 3.709658729346095*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "=", 
    RowBox[{
     FractionBox[
      RowBox[{"m", " ", 
       SuperscriptBox["v", "2"]}], "2"], "+", 
     FractionBox[
      RowBox[{"I", " ", 
       SuperscriptBox[
        OverscriptBox["\[Theta]", "."], "2"]}], "2"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nWhere\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["v", "2"], "=", 
    RowBox[{
     SuperscriptBox[
      OverscriptBox["\[Theta]", "."], "2"], "(", 
     RowBox[{
      SuperscriptBox["b", "2"], "+", 
      RowBox[{
       SuperscriptBox["R", "2"], 
       SuperscriptBox["\[Theta]", "2"]}]}], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"I", "=", 
    RowBox[{
     FractionBox["2", "3"], 
     SuperscriptBox["mb", "2"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nSo:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "=", 
    RowBox[{
     FractionBox[
      RowBox[{"m", " ", 
       SuperscriptBox[
        OverscriptBox["\[Theta]", "."], "2"]}], "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["5", "3"], 
        SuperscriptBox["b", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["R", "2"], 
        SuperscriptBox["\[Theta]", "2"]}]}], ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.7096587349709234`*^9, 3.7096589934893265`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Potential Energy", "Subsubsection",
 CellChangeTimes->{{3.70965900056126*^9, 3.7096590121958265`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"U", "=", 
   RowBox[{"m", " ", 
    RowBox[{"g", "(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"R", "+", "b"}], ")"}], 
       RowBox[{"Cos", "(", "\[Theta]", ")"}]}], "+", 
      RowBox[{"R", " ", "\[Theta]", " ", 
       RowBox[{"Sin", "(", "\[Theta]", ")"}]}]}], ")"}]}]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Text",
 CellChangeTimes->{{3.7096590234365573`*^9, 3.70965902722385*^9}, {
  3.7096590607929373`*^9, 3.7096591113969016`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lagrangian", "Subsubsection",
 CellChangeTimes->{{3.7096591160927296`*^9, 3.7096591231883*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"\[ScriptCapitalL]", "=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"m", " ", 
       SuperscriptBox[
        OverscriptBox["\[Theta]", "."], "2"]}], "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["5", "3"], 
        SuperscriptBox["b", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["R", "2"], 
        SuperscriptBox["\[Theta]", "2"]}]}], ")"}]}], "-", 
    RowBox[{"m", " ", 
     RowBox[{"g", "(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", "+", "b"}], ")"}], 
        RowBox[{"Cos", "(", "\[Theta]", ")"}]}], "+", 
       RowBox[{"R", " ", "\[Theta]", " ", 
        RowBox[{"Sin", "(", "\[Theta]", ")"}]}]}], ")"}]}]}]}], 
  TraditionalForm]],
 FormatType->"TraditionalForm"]], "Text",
 CellChangeTimes->{{3.709659126591074*^9, 3.709659145312637*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Lagrangian Approach", "Subsection",
 CellChangeTimes->{{3.7096592117621183`*^9, 3.7096592338800497`*^9}}],

Cell[TextData[{
 Cell[BoxData[{
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "\[ScriptCapitalL]"}], 
     RowBox[{"\[PartialD]", "\[Theta]"}]], "=", 
    RowBox[{
     RowBox[{"m", " ", 
      SuperscriptBox[
       OverscriptBox["\[Theta]", "."], "2"], 
      SuperscriptBox["R", "2"], "\[Theta]"}], "-", 
     RowBox[{"mg", "(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "b"}], " ", 
        RowBox[{"Sin", "(", "\[Theta]", ")"}]}], "+", 
       RowBox[{"R", " ", "\[Theta]", " ", 
        RowBox[{"Cos", "(", "\[Theta]", ")"}]}]}], ")"}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "\[ScriptCapitalL]"}], 
     RowBox[{"\[PartialD]", 
      OverscriptBox["\[Theta]", "."]}]], "=", 
    RowBox[{"m", " ", 
     RowBox[{
      OverscriptBox["\[Theta]", "."], "(", 
      RowBox[{
       RowBox[{
        FractionBox["5", "3"], 
        SuperscriptBox["b", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["R", "2"], 
        SuperscriptBox["\[Theta]", "2"]}]}], ")"}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["\[PartialD]", 
      RowBox[{"\[PartialD]", "t"}]], 
     RowBox[{"(", 
      FractionBox[
       RowBox[{"\[PartialD]", "\[ScriptCapitalL]"}], 
       RowBox[{"\[PartialD]", 
        OverscriptBox["\[Theta]", "."]}]], ")"}]}], "=", 
    RowBox[{
     RowBox[{"m", " ", 
      RowBox[{
       OverscriptBox["\[Theta]", ".."], "(", 
       RowBox[{
        RowBox[{
         FractionBox["5", "3"], 
         SuperscriptBox["b", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["R", "2"], 
         SuperscriptBox["\[Theta]", "2"]}]}], ")"}]}], "+", 
     RowBox[{"2", "m", " ", 
      SuperscriptBox[
       OverscriptBox["\[Theta]", "."], "2"], 
      SuperscriptBox["R", "2"], "\[Theta]"}]}]}], TraditionalForm]}],
  FormatType->"TraditionalForm"],
 "\n\nAfter some algebraic manipulation, we get that the equation describing \
the motion of the cube is:"
}], "Text",
 CellChangeTimes->{{3.7096592416194787`*^9, 3.709659599638606*^9}, 
   3.70965971865693*^9, {3.709659988528899*^9, 3.7096599982340703`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     OverscriptBox["\[Theta]", ".."], "(", 
     RowBox[{
      RowBox[{
       FractionBox["5", "3"], 
       SuperscriptBox["b", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["R", "2"], 
       SuperscriptBox["\[Theta]", "2"]}]}], ")"}], "+", 
    RowBox[{
     SuperscriptBox[
      OverscriptBox["\[Theta]", "."], "2"], 
     SuperscriptBox["R", "2"], "\[Theta]"}], "-", 
    RowBox[{"g", "(", 
     RowBox[{
      RowBox[{"b", " ", 
       RowBox[{"Sin", "(", "\[Theta]", ")"}]}], "-", 
      RowBox[{"R", " ", "\[Theta]", " ", 
       RowBox[{"Cos", "(", "\[Theta]", ")"}]}]}], ")"}]}], "=", "0"}], 
  TraditionalForm]],
 FormatType->"TraditionalForm"]], "Text",
 CellChangeTimes->{3.7096599915747085`*^9},
 TextAlignment->Center],

Cell[CellGroupData[{

Cell["\<\
Ugly and doesn\[CloseCurlyQuote]t have an analytical solution (at least, none \
that I could find)\
\>", "Item",
 CellChangeTimes->{{3.709659655575159*^9, 3.7096596817848663`*^9}}],

Cell["Solvable by first order approximation.", "Item",
 CellChangeTimes->{{3.709659655575159*^9, 3.7096596974735713`*^9}}],

Cell["Numerically solvable.", "Item",
 CellChangeTimes->{{3.709659655575159*^9, 3.7096597159378223`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["First Order Approximation", "Subsection",
 CellChangeTimes->{{3.7096598528761697`*^9, 3.709659859370065*^9}}],

Cell[TextData[{
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{"Sin", "(", "\[Theta]", ")"}], "\[TildeTilde]", "\[Theta]"}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{"Cos", "(", "\[Theta]", ")"}], "\[TildeTilde]", "1"}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    OverscriptBox["\[Theta]", "."], "\[TildeTilde]", "0"}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    SuperscriptBox["\[Theta]", "2"], "\[TildeTilde]", "0"}], 
   TraditionalForm]}],
  FormatType->"TraditionalForm"],
 "\n\nSo:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["5", "3"], 
     SuperscriptBox["b", "2"], 
     OverscriptBox["\[Theta]", ".."]}], "=", 
    RowBox[{"g", " ", 
     RowBox[{"\[Theta]", "(", 
      RowBox[{"b", "-", "R"}], ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nBy defining:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Omega]", "2"], "=", 
    FractionBox[
     RowBox[{"3", 
      RowBox[{"g", "(", 
       RowBox[{"R", "-", "b"}], ")"}]}], 
     RowBox[{"5", 
      SuperscriptBox["b", "2"]}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "     ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Theta]", "(", "0", ")"}], "=", 
    SubscriptBox["\[Theta]", "0"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "     ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox["\[Theta]", "."], "(", "0", ")"}], "=", 
    SubscriptBox["\[Omega]", "0"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nWe get:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox["\[Theta]", ".."], "+", 
     RowBox[{
      SuperscriptBox["\[Omega]", "2"], "\[Theta]"}]}], "=", "0"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nWhich yields the solution:"
}], "Text",
 CellChangeTimes->{{3.709659865536346*^9, 3.709659971505624*^9}, {
  3.709660009376665*^9, 3.709660265902895*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Theta]", "(", "t", ")"}], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Theta]", "0"], 
     RowBox[{"Cos", "(", 
      RowBox[{"\[Omega]", " ", "t"}], ")"}]}], "+", 
    RowBox[{
     FractionBox[
      SubscriptBox["\[Omega]", "0"], "\[Omega]"], 
     RowBox[{"Sin", "(", 
      RowBox[{"\[Omega]", " ", "t"}], ")"}]}]}]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Text",
 CellChangeTimes->{{3.709660270020274*^9, 3.709660274698162*^9}},
 TextAlignment->Center]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Comparison", "Subsection",
 CellChangeTimes->{{3.709660425827142*^9, 3.7096604435652523`*^9}}],

Cell[TextData[{
 "By comparing the result obtained from the first order approximation, with \
the one found numerically for the real equation, we get:\n(Parameters used: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"R", " ", "=", " ", "2"}], ",", 
    RowBox[{"b", "=", "1"}], ",", 
    RowBox[{"g", "=", "9.81"}], ",", 
    RowBox[{
     SubscriptBox["\[Theta]", "0"], "=", 
     FractionBox["\[Pi]", "20"]}], ",", 
    RowBox[{
     SubscriptBox["\[Omega]", "0"], "=", "0"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ")"
}], "Text",
 CellChangeTimes->{{3.7096604569937024`*^9, 3.709660637313962*^9}, {
  3.7096622919890213`*^9, 3.7096622937832355`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", "9.81"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]0", "=", 
   FractionBox["\[Pi]", "20"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", "=", 
   SqrtBox[
    FractionBox[
     RowBox[{"3", " ", "g", " ", 
      RowBox[{"(", 
       RowBox[{"r", "-", "b"}], ")"}]}], 
     RowBox[{"5", " ", 
      SuperscriptBox["b", "2"]}]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"T", "''"}], "[", "t", "]"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["5", "3"], 
             SuperscriptBox["b", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["r", "2"], 
             SuperscriptBox[
              RowBox[{"T", "[", "t", "]"}], "2"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"T", "'"}], "[", "t", "]"}], "2"], 
          SuperscriptBox["r", "2"], 
          RowBox[{"T", "[", "t", "]"}]}]}], "\[Equal]", 
        RowBox[{"g", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"b", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"T", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"r", " ", 
            RowBox[{"T", "[", "t", "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"T", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{"T", "[", "0", "]"}], "\[Equal]", "\[Theta]0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"T", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
     RowBox[{"T", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "30"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"T", "[", "t", "]"}], "/.", "sol"}], ",", 
     RowBox[{"\[Theta]0", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"LineLegend", "[", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Numerical Solution\>\"", ",", "\"\<Approximate Solution\>\""}], 
      "}"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", "\"\<\[Theta]\>\""}], "}"}]}], ",", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "10", ",", "1"}], "]"}], ",", 
      RowBox[{"Range", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"-", "Pi"}], "20"], ",", 
        FractionBox["Pi", "20"], ",", 
        FractionBox["Pi", "30"]}], "]"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AutoCollapse", "[", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7096606397882557`*^9, 3.7096606495567985`*^9}, {
  3.7096606994224815`*^9, 3.7096608361523075`*^9}, {3.7096622964991007`*^9, 
  3.7096623190211563`*^9}, {3.7096623939340096`*^9, 3.709662395643821*^9}, {
  3.7096728931665783`*^9, 3.7096728935205*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.65, 0., 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
DwdT/p5ls+wBVNKImg==
          "]]}, Annotation[#, "Charting`Private`Tag$22067#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.0504678, 0.526626, 0.627561], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVmnk4lF8bx+3Z17ENBqMoJEqFlnOXqCQVaVVJC1rQIkt+KkRKkiRZy559
3zkz84w9kRRJCKFCdlnK+7x/zfW9nnPOvZ57ng+jaudseYGLg4NjnpuD4/+f
Md52fHrnH23XHIu+tU6BjdgfVMyPqjgi7p0mi4KkXq6p8lVR8UCS37cHxVDZ
SDS0KEewwwcN/JDRGpJnoxjGY2VelUBUI36uc0iOjbR/nw9etn+CnKuYMXGy
bPRVNPbfUnsoahv77CEqw0YrkwU2LSw+R+YrT97Up7DRlW2uV+eUX6Lfln+f
SUiyUX5bb+K0cTTaUHe3N0mMjRYum3dN2Meht6JZdhPCbPSKsytwzuQ1antn
vXJagI12NT1dNdsej+hpB3Wz+NhoOGI3c9oxEf2h3AlV5majoPN/baYWk9CI
Zv3RPcsE+rDoEDau/AYdGHPdxZgl0K1amu7v3DRkdabpodgkgajP2hpHjTPQ
ntA112VGCWSnCdy/7LNR2Lja1X19BOJa9Gye9spB4wG/Ujy6CNTWa600bZKL
1moJtp75RCD3DKHSyfY81Nzwdf/hegKZhQ7yTb7KR3sWht7ZsQik6M48POFY
gETHJ2PWlBOIYew2/nuxEN178f1JbzqBVnzp0xhVLkUazVO9s4EE6mBUuo4M
l6L6Py+HG+4SKC05gviVW4ZW0ndoH3MjkMV1izM/jSuQ6/P8idhzBAoXKAsf
ssfI3YLn5jcDAhW4mV2/IcdALy76WfmuJVD0z83yU14MFCi3PqZHlUBOLZL2
kyZMVNPLIV8nQCDJ6DquiXYW2izbFHzqEwstiha9cdlKoIVBneftdSw0cC/h
4PgrAnGb8N4QKWehInvv2N+ObFT1eo13ZiwLndigbzS2WI0WdjQHsO1Y6HVD
3LVfyvVok8G+DXe6mWg6olCzJ6ge3dqRcudgIxOZ2jf2t87Xo5i5jh8fi5lo
hHvOuuxDA/o3suvCvydMZLDNwigw4C06X6xyqnkrE7VkL3Fp/G5Ga1JM7zMe
MJAkEjgtotOCFre9tv7rwkBb1MOMAs63oL/8pfzTxxgoePrNlOf7FjSZbp4n
vpqB9J9+vGCX/h558lerrfLH6E6DtpnemQ9ImrfyrO7nSpSaW6ye/vwDEtQw
d9r3uhK1RuzkXvX2A6ImWCoPO1SilfbHKuQM21DQ0bL1abMVqIHbT4dD6iOq
i2eOXRauQDLbvkg213xCYe42XSzVMpSVHfjlik4n6n4QtE2YrPNPyZ9BZmc7
kW+3xtOZ0kKkccts++qwTqShulkp2L0Qvdoq9Lp/vhOdlHic0TJdgELrgy6e
qP6C/mzaHlj0Ix/d6n8ysdvmK+oOvNXbU52L4oQafSVMelHpWdrrizFpyB69
fzlyvR/p30111/0VjDjiZ8u+POpHx95QPFIeB6EIHsWuhsR+FJ5f4Vyy7iGq
q79Ie/OpH03q+so0XL+PVh9eir9gNID+Zga1r//lhoYdNDK6Ob8j+e3hB3I0
r+BLof9VtYQMouYd0yvyb4Rjrpn4HvxmEL2+wUeNf/UCRx6t48hmDaL4E0UV
W5sicIOilPHj6UGUvstg5NyqKKyVklq799gQeo4ta3jex+GR8g8tLOVhdNfV
aGTmQSJ2+r6mvyDrB9o4PN5aHZyJe09/5mfW/0CfBmqPDmtkYauOBzpNAz8Q
P1VcNIiRhQ0ahzy+U3+i7FspAvvHszF3bpK4TMBPZNnyqK54ZS6O8FLd7nbm
Fyo8LHWf3yUfM6XkXxqKjyKbFo4NorXFWP9xXZWJ1ij69axf3UagBCfzuQ8c
Mh1FfhWxK0z2leCg+U/rLnmNItXFrK39TSX4SE9YTeTwKCoye/1kw7tS/DNN
fHqRMYYMh9ZdNiorx4Kqfho9BuPIx1BrctYA47qtT9d5m4yjVVpiKtscMfY/
FrtZyXIcKW0p2Cn+EmOukJLdJy+PI5dTpukn5jBe+Ddi3x4zjvLeziZuOsrA
v7qsU5u5JtBJS6vUJS4mTvtjl+MkNoEGHkyvs5VlYgeKS4mI4gRyvphKu6/F
xAP7Htbt2ziB5FvEhSStmLirrGq41n4CbT7311Q3jonfRmisYbydQEHmNfd3
arHwwwJ9vTOfJ5DGCtpw1BYW3tOyw/Df9wlU88jAN28fC7NX2OzdujyBGKfm
3WUus3DFrRDHEr1JJJd0Zm1+Mgt7hsZcO7p9EqW4d8iPF7CwQVaax6zZJHp7
qNBnmMXCBd/ZgfrnJ9GX+V9/BbtZOPPw/Juc8El0K7AESUgQ+IoLX96BhEm0
+/dA5kolAmsGSZWNZU+iN7lN1MnVBE4m1jZo10+i40qju8oQgWPX2/1MXZxE
3Tcvn1l0JLCNhfPkbv4pZPfSd0fnDQJTL3ktDFKmkPYQe+DafwQOfx0uuEpn
Cj2U2dHf8ITAweKNmq9tp9Btge7VKrkELt2sVGjhNIWOPttccraUwAOnndHS
7SnU3fnR2YJJ4C2ZUoePvphC40enW1a3EPhi24VunqQpFMMMMZJpJ3DoYrFD
Xt4Ukjifbp71lcDDe23+E3k3hZLWH1n4+oPAlGtZK8q/TKGpdbfPuv4mMIrg
CHX4MYU+/9jDXzxN4EvYUlFmbgoNUdU64udJfwcTkwmeaUQv6y43+Edgpsic
7jXJaSR2hBXnzsXGI/p7y2kq0yjE0f+aHR8by9lEmbxdO42806xVZgXY2Nh3
tNljyzSStWyK3iDCxk5p6ITG3mmkceZvB1WcjSPfPx1oOzKNOFsd6tIl2bj6
T7+Tz/lptKmP13aQwsbjypvm112fRkI628MbZNhYcfcD3693plFV/5jdMTk2
3u3UKfLo8TTyGnDAT+TZ+Ppz7QiDqGmk9c0l2YXKxrEV3vTB1Gk04IIoi6Su
72/JeFY0jYxU7/GR7xd4WlBt8w72NNpw94iXMKlV1rsyx95PI0mVw7eekev3
Ha/dF90zjVrDfGYJ8vxbd+U/7R2dRpcvn+aIJe3Hp1y2nVuYRs3UjghVWTZu
elf5M5F/BmWMWdVYSLPxnxkxV0uZGTT+603IKik2VlOyW15Wm0EC2as4k8n4
LXYVBGbqzaBhY396C5kfz8t8lJNoBjXO/eVIFGTjpNBjsfz7Z1DNyvVpqivY
uKU0bXXRiRkkMme0di83Gy/1LuWdc5hB/NoJkdRlAluue11b5TuD3nTM/Vc+
Q2DvI1OHrjwlNae+4qNxAr/5z6RLPm4G5e50muH5RWCOtz/Gb5bNoLldx0vn
ugmsNbXlNr1uBvkKf2t36SDwEWowb8vHGVQkT3kZ9p7AmQ7rqVoTM+jbpWnP
LhaBO574JXb8m0EvqJOdHOUE5in+pOMvPIvk2o1sWvIIfIL3tvE3jVlkOcJ5
6NprAvtrNzUFb5wl75qhmHEEgXOtlI9tNZ5Fe19q+TGCCcwfT1x5cXoW0WT3
b8aeBN5QLz2368os6qMHNoILgU+P29+b9JhFxuYvWU4XCFy4XTh8//NZdDKt
PqzFgsB2Xw5j7rezqH+x1iCXvL+CUd+uXvs8i1Q8typ9Fidw3gknxZ7BWVR8
LGcml5vA3J0BHmWcc+jx3N9TbsMsnNhRtuHa5jnktMrK6mgWC5tH7O7r3jWH
jv8ckhaJY+Hpo20h5pZzSOW/vYmuT1jYpH10VOPqHArctGu1rTMLD35USe2O
n0PfKKfXxpPzLPh55hHznDmUFvUpaUaehTdZG/GWVc6h4jXDEv9WsHBAm5Xd
84459LKUe1ynn4lXf/BXNBf9g1b++rZRPpyJL7WMhJR6/EG5tqOnjo4xsGSI
B9II+IPWT/14odzBwGUH+MbCwv4gjda2xddMBhZqVt7nkv0HNRQ/Lf70jIEz
mix5Nb7/QQ/D5N0FNzLwWEOJR9jBeXRL4Sv/949V+Fq1n52zxgJ6lnVqk/OB
ckwbMOWb3bCA7Mdwso5sOW7kEkjzggUU6TRkE9RdhlfB44nA4wvI1oPatOpK
Gf5c9vxu4qMFlGo4f2nIpxTvyEmO/fx7AU2GFJ4+E1eMJaLqOo1LFtHWn473
9SLzca6LsJXc3r/o8Oxa9/bwJPz69uWfukc5IEoge2G3TQLSZQj8CTjFAevb
JVsMJxMQgyeVt+ccB1gf6hr+FpCIeh8PqDx24YArPOVgnpeEaK9OHf0RyAHn
v93dv587FUWyD7BfV3AAcwMnh1pYBgoV0Y+VpHOC04Ua1a25eYhu2ZruuJoT
Grh3UoJn8lBuuEspQ4cTlGb0x18a5qMW5cw2py2cENhzyO0LIx+JrlcXajzM
Cbuc7O7+bCxAD4/IufsGcIJeq97fsx+KkE/c0qHpEU74/GklD7wuQwd1S65p
TXGCRvABxpfPZYjGvPHUbp4TkoV3y8pJlqOyvp8tLbxc8K29xs35XjmaXPX5
QCaNC9LMHv3ne7IC2WUU7r94kAtmIqpnI5Yqke62a1djjnDB+Fnb4n6dKvSv
Sftxmw35/OmarYRtFYr8nfB2pyMXxCTwNW8jqlDr+tB9yj5cIGMSIivqi9GO
Uqe9HflckG8oJcO+xUCiZpqOYmVcwLNwvcI+iIG6Or8/MGWQ+317XrS8ZiD3
JZu6grdcIEF1qRpvZKActG/30+9coFT3OMNOiYlUajRMzGS54Xx2aNe7AiYa
O9J//p4SN7yciPqXUMNEFUOxfiVq3FB022zesIOJjgnIsNV1uWEdM/hOygIT
hZjzGHPv5QbjIyN6PltZiONDL1R4csPnrM06PAUs5Pej6rXnPW4QkX68d5rF
QgIcMVyGD7jh762mkefvWUhy7XF24XNu2FMY0j4yykKrAt7vzs7hBr2Gga99
dJJHYrJTrxZzw5+7ds3H1hFIp+CxgHYVN9wKv+7rvYVABt/2NqY2ckNd2lnH
DkuSh7awLOIHucGofnCc8R+B3h16lW07yg1vvYzysgMIZOXgLa48zQ2hMils
86cEsnlu1BrFyQNnFcy3PU0gUG+63IYT/Dxw6YbSUYMMAl1gzT6TE+OBdY1G
ax4XkDzzO8/6uSIPRIYevILYBJrkfVpkpcYD9l/io6IbCeSm6CwrqckDzcMz
y8mtBLq7V+tz8GYeCHZfN8XqIRCvrYDR/u08wP9jx7627wR6eGsoUsiEB3J6
Mi+F/iLQs4QEmweWPCDN0/WKQvKjXNm9StPjPFAYmPaoY4Hkq5YzNF5bHlD4
++v7/3lTdWjbHeIiD7gliMVcIHk0+a9C772rPFAV0hens4KNNCkLADd54OXv
J90JgmyUrdnx+p8nD8QavzarFmEj/R1FXJX3eKAx6d+nUHE2Kjkadu72Ax7Y
uzjmJizFRludrrMNn/CAu7qc2nppNmL6HVz15zkPbF5/p5mb5G/TKB3/omge
uO72wPUeyecNucJDNxN44E/FnGg6ye8WdT93b0gj4z80Hn6X5PsP3XWpEzk8
YKwyI8BF8v+xmWSBnGIyH3j4wv//PtAldP+SUxUPBLmJpPGT2pZ+rlG7mgcs
zHjbH5P7vxvs0P7VyAPLv96PVZHnXzqg/PhNKw/IVbZNR5H2xy78HbX/zAMV
5e9GV5L+3fD6YqHeS9bDubfnOOn/n9DS7IFBHrB5H9hqRMbn9eaFeMIoD2xY
k/auloyfk+F67ew0D7z/daebQ5SN/D9ZtSov8oBvcKrIIJk/wVG9Dd2cvNBx
RMXRjczvE27xsGh+XtizcudyAZl/CnVs+oQYL+jr1/bEkvWJ0H1rLS/DC8q9
NQobFwmktDutqF2RF3SOFFW7kfVVv3nR/bAmL+SmCxdwjRBorVGPVZwuL8QG
fM/IHiSQPsexdT838ULphtq1lG8E2hm0d/COMS/UJR+n8nwk0F5LFrNhLy8c
uDmX++QdgQ7KbYmRPsgLBnfc1nyoJdDpRO3D6Ta88DbHWMGnlOznS0nrZu14
4dlgbv1oLoGu6NKEdjjyArXMhCGRRiDPCjHWJ1deWFd7at7nJcn7bZPruJ7w
wgWLqiURVwLFRF4W2v+cF/JKXpmiywRKtB0YfBHFC/Llgp1rzhIob+RjzNpU
XtjUeeSaljl5/3hKhY4zyfg/iCcN0Aj0sUFvKKGWF1qf27kNSBKoKySNNdbE
C+Wf/7TF8hHop2K0h18nL+CL2d+NyXnAu/HOUPYUaW+7m/fhYhYSXpxjLczz
AmzRrV77hpwfTJdYEw4+WM1UkSMiWUhlv531F2E+uO4fXUj/j4W2XjAh+NT5
4O9Ht/ry7Sx087lQ3KljfKDxW2H3g0Imun3SzzP1NB9s5uXm3pbARD6qf62n
zvNB0dU/frkh5HzLHBMOvMYHAZ3SPzsvMVFG9XvPgod8EMsn8nGTIhMNzLw4
IlTJB794JhYtbzBQ/I4NN74SfBAWePCA6UkGOvP43ZPsBj5g1CwnT+1koM6V
vPVWHXxgV1DB4y3BQO+trm+JnuKDHOmxPWVHMKrKNVdZq7kCHvjt5DNPqkQv
rnL+tHixAu7advrs/l6KDpdG86nGroBuyke/q0mlSJLXQG0qcQXcY002rrpQ
ioKjnWxe5K0AsaX7bof6S5Bf45d3PU0rQODNzob8zmLksqYo34WHHyLvP98V
W1SIzL5f+i/0Gj8E1r3q1dHKRab/qWXscueHRT83W/1vOWindFfnrDc/TP4X
YjIdnoOMTPYbnAzih5pzRwVSOXOQZtK6KbUUfuCrmHPhSs1EQhemHQq7+KE3
Q1dX9ksqejvw3+GO3QJQ+J5z88/JGGQxEKJFowlC1WqZDV7n7+O3WgNtNisF
4feW1snN7AC878Zm7yhNQTCp9HSNVXuI93B1t8htFoQKM2r53m/BeKeK1i2p
g4JAsTLNeq4VhjfaVDP4fQShu8ijviM0Biu2zVtPfRcEg7dxFCZPKo5U2L+s
NyIIq9Zo3Jh4norlz71KdZkUhKlDVxPr1d9gmUnTxdF/grDy1gM7x91pWFw8
7NWwrBCoeoe/XeuXgbnNdX593SsEwq1czryuOfgnYXe3LlMIGGfoPYUZBVj5
acel4AIhGGKesbSbKsCHT1tYHy4XguXnO88WGRbiqj+Gmr11QvC9IjTnYHUh
Dl0r0TbXLwQXv+xdXttRhLe8wBoaVGEYI3xqnvwqwS7nN0qOqgjDmd3+Rjra
pThZL30pT0MYTiTu8LS7UorF34a/375RGLZfVVZ78KsUD3A43T5yUBgOtK/5
mTZQhoMuKTbf9xeGTfSNbZeYFZi5ObR032NhqLSVXvFroQLP8vAnSoQJQ0bE
5pnxDZXYNm7KPea1MLQ/mN75MLES67c10AsrhCEsnWjruFOFv27zuDUwSfpj
IkUVEyPfV4V+26bNC0Ow//vxGg0G3tNxfp8Lhwj4aQTGGgED510/qLIkIgL5
p073W7kwsH+KRoPUGhEQN4mUMG5iYB2JT0rGZ0Qg9e4YgT2YePDxoM/zCyJQ
UngqLjuIiWME54aGLovAwqn786fjmFiYRy4vyF0EfH03yi0STPxz9rjpp6ci
oCk7XKQqyMLxNy6lr44QgeoHNw35FFj4+Lin+O1YEdjHGbQulXxfr/sR1amc
Ttq3r/VRM2fhpK6vTo5s0n7RTsuJQBa2OT72obxBBPrPHZgri2Bhyqd/BqLv
RaD4w5cdkMLCPs3K3PlfRUCEa2rSi2BhW9bZF0uzInC+46t26R8WlkPXlyz+
ikD4+PvTJ3gJ3Fzuc/Y1tyisU+VNKZQg8PbCBC1TcVFoy/aufrmGwIqp3/GT
NaKQzhHuI3WEwG0rZ1f2rROFf3ePpty1JfCj13wP9TeJgmPTwWfJlwi8EKlx
+PNOUQj3qdRW9CZ5R9agVGuvKChHpIVeDiCwY9gemvcBUVjbSejeCCH57bHj
MN1GFISnGU/TSD4LEfTc72onChslT0l3viHw7oCHebUOoqDbGm7JzCVw0d10
ryuuoiDfV+ZfxCDw1b/l36pui4JOVJopu5bAKz3fmkr4iIJrqLFl4DsCP7sx
Kl4ULAp7pqd/GHwhsNn4X1f+56Lw4dGV3WrfCMx1VfTLiShRmLho/ow9SODS
HzTIfC0KaUN9JYojBHa5uC5pOUUUjCweJWpNEHh1PxK0zBKFLZxZxhMk3/ac
OeicWCAKXK0Mv6sLBLY4fs1wL1MUGMmt6YFcbMz36V5sVK0ofH7GdXMNHxtX
WoZyjzWJwsNuv/g7Amx8szneAdpEwWpIWitImI21zfObQjtFgcK6y3VAjI0H
6oj133tJ/8/E0eok2DjKpO3F5iFRMMs9cWuO5HlL1sBS4KgoMJvSOL+SvC+I
Zs52TYmCptCLUndZNnbfsZq/aEEUeC9kePXLsfGg8cmsJ5xi0HfTxm9Ono0P
mwYfduQXg9ml5cYCKhuz9jAXdoqJAb/qxYMKCmysu2/6laKMGKy92SamRerY
/Rq7ZxXFwIRjheAAuV744InRZjUxkN+tC6ak9rR8/OyNphhs2jZfcIg8f/gw
w9BXTwyctt+7wkfaP3J0qsfGQAyklk5dOS/Dxuzj6v6bkBi0n48qv0xh4/U2
x7XFTcXgnH+5naIkG786HdT6w1wM3jgUXb5F5kP0LHYnrMSgpW/+mweZL69z
k7SYE2Iw6ujYqk7m89eFVdW3zorByc+n9v3Hy8YnHI5dPuggBh36STb/cbJx
3aVHEprOYmB+3kdW4y+BN12tKua+JQZmPzKCPf8QONF54tRXL1IHH/zkNkVg
yesreYp9xSBWTIRHmRwBd28eTQt5KAYqVTM6LsMEtvGonDWOEIMfLh094l0E
brg9Hq0UJwYzpzZH2X4ksIG3mvFckhhYnHtUdYLsR4pv4JO0fDH4oImLLTCB
3wZZr5ZoFoMMzzhlwxgCGz158O7nRzGIiW8t73lG4NSn5TfZXWJgz5neqfeQ
wH7hqky3n2JwO7Npz2dXAtNaZrV/c4lD7c+u94Z7CWx9SJzDhk8cehO3nd+x
jcBBrWs+1AmIg2G61O8ZXfJ+ttl4xIuLQ/A/JnFRlsCfPrOqrWniMHIxLPhq
LwuLnOyKYKmKQ26yAUf/exbe1TVzed0qcYiVyjZcQc6TvO7VkgLa4nDx/hjv
qUQWDu4PPl1hKA6nxkZtTM6x8O7RE3N0a/L8oxaGe1qZOJbi++HOMXGotxnM
UcdMPL0lPbvrpDhs2ehkXZ7OxK8eLtqH24nD3pevHPn9mHhBI7pDwEUcUj47
9xjpMXGG3dfS8YfiQKnR6N3vzcBcD3nD9weLw7FtNS+KLzLwsdy119OeikOU
2UrprxYMzMvhrXk+QhwK9qn9tqEx8OkYWlR7kjiE3LK6c+smxuIdZ7yqGOLA
/d47PaaxEl9cDjimwCbjz7UL2xdWiSvUc/Tda8nz1E2uedtUYkdXjlG9d+Iw
OOv35tavCsySfH0q6Ys4TD4unWrgrsA39/dtD5oVhzpH8S0dtDLcwTrPeUJb
Aiz6fDKe8Bbh8R2d1P/WScByTTPDjvw+XcE8oP9qvQQIx+pzD/kV4k3YyH7Q
QAJo4+tL+bgLcVi5eNN1Ewlw+HCzuGIxHx8oqIh4dFoCrnostLf15OKaJIpu
ZYgEDI+H6I5NpuHCB+zTKjMS8HU0kjs2IwSnmjXKBfyRgJs2qxl97GAcKdza
OrooAVsNYv35dIPw3ZAe03IuSXh7S1B3gicAm0cs6BwRl4RzeurCotYeuC9F
d/mRliQ826J4fr+aCxKtjY6bOysJt7sidilnRiDOwITjpy9Iwnx/OUfL9Es0
bZYmVe0gCf8aO0wkt0ahz++KA0KdJSGrcPTNxvoYlPip1Xntf5LQHnObM8fp
NTIa5IdzEZKwXKX60+RmMrrI69r77p0keMrq6O+Wz0FU5fr2xfeSwPhezqVm
m4PeGSg1r/4oCRupHeKs5By06Up1pc8XSbA9HN9msiEX8X2Qjto0LAkjXKxH
u/fmoaRXRdaxnFKwzVL4opVDARrY8qfhqr4UHLp1S4V5uQRFWJuzIjdLwRW2
abzimxJk7vyqtNZICm5+4U1RHCxBBfF7UlV3SMFqGedcvjOlyE/g5f2P+6Vg
xv3a6UvmZWhluyFss5eCpgJVi1xKBTp3/XahcKQUWBXfWR1mjdGm9d2Fa2Kk
4B2P680pP4wEJ6HI9JUUVP31PtWXj1HONb7iu8lSMOZxd+MmfgZacnlaMp0n
BcU+XWwxOwYKd04p72qUgs9VNUPlgkzkuE6wYv6dFDyn3frHojHR1t9XKmRa
pSDa9YPA4/VM1O+0vvJghxSUiup/dzjORLpOlVXsASlI0P6ibZDIRPVXPjAz
/krBgm7y28W1LBStvYlVz0EBb+fPy5IkX7iMRLAGuSkgtna3xo/9LCRz5TSh
IkiBmJNd195fYSG7yz/YYTIUUFXewxWUwkIbtcyrc+UpcPL80a9hhSzE/yur
+p0iBe6k+nCdJFgo+9LNGn41CtjPpdjTulloyXG51msdBTrWfnX3EidQ8xq7
upfrKaAot+xxSZFA8T/YdUUbKVAS8PQIZTXJh44P68e3UODA09dLkdtJnnOQ
bjy/hwJJ5SsynB0I5LjavfHePgoY/07SM7hOoK3DnY2xFhTwnGPZlt8mUJ/9
q7cdhymgcaRaf+IxgdbZa70zP0uBF52mW2SzCdTtqOyceZ4CktGf3ayKCRR0
RUpc1IEC33Wb5rZiAv24tnio2YkC5hbntsuSfBpx8/fkuusUaJzKrVlB8qup
W/+zEFcKCGWUSSd9IVCCV+PHQ14UoDYejPw+RCDLO/hW3h0KtMvdjH4wSiAO
n3xZKV8KzNC8/7VPEijLL6Xkhj8FVh5TT/swR6BTAVHH2wLJfAf6Pry9RCDh
h08W9B9TYIgqHNTMwUZlQb5Rz0Mo0GofHt3Mw0YOT9y2zj6jQKHw8fTb/Gwk
G3r565EXFPik/Sv1gxAb1YSd8S6OJP3J3xXQLspGN19YKcvFUmAwqMowQIKN
6JG7Ge6vKbC5R7KwT4qN3kdvOfs5kQJTG0/9/iHNRnfj1nEZpVLgQia1N1qW
jXTi1RIi0ymwKK15d1GOjboSZXctZlFAV/JtPS+VjR6lCH0/mUeBNJ2EknJS
G6Ut368opMDD6fy9SgpsNJwxpa5USoGJmfO3NUkdnj1U+18FBYravPf3k+tN
8r44dGOy3sbazN2kni5oFkAEBX4uz3cclWej+GIiLa6GAhX1nyKkSPsHy4r3
cTRQwOugFN9tGTZarkgfsW2igALNTiOYwkZZOO4xs4XsF892nv2SbGTDeqZD
b6OAjdmPlGIxNhKsDmj2aacAx6CTwjthNiqtve3S30mBo6OvLocIkPltcJbY
1U2BXin55H+8bCTTdC4v8RsF2EPvP8txsdGN1n3TF4bJ+MJbnQ/NE4j+ET2v
+UWBc3cnZp2nCdTSvmGTxm8KjEb+Yxj9JtDarwruwzMUkNPLvPWxn0BdPWLy
e+cpIPJOJTTpK4Ee9nGXvVmiQLa0+kF6O4GGhn4tXuKWBqnFMDq9nuz/nz3R
jXzSML8DX0tiEmjX6Idt2oLSYPpkseNjKYFeT5bfGRWXBkMp+s3tbwh0cCZb
xYIiDcckM0ZvvSLQv7kEZpasNCT5+QueekGgk38fcbvQpMHhpFndej8CCXLc
TWxRlQbLC69K6Z4EKuG6aaK3ShoavtB+M5wJJM1vEzCpJQ1l/9Z94j9B3l9J
bSFXQ2mI0Hme0ahJoO1Xr/6I2ioN26yCK4WVyf6uzaplIWlw6maMrpAiULCX
np+4qTSsNrlns3aBhcwHN/1Nt5SGtUbv7hhWs1AFuH9ptZaGmJHxJweLWUg7
qrR0/hh5XtgFI7U3LCR0cOut3WekQUPwts7SIxZqKN3xu++yNIgvad32sWAh
I4pvk4CzNAhYdmz3IudZmhM7Xfe6NPBH2R/ZoMNCgWq7HbzdpUHQXMelU5iF
9jw2/yZ/Xxr2mRoLS9UyUbXt0Q8HY6Wh2Upr8OI6JtIvj8h1ey0N9iXQaaXA
RInSnU9iE6WhxReZca1gIr8GG/ORNGnYdKa3NvErA+3Ut6sOKJaGgXyfEP4H
DMRYcbW4qkUazh98/141AaPyLJ8obW4ZWNqsOrJwowLxmVtTX/DJwFiPjGK3
QQU69EPjJaegDMS7Z63a87ccDak1hX8SlwGBe79qCvzKkdRL2dC7NBl4f/Z5
qXBwGbrsm/GgzVAGPv9Cd14/KkEKxz65ernIgMpTnnwxowJ0m1Pz4NuvMrD/
+9e6gP1JSLDLc49TgSx0Rzqxa9QT8Ca3NyJPimXhVepY/seyBHxWsqM1u0wW
dPbtjYuxSMQlezaemmDIgvHVHupB1yR8sfD3tZtNspDMNVvKi1MwM/h8lOeg
LNwoK+IY3pFB8oXFmL+cHDhnpLSW3M7DiV1e+SkKcrD57c2CYzgPN7ulu9fR
5EA3xUqhkCsfq2fxcwuukgNtv/PZcQ/y8QcqIftYTw665I3fqD4twDrTm3c8
M5ODx9lc/wTCivD3ZNWwOC85eJS1MUTnZBke8fs2z31XDriPSKnceFmGJ+1e
n3HwlYP/rsvI7m4vwxzKqlp6D+WgIfvhqpeHyjH1hQqL9UIOrqyGqHqowAcD
lMe/58lBjskE3z3+Knz0Qo+1WZEcxDtEh5mgKnzaOK48q1QOJlO85R66VuHL
y7QAN4YcJPtoOj3prcL+bjSawDs5KOVYWXI9B+MKeyVz7R9ykFKxWc45ioEJ
k6+5ISNysKYuNyomj4Eb1GJkZ37LgfUBF5f79Qzc3qPYXzkrB3kZYo/uzDLw
5FFFzwM88nCA64C+1H4mnt/Y1ZO/Qh7MjOEHpx0Tc1CiTeSE5CF5BY9Ayi0m
FmlRkPgmIQ9vB9O0peKYePUehdTryvLQldDMchxh4nXqX0Ta6fJQ+HCDH9cy
E2/iibqxRV0eeJaaZQ9IsLAxg4p41spDdZXSPa6NLHzagPrpuZE8SD+R2tDg
zsJhq+V5Sq3lQcsqjfvVBAvbnFZP6T8mD3OXUeDVfyy8MmyDmaiNPPh29v2b
FiRwwfL+kHN28qCU7Mmlp0bgtk8+iqLO8tCwvz762EECRwuHYIPr8nDSPq5p
/ASBz++MsTvnKg/9H4xf7rhA4OnM4tSS2/JgfKzRUdiDwFL3R/TPPZAH8Ylb
K4xJHuosm29//EgezEFPOTqJwPHjfLdLguWh7tm+qoxMguRFVabIc3noU8xU
nK4g+eapznmDCHlY9yAiQZNNYFbtlhXnouSBY8PaHXKNBLbccGR/yWvy+Tn1
k3IdBKY6nhvvS5SHxsjwFM1uAvfFujwTSZWH/Rp1aVP9BL4u+OizXZY8GE2r
3ntD8p8RRHg9zpWHm9fqtMNJPuS6laRcUiAPExZrwZDkx9Bv+IJIuTyoD386
Ec9B8qdsE79BlTxU+UsbO/CwMX1/Z7odk8x/JZ/1wAo2/ukzZPGYLQ9X/jb7
ygixcV7J9ERxrTz07Egh/v3///FjnM/7Gsj92z8IxIiz8c6VYgYi7+Qh0z/d
fILkY8ETil82v5eHyawI30WSn1ufrPG2a5MHTWdKSjnJ15HVm1Qft8uDQOWb
HD2Sv+0WjdnFnfKwemA68hTJ55p6h+z7vsrDj5cJZxHJ75MXTwuKfJOHqyKu
nO2kLou+nLl5QB4CpgzdV5L879PqftBuSB4+B7exNUhtxu8/FfST3J9vMNRL
rpfY/iy8eFQeDtVf7j1A6o4brwz7xuVhkfDLu0nae/Ums0t4moxXOcP2AOmP
Q0/Znc1z8qDQqvC7h/RXV7qObrdA9vM25XPq///9gtnH6qC/8mCjKEXQpdiY
cbfPoZiDCq/sL8h8JPPxoOi3UB83Fd5sf35hmygbHxxZyhJeQQWJmvVlJ8l8
ytEFLTcLUqGJp4emy8/GvUdlZ86KUGGqYl9cGVmP1McrI4LEqRAFW/YskvVy
IfS2FEuR63fe1ZhcIvl9fnv3Nxkq3E38uy+OrC/HOvN7wlQqlG5LruaaJnBI
5MXasypUEP0e+nfkB4Hdbvnc8FKjwgT1qE7IAIFPW8Yqv1Cnwn7zns4Rsr+0
BT+5vdWmQu0b9T+trWS/D06oDa2jwlOzxmc2b8n+ZYq0cG6ggprBP45X1QSu
9zBZvdmQCgEpQTmHiwmcY3227dBWKuyoe7aqJpvAEXr/3b2CqDCN77yfSCHw
xR8FHa9NqHBbg3O7+wuyP4+vDBS2pIKlm1v2rhsE/qEPGzWsqfBEKIP6yJHA
LeI233Yco8LapdLCoDMEjqt7Zuh2mgo8UQKCLDMCbzXg/vntEhUSb+ntnlci
sBpFOXzpKhUEZLaYKkkSWHDcaKfsNSpw5Aqk/+UlcEfK9UhzNyq0tzVaTo+w
sKtsn1mxLxUKy77zVxWT82Tq7+x7f3L/uL9SwxsW3tUsnzASSIVi00qBsCgW
lgw4tKgaQoWl+4c32HmzcNYsIz0omsz/KfmAUWDh4Y9xwnaFVHAzv8o7UcrE
zbnlJV4lVGhxZmpOpzBx0eP28y/KqeAgn1xa8pyJ/UzEKt8yqZC26CMb4MLE
qoXeVze/o4LSyEkFUGPiE2Gn3gkPUSFonYmZ7X8MrJgvqHD5JxVMr1uurLzA
wD3vi+3rR6nQtqHq8cf9DHxeTJLTf5oK5dHfY42UGNjpYc2GZU4FiP514APz
GsY+d9e9nFBUADcrlsVsbSV+c4Xz/CdLBdC4W7gkIF+GrzzKytE/ogC/O6K2
WnWWYp20k39DjytAwKvqMN2oUpw3VBh+wFYBbnPmZaYrlOIKu0v1dVcV4OPO
jUyGbAluOfZBp/yBAki/sh+w/luI/+xKmo+rUgBRin3R/P1c7FUe58tmKsDd
wvbALsjFHOsjRX6wFeD8NenMu4s5eIXyE9X1jQrQ9bL3g7hLDpaZd9/LblcA
j7aE1o6MLLwh0/zl8Djpz6E32v16adhJetpAT00RTlowb7P+vML933e6swIU
4bfkcN3lOy5oZ9y7eM1HihC24JluneOKXh070RQarAjzy/qTfb2e6HTjNfq5
54ogo3/7/u5XPqgz59Vb7gRF0N5VwehdDEKtt/+pmFQpQiS1eCj4bQRiSZTV
104rQuvm0dOsgGSk2mgyve6PIqyauHyBqpGC7vq9p0UsKsKV+M9PxGpS0Pa5
4RsOXEqQZWlaXMP1BpV1ydIExJVA85fQPZpbOspLcb1upqUEb5qN2p+vzEHx
2/QUms4qQYVM7FZXRgFiWQj6Lp5Xgvmde6+xuQpR35n+n2sclOCA7X9XqncV
IjWf52X+Tkpw51phb0dtIUqsmT8Ot5VAm1NxjVZDEUo6wIrID1MC/5DDbhlV
JajGNoqj74USmOUp+KQslqDBazcdxKOUoLj+v0ATg1KkHqZucPW1EowdLOK3
zylFyR0P29WzlKDRNs5FI7oMpZ61komsVYJI99GGHtsKVHdd27uuQQn+3lL+
kfCiAg378g7ONilBfVb3s79NFWh1cnGhVZsSZHro2DsZVqI3PxWsRb4pgbqU
nqmuUBVKuzHw7O4Cuf6CtX7QS4wa/CoXs/4qwaLQJry/HqOfz8PPfeWgQaa3
02TEH4y0SvZsMFpBg5Rjb+oHNBkoYymjdUqKBlFt2q5wn4Ey77tK2K+lQe2f
qKCTOkw0svWUz31dGizsVrX5t4OJtKd3TSVsoMGNKex4zpqJ0uwoH3sNaXBW
MlDzxm0mSkX5ESdMafCA++2312wmGp6NFPDYSwM50ZdbDnxiIo0sH88X5jSw
HahiVAwxUbKipU2bJQ30XvoebhdgocT5cWWLMzTorTzAz7OPhQZyOkKu2NHA
5Ry/UsYJFlJzYHA+ukCDq7+dfSUvsVD8pyf9tZdp8PJ1raP8AxaKy9dJ2eFO
A7pRRbMAk4W6L8nI2d6mgaxzcmzsOxai0f898Pamgf+klcr4FxaKDmm6VO5H
A3zW1LtuhoUir17R2fiUBskDcW/2qhOoc+XhOKswGuyoXyOC9Qgk37VF/PoL
cn19BeP3VgJFmAlNZsXQIKizxt3HkkDtnFN2Ta9okF0mqDtgQyCZ0s4PvxJo
8OrSZDSHPYGea6QVrk6jwfnCnyscSR5r636qvjuTBmEFAYwCXwJRwj1eXMih
QeeuvoSyIAKF8uz1iC+iwbRH/KXpGAKFfBvaqkjQQDrxV6ZiJcmjEc2ZRjU0
2NK//fImNoHEDhbTjtfTQF/V44pAI8lnVf4c4c004Nw18bmT5M93rk7XClpp
IPzfQbnPJJ+KrD3S1/qRBu6cndtDSH4NilrFFuuiwdbfkVOrxwj01lJko04P
DZa+DJ4UnCKQkOBMknkfDSLi/W0T5whkxuySufydBv25XBOziyTvurMDAodp
8Eir/y8nBxvVr8v4k/KLBjcVctyrudmIf+iZY80Y+Tx9wmrHCjbaE3u7c2CC
BrNWur6ugmwUYH1uH/cMma8VMwtnRdgo/kCXzYU/ZD0+FhZuFWejir3WTrWL
NHAihmZZJP+3G7+7s2aZrPfHH/nTFDaa3Lb76SMuZcge8u5/L8NGwgaM+FFe
Zchsb/rvhBwbaaw3LDggoEzOl7NewfJstFM7rzpXWBnU7q3pvEplIxt1rXYp
cWXY+c/92R9Su6kkDrtKKcMvHv5kHQU2CqUqLbTLKEPIz0lxcVJnUMKFjKjK
kHG9rC2aXF8rKqYUraQMaW+Np9rI8/v4H+j8U1GGwUcdziWk/SUuTrBdqQyf
X6of2C3LRrJ/PQ6xNJThPB1e3JNmo/Vzk3YrtZQBeUYdsJdio/0Tl2/665D2
liXv/SHjd/g1cH9YTxmSpgc2bhRlI5/vp16YbVSG5sP5HkpCbBTT8yk1w0AZ
rib4Hs8l81vy+UCZ6FZlkC6s6h8n89/6oa7RBSnD6HXd1V3LBOKvKxvTN1WG
B44fVxXNEkiNtYHjxV5lCLV/zJs0QfJ/RYbEvLkyrFzwG0EjBLqRE6tfaaUM
R785a3v2kv2VJmuqfFQZBkymi+Q7CZSaGHL03gllUAn+nH7hA4G6I3w8Tc4q
w7iM0G7uagLNhy4+SjlPxpcytMaa7F/K45sxAg7KUFa+a9yqkEB7711kNDkp
g+ZsZvaxRAKdv93zft11ZRCtMBw/HUUgb9dj/U9dlWFableCZCiBChzN+I54
KYP5ndp/Pt4Eaj5HyJbcUYb81Oh5dJNAP09tXUP1VYY1FilC6Y4EUrbUMe8O
VAaeul+rg6zIfjWSDL34gtRnN3rdUSNQkv6jhLpIZVjQMT2ZJ0Mghg5PoWas
MnzPufYlTIBAM/TZ9rFEMn8t+2Icx1jIVqhTyS1PGfxHxPyOFbDQxq7XbwKa
lOGO4VchXz0WEtdx+JPdogxnBNb5/lVhoZE7Ors7PihDv33UfxvFyXmnVj6w
ulMZjFK/T3aPMhHlcptyw6Ay5D5U+URLZqIFL+59fBwq8GYky/SxIDlPky5e
j+RUgfmDQp/+zTDQp3f1L3W4VaDmhZTe+m8MlKcSMnyETwX+pmt59RQx0CW2
on+KsAo4rOGctTnDQJ+FNjH3yKtA0friKGszjGr0Xw53UVUgCdX5VcpjVHBq
Seyaogr0mYqezh+uQiHZrNMvlVVAQdE4b9/9KrTH6sDSj1XkeqvpyZ2llagk
0mHzo/UqULV6R+iEcAWKWBOV2bRPBV4exa/eOpSg6SnTJN/9KuAqKHrTVL0E
HaiajDY8oAKefxRNjvUXIz4rs6AkSxVYPL7j3B6bYuTqNX/pv+MqkMoY9vHc
W4Qsm4+uXmuvAvYluVZakgVI2JWSEOSjAlwRlxadGrLQHcbjiH2lKtDcaF0U
av8c/fzKCJsvU4ElrdQ/4fQwdGRxKiSlQgX4TXISd38NRdqbTgRyM1Tg97Hl
w8ShENSRru5ZXqMCL9xurnVx9kfrX+CTWm0qcOtkr4dxwAE0eHWCJvRbBQxv
+q7Wv/EMH3q0UqF0XAX+ja14faokDFekHpW1n1SB2en/pPX+PsfP+ivFiBkV
ePXzxzfG/QgMxx9y3F5SAelvCmPjT2Nw5C61vp8CqhATrs3NUZ+A9ytYJzWs
VIX9YY++nPHPxBEDOoyT6qqANpX6H6dk4YFM/i8jGqrQGr0zcPB1FvaCCnEx
LXK/+KuIvPJsnHFBzctKTxU8Vf3TR6dzsGDOhGXXNlWwBY9dNrL5uHZXMMfY
EVXwGHXalqxejCVFHRTuHFMFQRuPbQvni/Hp9h2bxE+oQvwCV/l8fDGedZy5
vP6UKgSdGc+eUyrB6k9s2m+dU4V5NGDRLlaK/T5rZi07q4L5l7BR+74yvMOp
9qREoCrwdBY1r95WhRc6fpiyH6pCu//SlsAbVbjAWHi9W5AqrPtWaeXwpgqr
yx/i//pEFbQupU/HSmEszO4sSA1XBbpmjffHbxh3yI+JQKIqXEsTD7TOY+BQ
P/H5ySRViCpc/X13PQPv+71+IClFFSY4DGYnexi4iu1WJpSuCvteWxVfE2bi
RGdO+/ZcVeD1EvNYYcfELtUUhhNWBb1V/FKmy0ysqbs5XZWpCiO+J3e+lGDh
/sjj4W0sVRARQQVxaix8xCX2ilENGW9QtU61KQtvVVgtz9ekCg3T4i6XAll4
9r4ZT+k7sj69u6IPvGTh7PErvy+3qELIvuSG76ksTK/JrX7/QRXEjNzUV9ay
MP+1LddjOlWB8q/t97dlFmZ9OXXqYJcqVL1rNdwjQuDbpnf3cHergsG2Gy9P
UQk8plBNc/xG1rc7uyJsA4FT/YcEFPtVoeWMvnQRIvDZCYGZdwOqsL5vbeb9
fQRuq7Fo1B9WhR8NG9t07AgcrHetaOgHqYX4uPmvEnh39LPXkb9UAaJbcoLd
CFx2rcON47cqTF341p7wiORBRbuVb2dUQcmbVTNM8qbRBi0duzlV0O15nhxH
8mjb3unNf/6oQqSBRqAIJjC/m/++lUuqcPFbyA+RJgLHPz5gXfZXFWafhm14
9YHkyUS5MweXVUGzMlPux2cCu7xPu+7FRYfNJ1WPxX4neXL4hpckDx1UY1YG
CP4icOK/rf6pvHTYGvFkQXucwNul+UK2r6DDIQ/bON4Zkje1ml+28dNBKSn5
XNg8ga/vjEi4JEiHxAWfTZ//Elj4+NlMDmE65Eqs5m/jZONkZ83icBE6HHbt
rPfjZWPwn2Joi9HBsXP86i9+Nu6MrmhgidNhg2Xb0AphNr6Zf7/tmCQdBt05
tDtF2Vi0waJ7TIoOx19x69pJsHFqr+ywnzQdUma9f8ZJsfHOud4JqiwdelPV
rZ5Js3GXSNpijhwdajhZdltl2fjWyhu8u6l08PTTkoqSY2OJLVvFvirQYT/3
oTPZ8myccYhX/oYSHTzyNhh7UNnY1OEdXUCZDpObhsvJ9w3c6/1CO06FDvq5
4bVrFdjY87ntpo10OkixPS/IkZqSsQYa1egQ9qL/eQm5Pos1uffsKjrUtm84
IUrqPZ/LrebUSX+zvxXIk/b6fvuderyaDov41ptO0j8vPgt7NU067JIM2XpI
ho1llGSvlWrRIXZF943/KGycs6HX88BaOpQbrzxyRpKNzcze+H3XocOHZ4a/
Zv//exXb68G3dcn8v1+xdZcIG3u7bYmQWE8HF9Yjy92CbCwXzBOfsoEO/yba
DDlWsHFeYlP6to10KAnk/efEzcbm5eGFHzbRIU/NMuPZMoEH35/BjgZ0aHnJ
aeW0SGDq8kTr8y10GL3zr9ZkksAF0uVdWtvosH1qfcnOUQJbaPsNMrfT4VPj
i4GZIQL7HpdZGN1Bh6nN3jvudBGY5tLD7WdMB9Ym52jrTwQu8U8VoZrQ4Wyb
04O+ZgKP5Bupmu6hQ8HGNTdVWAT2b+DW6tpLhzuL75PflxFY5dtb/ev76FCZ
cr7FMJ/Ah0XP7Im1oIPcBbbHugTyfq5cbal/kA5vTSf1KyMJ/GDLxMmGQ3TY
09ZwiiuUwBUOvs6zh+nwvaHRM/8OgVcSKeEWJ+nwJawho+Aogd9p/0nssqHD
ey5husF+AruH78m/dJqMT11w5NZOAjc6/mj2P0v2i9tWOQ1tst/FtQSwPR3q
hzK2HlliYUXP27L7HekwvNO6ouQ3C1f3N676cokOnFU2X9v7WFiu+MrOuat0
sB2rKDevY2F8Kuv2upt0OPHRUkMmhIUdav8FVrrSQVJ4ctjuHgtL6h2I2OdG
B/6fHm1Xr7PwRZ7xAntPOkDMiuUqKxYWTtcbi7tLh5HwM5mHpVj4xJ8CW/HH
dNgYFVhx15+Jeex4nWOD6ZAW6L2i8QYTZzVa/6cdQgfeY15b2m2ZmDNu9uWe
Z3RgCKld3WTExKkmBh/uvqRDB/oTJPuTgWdCy00mksjnYSN6idsZOGQtS7O1
iow/X9lAwbMSpxqcFPBhkOdFxh8d2FGJsfH0kB6LnB8NayfWC1TisePqSU+r
6XDxEa/Z+fAKvM//ofKht3Swku/mW59ejvl6LCktn+lgoroz1gqX4tsh/X+b
psn6jafe6Y4oxBeneN7Xa6oBf0v/xqS4VGyXO6kS+EQNqofUP+rFRKIrPlZL
Zk/VQPZt0Tbq7yjkalXQLvxMDZ65BJb4Qgx6MOMaHBKuBh6/syeZ3+JQluH8
4osYNfi654lefHA8mmcuf0pOV4N7NKWuiNIUFNIq/JhdqwZ7S6J7PbpyUGTC
VQf/ejWIRNcFV2nmooSb74z3NKpBvF3rRh+3XFQkE7LQ+E4Ncjk9Kfsl8lDX
CSmHDx/VYFkhsuMf5CONfnnjvn41EM4cfZP8pBDpFnjSEr+rwfNWzQst7YXI
6P6X+QtDalC/s68nXLkImWvE5Pz4qQbs9YtL05lF6PplFdrEhBo8KHgV1Vpd
jLy23pvPm1IDo5b9wliwBN0X6Wu7OaMGfZNPtm8/UIIishMe/fmjBltWtAqP
fypB8Xd57MsW1CArehuoUEtR+qELO72W1GD3dZXz3TalqIBeo7T9nxp06m7c
uyauFFVNqc8vL6uBreZO1nJvKfofhZ+7kw==
          "]]}, Annotation[#, "Charting`Private`Tag$22067#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {{{1, 
         FormBox["1", TraditionalForm]}, {2, 
         FormBox["2", TraditionalForm]}, {3, 
         FormBox["3", TraditionalForm]}, {4, 
         FormBox["4", TraditionalForm]}, {5, 
         FormBox["5", TraditionalForm]}, {6, 
         FormBox["6", TraditionalForm]}, {7, 
         FormBox["7", TraditionalForm]}, {8, 
         FormBox["8", TraditionalForm]}, {9, 
         FormBox["9", TraditionalForm]}, {10, 
         FormBox["10", TraditionalForm]}}, {{
         NCache[Rational[-1, 20] Pi, -0.15707963267948966`], 
         FormBox[
          RowBox[{"-", 
            FractionBox["\[Pi]", "20"]}], TraditionalForm]}, {
         NCache[Rational[-1, 60] Pi, -0.05235987755982988], 
         FormBox[
          RowBox[{"-", 
            FractionBox["\[Pi]", "60"]}], TraditionalForm]}, {
         NCache[Rational[1, 60] Pi, 0.05235987755982988], 
         FormBox[
          FractionBox["\[Pi]", "60"], TraditionalForm]}, {
         NCache[Rational[1, 20] Pi, 0.15707963267948966`], 
         FormBox[
          FractionBox["\[Pi]", "20"], TraditionalForm]}}}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], 
       FormBox["\"\[Theta]\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontFamily -> "Baskerville"}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     LabelStyle -> {FontFamily -> "Baskerville"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 10}, {-0.15707958047483733`, 0.15707963267947164`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {{{1, 
         FormBox["1", TraditionalForm]}, {2, 
         FormBox["2", TraditionalForm]}, {3, 
         FormBox["3", TraditionalForm]}, {4, 
         FormBox["4", TraditionalForm]}, {5, 
         FormBox["5", TraditionalForm]}, {6, 
         FormBox["6", TraditionalForm]}, {7, 
         FormBox["7", TraditionalForm]}, {8, 
         FormBox["8", TraditionalForm]}, {9, 
         FormBox["9", TraditionalForm]}, {10, 
         FormBox["10", TraditionalForm]}}, {{
         NCache[Rational[-1, 20] Pi, -0.15707963267948966`], 
         FormBox[
          RowBox[{"-", 
            FractionBox["\[Pi]", "20"]}], TraditionalForm]}, {
         NCache[Rational[-1, 60] Pi, -0.05235987755982988], 
         FormBox[
          RowBox[{"-", 
            FractionBox["\[Pi]", "60"]}], TraditionalForm]}, {
         NCache[Rational[1, 60] Pi, 0.05235987755982988], 
         FormBox[
          FractionBox["\[Pi]", "60"], TraditionalForm]}, {
         NCache[Rational[1, 20] Pi, 0.15707963267948966`], 
         FormBox[
          FractionBox["\[Pi]", "20"], TraditionalForm]}}}}],FormBox[
    FormBox[
     TemplateBox[{"\"Numerical Solution\"", "\"Approximate Solution\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Baskerville", 
                    Opacity[1.], 
                    RGBColor[0.65, 0., 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Baskerville", 
                    Opacity[1.], 
                    RGBColor[0.65, 0., 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Baskerville", 
                    Opacity[1.], 
                    RGBColor[0.0504678, 0.526626, 0.627561], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Baskerville", 
                    Opacity[1.], 
                    RGBColor[0.0504678, 0.526626, 0.627561], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Baskerville", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Baskerville\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.65, 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.43333333333333335`, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.65, 0., 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.65, 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.65, 0., 0.], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Baskerville\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0504678, 0.526626, 0.627561], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.0336452, 0.35108400000000006`, 0.418374], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.0504678, 0.526626, 0.627561]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0504678, 0.526626, 0.627561]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.0504678, 0.526626, 0.627561], Editable -> 
                    False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Baskerville\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.70966065134398*^9, {3.7096606952299395`*^9, 3.7096607035575247`*^9}, {
   3.7096607431915245`*^9, 3.709660836444502*^9}, 3.709662174887515*^9, {
   3.709662280345008*^9, 3.709662302033949*^9}, 3.7096623592297125`*^9, 
   3.7096623962260976`*^9, 3.7096644488822546`*^9, 3.709669682888603*^9, 
   3.7096721546868286`*^9, 3.7096722250448084`*^9, 3.7096723714540052`*^9, 
   3.7096728941381736`*^9, 3.709672981414886*^9, 3.7096730425764427`*^9, 
   3.7096735135968723`*^9, 3.709674151790635*^9, 3.7097101566766095`*^9, 
   3.7098334189574795`*^9, 3.709833487404428*^9, 3.7098335466306033`*^9}]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 "When ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Theta]", "0"], ">", 
    SubscriptBox["\[Theta]", "Crit"]}], TraditionalForm]]]
}], "Subsection",
 CellChangeTimes->{{3.7096609222986975`*^9, 3.7096609226081038`*^9}, {
  3.7096610028316317`*^9, 3.70966102410524*^9}, {3.7096610954690323`*^9, 
  3.709661099875228*^9}, {3.7096613673591075`*^9, 3.7096613683464603`*^9}}],

Cell["Worthy noting that the angle increases in the beginning.", "Text",
 CellChangeTimes->{{3.709661374938843*^9, 3.709661428263383*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]0", "=", 
   FractionBox[
    RowBox[{"3", "Pi"}], "4"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", "9.81"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", "=", 
   SqrtBox[
    FractionBox[
     RowBox[{"3", " ", "g", " ", 
      RowBox[{"(", 
       RowBox[{"r", "-", "b"}], ")"}]}], 
     RowBox[{"5", " ", 
      SuperscriptBox["b", "2"]}]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"T", "''"}], "[", "t", "]"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["5", "3"], 
             SuperscriptBox["b", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["r", "2"], 
             SuperscriptBox[
              RowBox[{"T", "[", "t", "]"}], "2"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"T", "'"}], "[", "t", "]"}], "2"], 
          SuperscriptBox["r", "2"], 
          RowBox[{"T", "[", "t", "]"}]}]}], "\[Equal]", 
        RowBox[{"g", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"b", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"T", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"r", " ", 
            RowBox[{"T", "[", "t", "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"T", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{"T", "[", "0", "]"}], "\[Equal]", "\[Theta]0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"T", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
     RowBox[{"T", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "30"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"T", "[", "t", "]"}], "/.", "sol"}], ",", 
     RowBox[{"\[Theta]0", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"LineLegend", "[", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Numerical Solution\>\"", ",", "\"\<Approximate Solution\>\""}], 
      "}"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", "\"\<\[Theta]\>\""}], "}"}]}], ",", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "10", ",", "1"}], "]"}], ",", 
      RowBox[{"Range", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"-", "Pi"}], "20"], ",", 
        FractionBox["Pi", "20"], ",", 
        FractionBox["Pi", "30"]}], "]"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"AutoCollapse", "[", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.709661036871106*^9, {3.7096610781770144`*^9, 3.7096612748834147`*^9}, {
   3.709661345343321*^9, 3.7096613512252617`*^9}, {3.709662404849389*^9, 
   3.7096624089547477`*^9}, 3.7096631337470517`*^9, 3.709664455904107*^9, {
   3.7096728967199974`*^9, 3.709672897175267*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.65, 0., 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
1uVfFCHX/lLfukEW4s1+az1y2ag5ckM945wMvt9Wi0ok55wKxoLYlOUsRM2e
wcizn4F8scbe7eQcEh67t8SJr4Sgp63fMzQk4BC1vVKySwmuDg/U8xtFofJI
XHl/rxJ6nHJPbvsgipYPT11L+5Tw7dX3GVMlonCRlhU8P6IEsygjXdvHovAI
fbtgWlCZjCPg1IpwUQSeNrgxqKIMc9llJZw1osg4IOhSb6OMY2WfhTl5Ihhf
mTaRmK+M7xPBx288EEbA88SgotfKyHK29cIdYQjMj5XqKVLG/gG/rX23hCHC
u6I2/70yll+vndoSKQzFCR/zogZlSKhununjLYwF9y1vdA8og24vm/p5OXk/
VhgxmqeugtrcTwfWVAthKKy/0F5TBRdGQmxzS4XgTeux9JujAlX8vq/1RggB
v77semOggsuKVRVqT4QQVloSbL9cBVLzBbVc4oRw58TNT772KjirHhevsU8I
7d9NfQovqKCnaTI9S1wIpomVydphKljRdnr2MYYQbm1xqIi8rAJGlkLpqikG
drw/PHP3NRUc6c33/zfIQGP2rXJ6igqSLvZzqz4zUOM/xV+VrwLPqVKR6UwG
CmWelZaMqCCYWhdw35YBtferRgzGVeC6rrX/tBUDp89+4MZMqiCD4Smw3ZwB
49/dR9xoquAueck0oBh41szmirFUkVGYsHSZDgM56d5eFjqqqBHeVTXGYCB5
xTzlCidVtGwQzpB5RUehlXjQpIsqdl9t0Vv5nI62ne29c9xUsWlUI/zkUzrU
A689O++hihX/pMbEyXt16tuJrfBXhc0A43xgEh1pGwpjHkWpoifDPq7/HB1v
d90UaItWxV1BrenEQDo6Dx91Y91UxdyNqU5bT9GhGaVpdDBJFbtsQvU6fOi4
/Sm0QTOLXN+8lu1wgI47TraKsSWqUL9RVPfOjo53Xron35WpYl6Xu8LkRjq6
g4Q6xypU0blZ88jCDXTMvv30sW2dKjZXXbtYaE5HRq+yvdQ3VXw25+wxpujI
PNJx9fQfVXT0t4vn69BRdvblZNY/VQhWJDd5zaGj99r13V8EuLhezmgz0KJD
57+1C5aKcJHeqXWtcCYd9/7eqxmW4+JXqeQzCyU67p/zlnHV4+IVjcfuEqfj
5/LtgefmkjPl/CePZovRoTuycjhlARe5jXPWeImQ5zvLf2xdwsX42qRNqgwy
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
dF95/A8qo5om
          "]]}, Annotation[#, "Charting`Private`Tag$22180#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.0504678, 0.526626, 0.627561], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
8eRw4pWdC6hfoS68VUAM5j573ThfO4+En4mH3KKLQTb30rDqnznk6Jd+v2W7
GMgMG9n347NI2rLVzeuyGPDtb8l1nplAnpiKae13ajy7qXHmHAUrXTf2O2eL
w8Z3SpbHp34TW91f8z7OFQexokxLZZ9u4rRQe1Nmvjh4fjhS/p6zh8jbv+Xk
OCkOztc0JBdle4lzOaMuV+uo5wkW1qJ6fURx0NnoG33iUGOSdqvq5hBxfbfJ
iL+EBKRo3NRfPjxOJHV5vX8lLQFXfNb/d+bpOPHFPe36Z7oEfHKKqwpoGicU
MzhYuNZJwNAO52xR0wmiWapUPFBDAtBARhD//kliwxRFwoYSEHaHaV2lMk38
eSkf+txLAhIPb3rlmTNH/Lvze57lFqXlhEY6R+eICdt4Gwc/CTDnTk5u+m+e
oDHkVTUeSEA966anPjHzhFSEXElJhAT8WfcI++S1QJjeY4z9yaLe1/CdmVNa
Io7a/TQ3/CABEglmOw6dWCKs9Z4XZHyUANdPM9c0gpYIx1X6PXdSArw69rn7
TywR/u50Ome9BLwh4x855iwThfayxmqDEvDxtsOBywqrRKn+93fB/yTA+Oiw
X7/JKlGtECs+PSoBRGjTpg6PVaLtp0zPpxkqvjOf1qrXrxITR2VuHGSVBBUh
LkxXi0bOb+n6+X6NJIii9OrfRjSSJhKjL8EtCaqVVyJ1bGgkb4O04G9BSbDR
+jUvf5dGKu+XTnFlSMLz1wmKiXU0Ul2xk7eNKQlcZmMnhH7SyK2s0Vd2KErC
niUzRe0xGqlHSiHW9ZLwrZv7WJYgRlprSbWGaUuCgkX3452HMDJUWZL1o7kk
zL25xOJfgpFW1oqveiwlYZtb2lv/eoxcG7rZkM9KEjrSpzL0OzAye/VA8Blb
SShcNJtYHsPIllZfGb5LkjCctyR0WBonY3iCCS1XSei7XE7uXoeTZ3Vjbc+4
SUJyeKbP8AacnHqTm5LnKQlFCRsSPXfjpPDdf5pn7kvC6u3VVmeKhzry59sC
H0rCfrVdJ3UdcTJhjN0zL0gSHnWcm2h0/T8vyhfzhkmCiFF3x9rbOLnwZMNZ
rUhJSF+1nu+/R/Fs5Y41Z6IlocFG6tO5IIqXN1scyIuXhKWlK1/Do3BS6vyZ
se4kSaBryC7ve4GT3XGXn/KmUP4kSV/OTsZJV66H32wzJGGmhX+wiOI/bYj0
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
QnwO0j6W8mBQEf8sdWSasG7bvVXguDzMVpsxqpVniJnz046bTlLzHxvXlIiZ
IRQfW7VdOyMP84vT3755zxJ3vqlkrF6Sh4jAAufdmvPEbufKE4IB8nDGqUDX
4tgSsdA+uLfsgTxcKNJJMX20RGTr8WxyfyQPMiy+9Y1FS4Si5CGO74/l4f77
U2x2zGWCp6wjOyVcHm5VflPM61km2iVHeCGJWh+tnjplskqE3BGYn0iWB78j
6XXnPFYJo9FNvcmv5KEcex3Yn7hKFJW553OnyYNTfeE289lVIukSZt/2Th70
73hj/UY08nK5COlMyMOPhLZ3h37SSJWN29Lki+XhTc2WDJ8xGtkTdSy8pUQe
dsos5tlhGGlxOc5Ju0IeVDS/dVoyMVJHWlmSvU4ebv7hr2o+hZEzdw1ZP9bL
w46QWwn5lzAyc8xp1LFBHtr6Fi8e9cZIZsW78sZmebhUwd/7LgojOVx2uMZ2
UPXOaGvo+YKRJZ0nT5p2yUNT/JYPV7ow0nPvrf0sP+TBjrOLyB3AyBHpcvr5
3/Lw/lfv5RM0il/9+zlleuShWfL3+3xunDw9zjld3ysP/KwnzOoofmupMKnR
HJAHbeeJPm41nAzScPnQP0jFn/bVd9tWnNwX8zQ+6q88eIWUlosCxfsu7e60
UXkIPXgmatCM4kEZ27W101Q+FhbaQxRvam9W3WA7S/lxWy19nRc1v8HUtrk5
eRAsD30r44eTHO7+RmuX5OFg8yzXzmCcTAg8aJ6/TOW//8TGc+EUTyZJ2Jiu
yoPlb+Y9wxiKtxtTXb1wJtzRf+665xVOcg1c8RJiZcLBw1k/jqXjZNKKjn8K
GxPy4vpUVN7h5C5R9uBda5hQ6HJBPycHJ9tVvzxr4WBCrbaT7CLF5666kYkX
uJiwUC2VuEjxO8+x029oPEwID06u/FCMky8vqeSG8zJhtU7nplo5ToL/JKnG
z4TSWsFcq8842RFTWF0iwAQB3qPn99Xg5NX3d1sshZhg6QIB/+pwkq/a5MeI
MBOOnGPhNW6g/P8lPnBHlAk717T9tWvCSd3ZX+NS4kww2zUlq92Ck128qYtv
JZjw+ndYzOevOHlt7RW2fVJM2FQ7d1qwDScFd+jwf5dmgsTkifMi7TiZfohN
8oosEw650zIbKb3XoZ7JyWCC3/v/NlL3DfKXd4TaczkmyO+V/XuD0jfCTm3d
wmRCk7jCz3OUFkn/D2oUmCBtfZeHl9IZJRMGp9cxwSgq+OpFar793woOzyoy
IT30qeR9av3u0TsnA5WZsHT454pVK056sZvYK6gwQU6wUvkfFb+YrLjLR1Um
rFV6EbOlGSffbv514+B6JvisFp/a3oiThoav7/zZQPm7cNdr9v+/VznlGuS5
kQkPjuybu1SLk97uOyIFNzHBgP3M94QqnJQIYk14tZlJ7bdtW4MrcDIrqS5t
5xYmyGqs49MqxUnjgvCc5q1McMcCXaIInOxrtCHOazFh863Gi7kFOCm1Ot4U
toMJIxHejvLvcTJbtKBLdScTuMoyHzln4KSJ2p2+4l1MkDxo4n/tNU76HRNb
GN7NhKtHzh3IjcNJ+uWfLHf0mGChl6I7FomTef4pvFL6lF/9/Ta9ITj57722
/N79TDiW0Oe0chcn/atZVLsMmFDZefbRWh+clPtdq+lqxITdJ603s1/HySN8
NvvjTJhQQVf2XXLAyZG1ymaapkywYSaeFjyNk/d3jJ+oPsQEVqWRbd2WOFno
4Hdp5ggTtvIx9PL24eTa0lfhJieYEPh3+fR2Jk7Wq80ldVkxIVH37/OzEjh5
PXz/+wvWTOjwM7h5kA8na84PfvE/zYT2zLyXZ+cx0lVAlZOwZ4KxZHd7cC1G
ytzwFD9wngn5I483fiIxsrynZl3nBapfJvxtUrMxUiLXSXf2IhNuMLCxymiM
JE5meKpfpeJL+V4mYo+RDpUrAZ/cqP77a5tvfAwjhTQORhq5M8HBaNPsXiOM
PMc6lm1/gwlOCuL8fhswkidNY+T5LSZ4xwbYMiZo5PG57FMCgUzwxYrfSjjT
SFZbtktxQdR+imc/GmRFIzNqzG+qBVP7PaSsssqQRmLPZ57tf0qt32nK/lSR
RqboazXfesaEHPdDyv8+rBLTIQX648lM6A+P/n7FbYUIXl+i0lRE7Ze82Dse
CYtEitYJTl+SCXaXlYUqLi4ShN5Uv0YJ1Z/DUiXPtRaJkWOKyU/KmfB2kx3b
Su0CYeT/gHGolglF2y73eY/NE+w/zUQavjFBY/XkWWuFOcIzuGe5booJxOmM
CFM0RZybZG2sUlGANU/vdqeK9hO27ybkAh4rgIFHS671ZDty8j28ZPhEASxs
Op8pb+xAboez23ieKsCDb7Sbnk6d6P60W1BwuAL4jt1pTu75jjK2zy9GxCrA
wSPX+PLsfqP54tXWl2kK8Mz4hMnqzj4U3MQTWFapAPe/rbt7NnYURSVedPCv
UoAX0jUffcXHUOLVer39NQpwXcdNiOvUGPogFrxQU68A4ac36WmNjaGu48IO
zV8VAN0Q+DvCM4GUeiT1unsUQKfJBKVvnUIbs2/Qk/4ogNO6duvDN6aQ9t3O
ebt+BYil97rEfppCxkqxbweHFCDSR/WNqN40cnWUo4+PKwC87nNxM5hBXjq3
57MmFWDr5H1p4Qcz6C5vd8vVaQXInnx53LB6BkVmJj6cm1OAyj5WntsGsyjh
Fqt9/oIC9JRs1/G+P4vSDtnpei0pgILjj5sClbMom1khu2tFAeq+x2dvZZtD
RZOK86urCpC/hl4xqjuH/gejtVux
          "]]}, Annotation[#, "Charting`Private`Tag$22180#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {{{1, 
         FormBox["1", TraditionalForm]}, {2, 
         FormBox["2", TraditionalForm]}, {3, 
         FormBox["3", TraditionalForm]}, {4, 
         FormBox["4", TraditionalForm]}, {5, 
         FormBox["5", TraditionalForm]}, {6, 
         FormBox["6", TraditionalForm]}, {7, 
         FormBox["7", TraditionalForm]}, {8, 
         FormBox["8", TraditionalForm]}, {9, 
         FormBox["9", TraditionalForm]}, {10, 
         FormBox["10", TraditionalForm]}}, {{
         NCache[Rational[-1, 20] Pi, -0.15707963267948966`], 
         FormBox[
          RowBox[{"-", 
            FractionBox["\[Pi]", "20"]}], TraditionalForm]}, {
         NCache[Rational[-1, 60] Pi, -0.05235987755982988], 
         FormBox[
          RowBox[{"-", 
            FractionBox["\[Pi]", "60"]}], TraditionalForm]}, {
         NCache[Rational[1, 60] Pi, 0.05235987755982988], 
         FormBox[
          FractionBox["\[Pi]", "60"], TraditionalForm]}, {
         NCache[Rational[1, 20] Pi, 0.15707963267948966`], 
         FormBox[
          FractionBox["\[Pi]", "20"], TraditionalForm]}}}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], 
       FormBox["\"\[Theta]\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontFamily -> "Baskerville"}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     LabelStyle -> {FontFamily -> "Baskerville"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 10}, {-2.35619370712256, 6.139500116706117}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {{{1, 
         FormBox["1", TraditionalForm]}, {2, 
         FormBox["2", TraditionalForm]}, {3, 
         FormBox["3", TraditionalForm]}, {4, 
         FormBox["4", TraditionalForm]}, {5, 
         FormBox["5", TraditionalForm]}, {6, 
         FormBox["6", TraditionalForm]}, {7, 
         FormBox["7", TraditionalForm]}, {8, 
         FormBox["8", TraditionalForm]}, {9, 
         FormBox["9", TraditionalForm]}, {10, 
         FormBox["10", TraditionalForm]}}, {{
         NCache[Rational[-1, 20] Pi, -0.15707963267948966`], 
         FormBox[
          RowBox[{"-", 
            FractionBox["\[Pi]", "20"]}], TraditionalForm]}, {
         NCache[Rational[-1, 60] Pi, -0.05235987755982988], 
         FormBox[
          RowBox[{"-", 
            FractionBox["\[Pi]", "60"]}], TraditionalForm]}, {
         NCache[Rational[1, 60] Pi, 0.05235987755982988], 
         FormBox[
          FractionBox["\[Pi]", "60"], TraditionalForm]}, {
         NCache[Rational[1, 20] Pi, 0.15707963267948966`], 
         FormBox[
          FractionBox["\[Pi]", "20"], TraditionalForm]}}}}],FormBox[
    FormBox[
     TemplateBox[{"\"Numerical Solution\"", "\"Approximate Solution\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Baskerville", 
                    Opacity[1.], 
                    RGBColor[0.65, 0., 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Baskerville", 
                    Opacity[1.], 
                    RGBColor[0.65, 0., 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Baskerville", 
                    Opacity[1.], 
                    RGBColor[0.0504678, 0.526626, 0.627561], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Baskerville", 
                    Opacity[1.], 
                    RGBColor[0.0504678, 0.526626, 0.627561], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Baskerville", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Baskerville\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.65, 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.43333333333333335`, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.65, 0., 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.65, 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.65, 0., 0.], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Baskerville\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0504678, 0.526626, 0.627561], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.0336452, 0.35108400000000006`, 0.418374], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.0504678, 0.526626, 0.627561]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0504678, 0.526626, 0.627561]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.0504678, 0.526626, 0.627561], Editable -> 
                    False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Baskerville\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.709661351722644*^9, 3.709662175351237*^9, 3.7096622482223744`*^9, 
   3.7096624098505573`*^9, {3.7096644516747665`*^9, 3.7096644563500137`*^9}, 
   3.7096696829938927`*^9, 3.7096721548582544`*^9, 3.709672225174152*^9, 
   3.709672371753827*^9, 3.7096728977246666`*^9, 3.7096729818841567`*^9, 
   3.7096730432803154`*^9, 3.7096735141062236`*^9, 3.7096741520463204`*^9, 
   3.7097101571361732`*^9, 3.7098334193511868`*^9, 3.709833487868005*^9, 
   3.709833547211913*^9}]
}, {2}]],

Cell["Periodicity probably due to geometry of the problem.", "Item",
 CellChangeTimes->{{3.709661446076084*^9, 3.7096615030748405`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Some Animations", "Subsection",
 CellChangeTimes->{{3.7096615229655685`*^9, 3.7096615330264664`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", "9.81"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", "=", 
   SqrtBox[
    FractionBox[
     RowBox[{"3", " ", "g", " ", 
      RowBox[{"(", 
       RowBox[{"r", "-", "b"}], ")"}]}], 
     RowBox[{"5", " ", 
      SuperscriptBox["b", "2"]}]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", "1.7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol1", "=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"T", "''"}], "[", "t", "]"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              FractionBox["5", "3"], 
              SuperscriptBox["b", "2"]}], "+", 
             RowBox[{
              SuperscriptBox["r", "2"], 
              SuperscriptBox[
               RowBox[{"T", "[", "t", "]"}], "2"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{
             RowBox[{"T", "'"}], "[", "t", "]"}], "2"], 
           SuperscriptBox["r", "2"], 
           RowBox[{"T", "[", "t", "]"}]}]}], "\[Equal]", 
         RowBox[{"g", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"b", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"T", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{"r", " ", 
             RowBox[{"T", "[", "t", "]"}], 
             RowBox[{"Cos", "[", 
              RowBox[{"T", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{"T", "[", "0", "]"}], "\[Equal]", 
         FractionBox["Pi", "20"]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"T", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], 
      ",", "T", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "30"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol2", "=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"T", "''"}], "[", "t", "]"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              FractionBox["5", "3"], 
              SuperscriptBox["b", "2"]}], "+", 
             RowBox[{
              SuperscriptBox["r", "2"], 
              SuperscriptBox[
               RowBox[{"T", "[", "t", "]"}], "2"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{
             RowBox[{"T", "'"}], "[", "t", "]"}], "2"], 
           SuperscriptBox["r", "2"], 
           RowBox[{"T", "[", "t", "]"}]}]}], "\[Equal]", 
         RowBox[{"g", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"b", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"T", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{"r", " ", 
             RowBox[{"T", "[", "t", "]"}], 
             RowBox[{"Cos", "[", 
              RowBox[{"T", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{"T", "[", "0", "]"}], "\[Equal]", 
         FractionBox["Pi", "4"]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"T", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], 
      ",", "T", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "30"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"T1", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"T", "[", "t", "]"}], "/.", "sol1"}], ")"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"T2", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"T", "[", "t", "]"}], "/.", "sol2"}], ")"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Animate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Graphics", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"drawSquare", "[", 
            RowBox[{
             RowBox[{"T1", "[", "t", "]"}], ",", "r", ",", "b"}], "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{"Section", " ", "of", " ", "Cube"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"Circle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "r"}], "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{"Secton", " ", "of", " ", "cylinder"}], "*)"}], 
           "\[IndentingNewLine]", "Dashed", ",", "\[IndentingNewLine]", 
           RowBox[{"InfiniteLine", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Vertical", " ", "y"}], "-", "axis"}], "*)"}], 
           "\[IndentingNewLine]", "Red", ",", "\[IndentingNewLine]", 
           RowBox[{"InfiniteLine", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"tcrit", "[", 
                  RowBox[{"r", ",", "b"}], "]"}], "]"}], ",", 
                RowBox[{"Cos", "[", 
                 RowBox[{"tcrit", "[", 
                  RowBox[{"r", ",", "b"}], "]"}], "]"}]}], "}"}]}], "}"}], 
            "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{
            "Line", " ", "indicating", " ", "positive", " ", "critical", " ", 
             "angle"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"InfiniteLine", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"tcrit", "[", 
                   RowBox[{"r", ",", "b"}], "]"}], "]"}]}], ",", 
                RowBox[{"Cos", "[", 
                 RowBox[{"tcrit", "[", 
                  RowBox[{"r", ",", "b"}], "]"}], "]"}]}], "}"}]}], "}"}], 
            "]"}]}], 
          RowBox[{"(*", 
           RowBox[{
           "Line", " ", "indicating", " ", "negative", " ", "critical", " ", 
            "angle"}], "*)"}], "\[IndentingNewLine]", "}"}], "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1.1"}], 
              RowBox[{"(", 
               RowBox[{"r", "+", 
                RowBox[{"2", "b"}]}], ")"}]}], ",", 
             RowBox[{"1.1", 
              RowBox[{"(", 
               RowBox[{"r", "+", 
                RowBox[{"2", "b"}]}], ")"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1.1"}], "r"}], ",", 
             RowBox[{"1.1", 
              RowBox[{"(", 
               RowBox[{"r", "+", 
                RowBox[{"2", "b"}]}], ")"}]}]}], "}"}]}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", 
         "\"\<Numerical Result with \!\(\*SubscriptBox[\(\[Theta]\), \
\(0\)]\)<\!\(\*SubscriptBox[\(\[Theta]\), \(Crit\)]\)\>\""}]}], "]"}], 
      "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Graphics", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"drawSquare", "[", 
            RowBox[{
             RowBox[{"T2", "[", "t", "]"}], ",", "r", ",", "b"}], "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{"Section", " ", "of", " ", "Cube"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"Circle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "r"}], "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{"Secton", " ", "of", " ", "cylinder"}], "*)"}], 
           "\[IndentingNewLine]", "Dashed", ",", "\[IndentingNewLine]", 
           RowBox[{"InfiniteLine", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Vertical", " ", "y"}], "-", "axis"}], "*)"}], 
           "\[IndentingNewLine]", "Red", ",", "\[IndentingNewLine]", 
           RowBox[{"InfiniteLine", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"tcrit", "[", 
                  RowBox[{"r", ",", "b"}], "]"}], "]"}], ",", 
                RowBox[{"Cos", "[", 
                 RowBox[{"tcrit", "[", 
                  RowBox[{"r", ",", "b"}], "]"}], "]"}]}], "}"}]}], "}"}], 
            "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{
            "Line", " ", "indicating", " ", "positive", " ", "critical", " ", 
             "angle"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"InfiniteLine", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"tcrit", "[", 
                   RowBox[{"r", ",", "b"}], "]"}], "]"}]}], ",", 
                RowBox[{"Cos", "[", 
                 RowBox[{"tcrit", "[", 
                  RowBox[{"r", ",", "b"}], "]"}], "]"}]}], "}"}]}], "}"}], 
            "]"}]}], 
          RowBox[{"(*", 
           RowBox[{
           "Line", " ", "indicating", " ", "negative", " ", "critical", " ", 
            "angle"}], "*)"}], "\[IndentingNewLine]", "}"}], "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1.1"}], 
              RowBox[{"(", 
               RowBox[{"r", "+", 
                RowBox[{"2", "b"}]}], ")"}]}], ",", 
             RowBox[{"1.1", 
              RowBox[{"(", 
               RowBox[{"r", "+", 
                RowBox[{"2", "b"}]}], ")"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1.1"}], "r"}], ",", 
             RowBox[{"1.1", 
              RowBox[{"(", 
               RowBox[{"r", "+", 
                RowBox[{"2", "b"}]}], ")"}]}]}], "}"}]}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", 
         "\"\<Numerical Result with \!\(\*SubscriptBox[\(\[Theta]\), \
\(0\)]\)>\!\(\*SubscriptBox[\(\[Theta]\), \(Crit\)]\)\>\""}]}], "]"}], 
      "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Graphics", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"drawSquare", "[", 
            RowBox[{
             RowBox[{
              FractionBox["Pi", "20"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Omega]", " ", "t"}], "]"}]}], ",", "r", ",", "b"}], 
            "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{"Section", " ", "of", " ", "Cube"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"Circle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "r"}], "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{"Secton", " ", "of", " ", "cylinder"}], "*)"}], 
           "\[IndentingNewLine]", "Dashed", ",", "\[IndentingNewLine]", 
           RowBox[{"InfiniteLine", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Vertical", " ", "y"}], "-", "axis"}], "*)"}], 
           "\[IndentingNewLine]", "Red", ",", "\[IndentingNewLine]", 
           RowBox[{"InfiniteLine", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"tcrit", "[", 
                  RowBox[{"r", ",", "b"}], "]"}], "]"}], ",", 
                RowBox[{"Cos", "[", 
                 RowBox[{"tcrit", "[", 
                  RowBox[{"r", ",", "b"}], "]"}], "]"}]}], "}"}]}], "}"}], 
            "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{
            "Line", " ", "indicating", " ", "positive", " ", "critical", " ", 
             "angle"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"InfiniteLine", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"tcrit", "[", 
                   RowBox[{"r", ",", "b"}], "]"}], "]"}]}], ",", 
                RowBox[{"Cos", "[", 
                 RowBox[{"tcrit", "[", 
                  RowBox[{"r", ",", "b"}], "]"}], "]"}]}], "}"}]}], "}"}], 
            "]"}]}], 
          RowBox[{"(*", 
           RowBox[{
           "Line", " ", "indicating", " ", "negative", " ", "critical", " ", 
            "angle"}], "*)"}], "\[IndentingNewLine]", "}"}], "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1.1"}], 
              RowBox[{"(", 
               RowBox[{"r", "+", 
                RowBox[{"2", "b"}]}], ")"}]}], ",", 
             RowBox[{"1.1", 
              RowBox[{"(", 
               RowBox[{"r", "+", 
                RowBox[{"2", "b"}]}], ")"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1.1"}], "r"}], ",", 
             RowBox[{"1.1", 
              RowBox[{"(", 
               RowBox[{"r", "+", 
                RowBox[{"2", "b"}]}], ")"}]}]}], "}"}]}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", 
         "\"\<Approximate Result with \!\(\*SubscriptBox[\(\[Theta]\), \(0\)]\
\)<\!\(\*SubscriptBox[\(\[Theta]\), \(Crit\)]\)\>\""}]}], "]"}], 
      "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Graphics", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"drawSquare", "[", 
            RowBox[{
             RowBox[{
              FractionBox["Pi", "4"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Omega]", " ", "t"}], "]"}]}], ",", "r", ",", "b"}], 
            "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{"Section", " ", "of", " ", "Cube"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"Circle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "r"}], "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{"Secton", " ", "of", " ", "cylinder"}], "*)"}], 
           "\[IndentingNewLine]", "Dashed", ",", "\[IndentingNewLine]", 
           RowBox[{"InfiniteLine", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Vertical", " ", "y"}], "-", "axis"}], "*)"}], 
           "\[IndentingNewLine]", "Red", ",", "\[IndentingNewLine]", 
           RowBox[{"InfiniteLine", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"tcrit", "[", 
                  RowBox[{"r", ",", "b"}], "]"}], "]"}], ",", 
                RowBox[{"Cos", "[", 
                 RowBox[{"tcrit", "[", 
                  RowBox[{"r", ",", "b"}], "]"}], "]"}]}], "}"}]}], "}"}], 
            "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{
            "Line", " ", "indicating", " ", "positive", " ", "critical", " ", 
             "angle"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"InfiniteLine", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"tcrit", "[", 
                   RowBox[{"r", ",", "b"}], "]"}], "]"}]}], ",", 
                RowBox[{"Cos", "[", 
                 RowBox[{"tcrit", "[", 
                  RowBox[{"r", ",", "b"}], "]"}], "]"}]}], "}"}]}], "}"}], 
            "]"}]}], 
          RowBox[{"(*", 
           RowBox[{
           "Line", " ", "indicating", " ", "negative", " ", "critical", " ", 
            "angle"}], "*)"}], "\[IndentingNewLine]", "}"}], "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1.1"}], 
              RowBox[{"(", 
               RowBox[{"r", "+", 
                RowBox[{"2", "b"}]}], ")"}]}], ",", 
             RowBox[{"1.1", 
              RowBox[{"(", 
               RowBox[{"r", "+", 
                RowBox[{"2", "b"}]}], ")"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1.1"}], "r"}], ",", 
             RowBox[{"1.1", 
              RowBox[{"(", 
               RowBox[{"r", "+", 
                RowBox[{"2", "b"}]}], ")"}]}]}], "}"}]}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", 
         "\"\<Approximate Result with \!\(\*SubscriptBox[\(\[Theta]\), \(0\)]\
\)>\!\(\*SubscriptBox[\(\[Theta]\), \(Crit\)]\)\>\""}]}], "]"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], "//", "Row"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\"\<time\>\""}], "}"}], ",", "0", ",", 
     "10"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"AutoCollapse", "[", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7096615535325136`*^9, 3.709661663036433*^9}, {
  3.709661739046689*^9, 3.7096617839925113`*^9}, {3.709661874334725*^9, 
  3.709662009745495*^9}, {3.709662072931957*^9, 3.709662123802049*^9}, {
  3.709662158065879*^9, 3.70966220600005*^9}, {3.709662414760742*^9, 
  3.709662547579095*^9}, {3.7096627068617506`*^9, 3.709663438108946*^9}, {
  3.7096634826871133`*^9, 3.7096635791273403`*^9}, {3.709669724120956*^9, 
  3.7096697318415003`*^9}, {3.7096729034860153`*^9, 3.709672909031725*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 2.441042900085449, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`t$$], 0, "time"}, 0, 10}}, Typeset`size$$ = {
    911.5, {528., 166.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$22305$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$22305$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Row[{
         Show[
          Graphics[{
            $CellContext`drawSquare[
             $CellContext`T1[$CellContext`t$$], $CellContext`r, \
$CellContext`b], 
            Circle[{0, 0}, $CellContext`r], Dashed, 
            InfiniteLine[{{0, 0}, {0, 1}}], Red, 
            InfiniteLine[{{0, 0}, {
               Sin[
                $CellContext`tcrit[$CellContext`r, $CellContext`b]], 
               Cos[
                $CellContext`tcrit[$CellContext`r, $CellContext`b]]}}], 
            InfiniteLine[{{0, 0}, {-Sin[
                 $CellContext`tcrit[$CellContext`r, $CellContext`b]], 
               Cos[
                $CellContext`tcrit[$CellContext`r, $CellContext`b]]}}]}], 
          PlotRange -> {{(-1.1) ($CellContext`r + 2 $CellContext`b), 
             1.1 ($CellContext`r + 2 $CellContext`b)}, {(-1.1) $CellContext`r,
              1.1 ($CellContext`r + 2 $CellContext`b)}}, ImageSize -> 450, 
          PlotLabel -> 
          "Numerical Result with \!\(\*SubscriptBox[\(\[Theta]\), \(0\)]\)<\!\
\(\*SubscriptBox[\(\[Theta]\), \(Crit\)]\)"], 
         Show[
          Graphics[{
            $CellContext`drawSquare[
             $CellContext`T2[$CellContext`t$$], $CellContext`r, \
$CellContext`b], 
            Circle[{0, 0}, $CellContext`r], Dashed, 
            InfiniteLine[{{0, 0}, {0, 1}}], Red, 
            InfiniteLine[{{0, 0}, {
               Sin[
                $CellContext`tcrit[$CellContext`r, $CellContext`b]], 
               Cos[
                $CellContext`tcrit[$CellContext`r, $CellContext`b]]}}], 
            InfiniteLine[{{0, 0}, {-Sin[
                 $CellContext`tcrit[$CellContext`r, $CellContext`b]], 
               Cos[
                $CellContext`tcrit[$CellContext`r, $CellContext`b]]}}]}], 
          PlotRange -> {{(-1.1) ($CellContext`r + 2 $CellContext`b), 
             1.1 ($CellContext`r + 2 $CellContext`b)}, {(-1.1) $CellContext`r,
              1.1 ($CellContext`r + 2 $CellContext`b)}}, ImageSize -> 450, 
          PlotLabel -> 
          "Numerical Result with \!\(\*SubscriptBox[\(\[Theta]\), \(0\)]\)>\!\
\(\*SubscriptBox[\(\[Theta]\), \(Crit\)]\)"], 
         Show[
          Graphics[{
            $CellContext`drawSquare[(Pi/20) 
             Cos[$CellContext`\[Omega] $CellContext`t$$], $CellContext`r, \
$CellContext`b], 
            Circle[{0, 0}, $CellContext`r], Dashed, 
            InfiniteLine[{{0, 0}, {0, 1}}], Red, 
            InfiniteLine[{{0, 0}, {
               Sin[
                $CellContext`tcrit[$CellContext`r, $CellContext`b]], 
               Cos[
                $CellContext`tcrit[$CellContext`r, $CellContext`b]]}}], 
            InfiniteLine[{{0, 0}, {-Sin[
                 $CellContext`tcrit[$CellContext`r, $CellContext`b]], 
               Cos[
                $CellContext`tcrit[$CellContext`r, $CellContext`b]]}}]}], 
          PlotRange -> {{(-1.1) ($CellContext`r + 2 $CellContext`b), 
             1.1 ($CellContext`r + 2 $CellContext`b)}, {(-1.1) $CellContext`r,
              1.1 ($CellContext`r + 2 $CellContext`b)}}, ImageSize -> 450, 
          PlotLabel -> 
          "Approximate Result with \!\(\*SubscriptBox[\(\[Theta]\), \(0\)]\)<\
\!\(\*SubscriptBox[\(\[Theta]\), \(Crit\)]\)"], 
         Show[
          Graphics[{
            $CellContext`drawSquare[(Pi/4) 
             Cos[$CellContext`\[Omega] $CellContext`t$$], $CellContext`r, \
$CellContext`b], 
            Circle[{0, 0}, $CellContext`r], Dashed, 
            InfiniteLine[{{0, 0}, {0, 1}}], Red, 
            InfiniteLine[{{0, 0}, {
               Sin[
                $CellContext`tcrit[$CellContext`r, $CellContext`b]], 
               Cos[
                $CellContext`tcrit[$CellContext`r, $CellContext`b]]}}], 
            InfiniteLine[{{0, 0}, {-Sin[
                 $CellContext`tcrit[$CellContext`r, $CellContext`b]], 
               Cos[
                $CellContext`tcrit[$CellContext`r, $CellContext`b]]}}]}], 
          PlotRange -> {{(-1.1) ($CellContext`r + 2 $CellContext`b), 
             1.1 ($CellContext`r + 2 $CellContext`b)}, {(-1.1) $CellContext`r,
              1.1 ($CellContext`r + 2 $CellContext`b)}}, ImageSize -> 450, 
          PlotLabel -> 
          "Approximate Result with \!\(\*SubscriptBox[\(\[Theta]\), \(0\)]\)>\
\!\(\*SubscriptBox[\(\[Theta]\), \(Crit\)]\)"]}], 
      "Specifications" :> {{{$CellContext`t$$, 0, "time"}, 0, 10, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{967., {385., 394.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7096635624585037`*^9, 3.7096635802952604`*^9}, 
   3.7096644586485014`*^9, 3.7096696830646524`*^9, 3.7096697330209484`*^9, 
   3.709672154998663*^9, 3.7096722252333083`*^9, 3.709672371913223*^9, 
   3.709672910140669*^9, 3.709672982509791*^9, 3.709673044114532*^9, {
   3.709673489879854*^9, 3.7096735144972706`*^9}, 3.709674152315372*^9, 
   3.7097101574512568`*^9, 3.7098334198568645`*^9, 3.7098334883544936`*^9, 
   3.7098335476224856`*^9}]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Conclusions", "Section",
 CellChangeTimes->{{3.7098329236611433`*^9, 3.7098329257773614`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Many useful results can be drawn from the analysis of the stability of the \
cube, such as the critical angles for a given system, and the limits of the \
size of the cube for zero or total stability with respect to the cylinder.\
\>", "Item",
 CellChangeTimes->{{3.709832974230088*^9, 3.7098329763559933`*^9}}],

Cell["\<\
As there is no simple analytical solution to be found for the differential \
equation describing the motion of the cube, the only way to foresee its \
behavior is through numerical calculations.\
\>", "Item",
 CellChangeTimes->{{3.709832974230088*^9, 3.709832989574603*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{{3.7098330048246455`*^9, 3.709833006213747*^9}}],

Cell[CellGroupData[{

Cell["\<\
A. Belendez, C. Pascual, D.I. Mendez, T. Belendez, and C. Neipp. Exact \
Solution for the Nonlinear Pendulum. Revista Brasileira de Ensino de Fisica, \
v. 29, n. 4, p. 645-648, (2007)\
\>", "Item",
 CellChangeTimes->{{3.7098330225803776`*^9, 3.709833026528653*^9}}],

Cell["\<\
David Morin. Chapter 6: The Lagrangian Method. Draft Version.\
\>", "Item",
 CellChangeTimes->{{3.7098330225803776`*^9, 3.709833033342658*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[TextData[StyleBox["Thank You!", "Section"]], "Title",
 CellChangeTimes->{{3.7098330639192343`*^9, 3.70983306994413*^9}}],

Cell["\<\





Mathematica Code: \
\[OpenCurlyDoubleQuote]https://github.com/andrerg01/mathematica-codes\
\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.7098330777432156`*^9, 3.709833091010886*^9}, {
  3.7098338157109795`*^9, 3.709833816603047*^9}}]
}, Open  ]]
},
NotebookEventActions:>{{"s"} :> SetOptions[
    EvaluationNotebook[], ScreenStyleEnvironment -> "SlideShow"], {"w"} :> 
  SetOptions[
    EvaluationNotebook[], ScreenStyleEnvironment -> "Working"]},
WindowSize->{1536, 821},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
DockedCells->None,
TaggingRules->{
 "SlideShow" -> True, 
  "SlideshowSettings" -> {
   "Toolbar" -> True, "WindowElements" -> {"StatusArea"}}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->FrontEnd`FileName[{"SlideShow"}, "Garnet.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[580, 22, 4314, 94, 77, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[5531, 140, 64, 1, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[57176, 1023, 64, 1, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[106807, 1873, 64, 1, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[127217, 2376, 64, 1, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[130613, 2485, 64, 1, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[137867, 2691, 64, 1, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[233564, 4451, 64, 1, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[240651, 4632, 64, 1, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[242575, 4690, 64, 1, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[245067, 4773, 64, 1, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[248683, 4906, 64, 1, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[252415, 5030, 64, 1, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[255246, 5133, 64, 1, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[317218, 6279, 64, 1, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[367419, 7230, 64, 1, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[394622, 7913, 64, 1, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[396107, 7963, 64, 1, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 397296, 8003}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 4314, 94, 77, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[4897, 118, 283, 7, 471, "Title"],
Cell[5183, 127, 106, 1, 114, "Subtitle"],
Cell[5292, 130, 202, 5, 105, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5531, 140, 64, 1, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[5620, 145, 113, 1, 121, "Section"],
Cell[5736, 148, 288, 6, 130, "Text"],
Cell[6027, 156, 50758, 850, 465, "Text"],
Cell[56788, 1008, 339, 9, 52, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[57176, 1023, 64, 1, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[57265, 1028, 103, 1, 92, "Subsection"],
Cell[57371, 1031, 219, 4, 54, "Text"],
Cell[57593, 1037, 48253, 799, 534, "Text"],
Cell[CellGroupData[{
Cell[105871, 1840, 436, 12, 51, "Item"],
Cell[106310, 1854, 436, 12, 51, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[106807, 1873, 64, 1, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[106896, 1878, 163, 2, 121, "Section"],
Cell[107062, 1882, 226, 5, 54, "Text"],
Cell[CellGroupData[{
Cell[107313, 1891, 14381, 368, 1514, "Input"],
Cell[121697, 2261, 5462, 108, 616, "Output"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[127217, 2376, 64, 1, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[127306, 2381, 111, 1, 92, "Subsection"],
Cell[127420, 2384, 518, 12, 92, "Text"],
Cell[127941, 2398, 2623, 81, 589, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[130613, 2485, 64, 1, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[130702, 2490, 115, 1, 92, "Subsection"],
Cell[130820, 2493, 809, 23, 135, "Text"],
Cell[CellGroupData[{
Cell[131654, 2520, 2921, 77, 412, "Input"],
Cell[134578, 2599, 2229, 51, 336, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[136841, 2655, 246, 5, 51, "Item"],
Cell[137090, 2662, 716, 22, 55, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[137867, 2691, 64, 1, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[137956, 2696, 233, 7, 98, "Subsection"],
Cell[138192, 2705, 946, 32, 102, "Text"],
Cell[CellGroupData[{
Cell[139163, 2741, 2691, 70, 249, "Input"],
Cell[141857, 2813, 91649, 1631, 413, "Output"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[233564, 4451, 64, 1, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[233653, 4456, 463, 10, 98, "Subsection"],
Cell[CellGroupData[{
Cell[234141, 4470, 3038, 79, 482, "Input"],
Cell[237182, 4551, 2983, 62, 550, "Output"]
}, {2}]],
Cell[240177, 4616, 425, 10, 93, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[240651, 4632, 64, 1, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[240740, 4637, 105, 1, 92, "Subsection"],
Cell[240848, 4640, 1678, 44, 509, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[242575, 4690, 64, 1, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[242664, 4695, 114, 1, 121, "Section"],
Cell[CellGroupData[{
Cell[242803, 4700, 101, 1, 92, "Subsection"],
Cell[CellGroupData[{
Cell[242929, 4705, 523, 13, 86, "Item"],
Cell[243455, 4720, 216, 2, 51, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[243720, 4728, 109, 1, 92, "Subsection"],
Cell[243832, 4731, 478, 11, 130, "Text"],
Cell[244313, 4744, 693, 22, 63, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[245067, 4773, 64, 1, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[245156, 4778, 152, 2, 92, "Subsection"],
Cell[CellGroupData[{
Cell[245333, 4784, 105, 1, 73, "Subsubsection"],
Cell[245441, 4787, 1471, 54, 343, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246949, 4846, 108, 1, 73, "Subsubsection"],
Cell[247060, 4849, 532, 14, 54, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247629, 4868, 101, 1, 73, "Subsubsection"],
Cell[247733, 4871, 889, 28, 67, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[248683, 4906, 64, 1, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[248772, 4911, 111, 1, 92, "Subsection"],
Cell[248886, 4914, 2202, 67, 247, "Text"],
Cell[251091, 4983, 815, 26, 67, "Text"],
Cell[CellGroupData[{
Cell[251931, 5013, 190, 4, 51, "Item"],
Cell[252124, 5019, 122, 1, 51, "Item"],
Cell[252249, 5022, 105, 1, 51, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[252415, 5030, 64, 1, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[252504, 5035, 115, 1, 92, "Subsection"],
Cell[252622, 5038, 2027, 71, 631, "Text"],
Cell[254652, 5111, 545, 16, 58, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[255246, 5133, 64, 1, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[255335, 5138, 100, 1, 92, "Subsection"],
Cell[255438, 5141, 678, 18, 134, "Text"],
Cell[CellGroupData[{
Cell[256141, 5163, 3388, 99, 454, "Input"],
Cell[259532, 5264, 57628, 1008, 384, "Output"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[317218, 6279, 64, 1, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[317307, 6284, 402, 10, 92, "Subsection"],
Cell[317712, 6296, 138, 1, 54, "Text"],
Cell[CellGroupData[{
Cell[317875, 6301, 3389, 99, 431, "Input"],
Cell[321267, 6402, 45955, 818, 381, "Output"]
}, {2}]],
Cell[367234, 7223, 136, 1, 51, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[367419, 7230, 64, 1, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[367508, 7235, 107, 1, 92, "Subsection"],
Cell[CellGroupData[{
Cell[367640, 7240, 20306, 532, 2322, "Input"],
Cell[387949, 7774, 6615, 132, 800, "Output"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[394622, 7913, 64, 1, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[394711, 7918, 100, 1, 121, "Section"],
Cell[CellGroupData[{
Cell[394836, 7923, 321, 5, 121, "Item"],
Cell[395160, 7930, 284, 5, 86, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[395493, 7941, 97, 1, 121, "Section"],
Cell[CellGroupData[{
Cell[395615, 7946, 275, 5, 86, "Item"],
Cell[395893, 7953, 153, 3, 51, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[396107, 7963, 64, 1, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[396174, 7966, 125, 1, 290, "Title"],
Cell[396302, 7969, 263, 11, 244, "Text"]
}, Open  ]]
}
]
*)

